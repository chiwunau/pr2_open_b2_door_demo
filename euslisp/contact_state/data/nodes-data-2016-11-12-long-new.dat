(setq *all-nodes* '(#1=#s(extended-node plist ((:name . "r-0-0-0")) arc-list (#s(costed-arc plist nil from #1# to #2=#s(extended-node plist ((:name . "r-0-1-rk")) arc-list (#s(costed-arc plist nil from #2# to #3=#s(extended-node plist ((:name . "r-0-2-rk")) arc-list (#s(costed-arc plist nil from #3# to #4=#s(extended-node plist ((:name . "r-0-3-rk")) arc-list (#s(costed-arc plist nil from #4# to #5=#s(extended-node plist ((:name . "r-0-4-rk")) arc-list (#s(costed-arc plist nil from #5# to #968=#s(extended-node plist ((:name . "goal")) arc-list nil arm nil islands nil contact-point-index nil contact-point nil contact-type nil graph-depth nil door-angle nil solved nil robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(125.489 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.3244 13.8618 -59.1167 -118.343 -132.86 -42.7455 305.986 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.942017 -0.335566 0.0) (0.335566 0.942017 0.0) (0.0 0.0 1.0)) pos #f(-401.92 512.017 0.0)) base-coords-optimized nil object-coords-index rk object-coords #148=#s(cascaded-coords plist ((:name . "rear-knob-coords")) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #10=#s(bodyset-link plist ((:pqpmodel . 113717632) (:name . rear-knob) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(125.0 0.0 0.0) parent #9=#s(bodyset-link plist ((:pqpmodel . 113603696) (:name . front-knob) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(-37.5 -700.0 1000.0) parent #8=#s(bodyset-link plist ((:pqpmodel . 106584976) (:name . door-plate) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0) parent #6=#s(bodyset-link plist ((:pqpmodel . 114135392) (:name . door-hinge) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 0.0 0.0) parent #7=#s(door plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0) parent nil descendants (#6#) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0)) manager #7# changed nil links (#6# #8# #9# #10# #11=#s(bodyset-link plist ((:pqpmodel . 106584608) (:name . wall) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0) parent #6# descendants (#12=#s(body plist ((:face-color . #f(0.742188 0.742188 0.742188 0.8)) (:gl-displaylist-id (106107744 . 72)) (:volume . 7.950000e+07) (:centroid . #f(0.0 -1.464344e-16 -1.862645e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(25.0 -1192.5 1000.0) parent #11# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(725.0 -517.5 1000.0)) manager #12# changed nil box #s(bounding-box geometry::minpoint #f(699.6 -921.36 -16.0) geometry::maxpoint #f(750.4 -113.64 2016.0)) faces (#18=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 0.0 convexp t edges (#33=#s(edge plist nil pvert #13=#f(750.0 -120.0 0.0) nvert #14=#f(700.0 -120.0 0.0) pface #16=#s(face plist nil normal #f(0.0 1.0 0.0) distance 120.0 convexp t edges (#31=#s(edge plist nil pvert #13# nvert #22=#f(750.0 -120.0 2000.0) pface #27=#s(face plist nil normal #f(1.0 0.0 0.0) distance -750.0 convexp t edges (#29=#s(edge plist nil pvert #28=#f(750.0 -915.0 0.0) nvert #25=#f(750.0 -915.0 2000.0) pface #26=#s(face plist nil normal #f(0.0 -1.0 0.0) distance -915.0 convexp t edges (#19=#s(edge plist nil pvert #17=#f(700.0 -915.0 0.0) nvert #21=#f(700.0 -915.0 2000.0) pface #15=#s(face plist nil normal #f(-1.0 0.0 0.0) distance 700.0 convexp t edges (#34=#s(edge plist nil pvert #20=#f(700.0 -120.0 2000.0) nvert #14# pface #15# nface #16# angle 1.5708 flags 0) #38=#s(edge plist nil pvert #14# nvert #17# pface #15# nface #18# angle 1.5708 flags 0) #19# #24=#s(edge plist nil pvert #20# nvert #21# pface #23=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#35=#s(edge plist nil pvert #22# nvert #20# pface #23# nface #16# angle 1.5708 flags 0) #24# #30=#s(edge plist nil pvert #21# nvert #25# pface #23# nface #26# angle 1.5708 flags 0) #32=#s(edge plist nil pvert #25# nvert #22# pface #23# nface #27# angle 1.5708 flags 0)) vertices (#22# #20# #21# #25# #22#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #12# primitive-face #23# id (:top)) nface #15# angle 1.5708 flags 0)) vertices (#20# #14# #17# #21# #20#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #12# primitive-face #15# id (:side 0 :-x)) nface #26# angle 1.5708 flags 0) #37=#s(edge plist nil pvert #17# nvert #28# pface #26# nface #18# angle 1.5708 flags 0) #29# #30#) vertices (#21# #17# #28# #25# #21#) model-normal #f(0.0 -1.0 0.0) model-distance -397.5 holes nil mbody #12# primitive-face #26# id (:side 1 :-y)) nface #27# angle 1.5708 flags 0) #36=#s(edge plist nil pvert #28# nvert #13# pface #27# nface #18# angle 1.5708 flags 0) #31# #32#) vertices (#25# #28# #13# #22# #25#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #12# primitive-face #27# id (:side 2 :x)) nface #16# angle 1.5708 flags 0) #33# #34# #35#) vertices (#22# #13# #14# #20# #22#) model-normal #f(0.0 1.0 0.0) model-distance -397.5 holes nil mbody #12# primitive-face #16# id (:side 3 :y)) nface #18# angle 1.5708 flags 0) #36# #37# #38#) vertices (#14# #13# #28# #17# #14#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #12# primitive-face #18# id (:bottom)) #23# #16# #27# #26# #15#) edges (#33# #35# #36# #31# #32# #37# #29# #30# #34# #38# #19# #24#) vertices (#13# #22# #28# #25# #14# #17# #21# #20#) model-vertices (#f(25.0 397.5 -1000.0) #f(25.0 397.5 1000.0) #f(25.0 -397.5 -1000.0) #f(25.0 -397.5 1000.0) #f(-25.0 397.5 -1000.0) #f(-25.0 -397.5 -1000.0) #f(-25.0 -397.5 1000.0) #f(-25.0 397.5 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 795.0 2000.0)))) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 675.0 0.0)) manager #11# changed nil geometry::bodies (#12#) joint nil parent-link nil child-links nil analysis-level :body default-coords nil weight 1 acentroid #931=#f(0.0 0.0 0.0) inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0))) joint-list (#161=#s(rotational-joint plist ((:name . j1)) parent-link #6# child-link #8# joint-angle -20 min-angle -100 max-angle 100 default-coords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0)) joint-velocity 0.0 joint-acceleration 0.0 joint-torque 0.0 max-joint-velocity 5 max-joint-torque 100 joint-min-max-table nil joint-min-max-target nil axis :z) #162=#s(rotational-joint plist ((:name . j1)) parent-link #8# child-link #9# joint-angle 0.0 min-angle -60 max-angle 0 default-coords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(-37.5 -700.0 1000.0)) joint-velocity 0.0 joint-acceleration 0.0 joint-torque 0.0 max-joint-velocity 5 max-joint-torque 100 joint-min-max-table nil joint-min-max-target nil axis :x)) bodies (#39=#s(body plist ((:face-color . #f(0.742188 0.742188 0.742188)) (:gl-displaylist-id (106107744 . 68)) (:volume . 5.000000e+06) (:centroid . #f(0.0 -2.182787e-16 -3.725290e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 0.0 1000.0) parent #6# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 1000.0)) manager #39# changed nil box #s(bounding-box geometry::minpoint #f(674.6 674.6 -16.0) geometry::maxpoint #f(725.4 725.4 2016.0)) faces (#45=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 0.0 convexp t edges (#60=#s(edge plist nil pvert #40=#f(725.0 725.0 0.0) nvert #41=#f(675.0 725.0 0.0) pface #43=#s(face plist nil normal #f(0.0 1.0 0.0) distance -725.0 convexp t edges (#58=#s(edge plist nil pvert #40# nvert #49=#f(725.0 725.0 2000.0) pface #54=#s(face plist nil normal #f(1.0 0.0 0.0) distance -725.0 convexp t edges (#56=#s(edge plist nil pvert #55=#f(725.0 675.0 0.0) nvert #52=#f(725.0 675.0 2000.0) pface #53=#s(face plist nil normal #f(0.0 -1.0 0.0) distance 675.0 convexp t edges (#46=#s(edge plist nil pvert #44=#f(675.0 675.0 0.0) nvert #48=#f(675.0 675.0 2000.0) pface #42=#s(face plist nil normal #f(-1.0 0.0 0.0) distance 675.0 convexp t edges (#61=#s(edge plist nil pvert #47=#f(675.0 725.0 2000.0) nvert #41# pface #42# nface #43# angle 1.5708 flags 0) #65=#s(edge plist nil pvert #41# nvert #44# pface #42# nface #45# angle 1.5708 flags 0) #46# #51=#s(edge plist nil pvert #47# nvert #48# pface #50=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#62=#s(edge plist nil pvert #49# nvert #47# pface #50# nface #43# angle 1.5708 flags 0) #51# #57=#s(edge plist nil pvert #48# nvert #52# pface #50# nface #53# angle 1.5708 flags 0) #59=#s(edge plist nil pvert #52# nvert #49# pface #50# nface #54# angle 1.5708 flags 0)) vertices (#49# #47# #48# #52# #49#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #39# primitive-face #50# id (:top)) nface #42# angle 1.5708 flags 0)) vertices (#47# #41# #44# #48# #47#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #39# primitive-face #42# id (:side 0 :-x)) nface #53# angle 1.5708 flags 0) #64=#s(edge plist nil pvert #44# nvert #55# pface #53# nface #45# angle 1.5708 flags 0) #56# #57#) vertices (#48# #44# #55# #52# #48#) model-normal #f(0.0 -1.0 0.0) model-distance -25.0 holes nil mbody #39# primitive-face #53# id (:side 1 :-y)) nface #54# angle 1.5708 flags 0) #63=#s(edge plist nil pvert #55# nvert #40# pface #54# nface #45# angle 1.5708 flags 0) #58# #59#) vertices (#52# #55# #40# #49# #52#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #39# primitive-face #54# id (:side 2 :x)) nface #43# angle 1.5708 flags 0) #60# #61# #62#) vertices (#49# #40# #41# #47# #49#) model-normal #f(0.0 1.0 0.0) model-distance -25.0 holes nil mbody #39# primitive-face #43# id (:side 3 :y)) nface #45# angle 1.5708 flags 0) #63# #64# #65#) vertices (#41# #40# #55# #44# #41#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #39# primitive-face #45# id (:bottom)) #50# #43# #54# #53# #42#) edges (#60# #62# #63# #58# #59# #64# #56# #57# #61# #65# #46# #51#) vertices (#40# #49# #55# #52# #41# #44# #48# #47#) model-vertices (#f(25.0 25.0 -1000.0) #f(25.0 25.0 1000.0) #f(25.0 -25.0 -1000.0) #f(25.0 -25.0 1000.0) #f(-25.0 25.0 -1000.0) #f(-25.0 -25.0 -1000.0) #f(-25.0 -25.0 1000.0) #f(-25.0 25.0 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 50.0 2000.0))) #66=#s(body plist ((:face-color . #f(0.996094 0.996094 0.0 0.8)) (:gl-displaylist-id (106107744 . 69)) (:volume . 7.950000e+07) (:centroid . #f(0.0 -1.464344e-16 -1.862645e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(25.0 -397.5 1000.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(587.539 292.922 1000.0)) manager #66# changed nil box #s(bounding-box geometry::minpoint #f(425.543 -95.2699 -16.0) geometry::maxpoint #f(749.536 681.113 2016.0)) faces (#72=#s(face plist nil normal #f(0.0 0.0 -1.0) distance -2.273737e-13 convexp t edges (#87=#s(edge plist nil pvert #67=#f(746.985 657.899 -2.273737e-13) nvert #68=#f(700.0 675.0 -2.273737e-13) pface #70=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -873.707 convexp t edges (#85=#s(edge plist nil pvert #67# nvert #76=#f(746.985 657.899 2000.0) pface #81=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -476.921 convexp t edges (#83=#s(edge plist nil pvert #82=#f(475.079 -89.1566 -2.273737e-13) nvert #79=#f(475.079 -89.1566 2000.0) pface #80=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 78.7066 convexp t edges (#73=#s(edge plist nil pvert #71=#f(428.094 -72.0556 -2.273737e-13) nvert #75=#f(428.094 -72.0556 2000.0) pface #69=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 426.921 convexp t edges (#88=#s(edge plist nil pvert #74=#f(700.0 675.0 2000.0) nvert #68# pface #69# nface #70# angle 1.5708 flags 0) #92=#s(edge plist nil pvert #68# nvert #71# pface #69# nface #72# angle 1.5708 flags 0) #73# #78=#s(edge plist nil pvert #74# nvert #75# pface #77=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#89=#s(edge plist nil pvert #76# nvert #74# pface #77# nface #70# angle 1.5708 flags 0) #78# #84=#s(edge plist nil pvert #75# nvert #79# pface #77# nface #80# angle 1.5708 flags 0) #86=#s(edge plist nil pvert #79# nvert #76# pface #77# nface #81# angle 1.5708 flags 0)) vertices (#76# #74# #75# #79# #76#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #66# primitive-face #77# id (:top)) nface #69# angle 1.5708 flags 0)) vertices (#74# #68# #71# #75# #74#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #66# primitive-face #69# id (:side 0 :-x)) nface #80# angle 1.5708 flags 0) #91=#s(edge plist nil pvert #71# nvert #82# pface #80# nface #72# angle 1.5708 flags 0) #83# #84#) vertices (#75# #71# #82# #79# #75#) model-normal #f(0.0 -1.0 0.0) model-distance -397.5 holes nil mbody #66# primitive-face #80# id (:side 1 :-y)) nface #81# angle 1.5708 flags 0) #90=#s(edge plist nil pvert #82# nvert #67# pface #81# nface #72# angle 1.5708 flags 0) #85# #86#) vertices (#79# #82# #67# #76# #79#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #66# primitive-face #81# id (:side 2 :x)) nface #70# angle 1.5708 flags 0) #87# #88# #89#) vertices (#76# #67# #68# #74# #76#) model-normal #f(0.0 1.0 0.0) model-distance -397.5 holes nil mbody #66# primitive-face #70# id (:side 3 :y)) nface #72# angle 1.5708 flags 0) #90# #91# #92#) vertices (#68# #67# #82# #71# #68#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #66# primitive-face #72# id (:bottom)) #77# #70# #81# #80# #69#) edges (#87# #89# #90# #85# #86# #91# #83# #84# #88# #92# #73# #78#) vertices (#67# #76# #82# #79# #68# #71# #75# #74#) model-vertices (#f(25.0 397.5 -1000.0) #f(25.0 397.5 1000.0) #f(25.0 -397.5 -1000.0) #f(25.0 -397.5 1000.0) #f(-25.0 397.5 -1000.0) #f(-25.0 -397.5 -1000.0) #f(-25.0 -397.5 1000.0) #f(-25.0 397.5 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 795.0 2000.0))) #93=#s(body plist ((:face-color . #120=#f(0.996094 0.0 0.0)) (:gl-displaylist-id (106107744 . 70)) (:volume . 75000.0) (:centroid . #f(0.0 -2.728484e-16 -1.818989e-16))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #9# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(442.448 77.0256 1000.0)) manager #93# changed nil box #s(bounding-box geometry::minpoint #f(410.753 24.0768 987.3) geometry::maxpoint #f(474.144 129.974 1012.7)) faces (#99=#s(face plist nil normal #f(2.425319e-15 0.0 -1.0) distance 987.5 convexp t edges (#114=#s(edge plist nil pvert #94=#f(473.645 118.88 987.5) nvert #95=#f(445.454 129.14 987.5) pface #97=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -273.707 convexp t edges (#112=#s(edge plist nil pvert #94# nvert #103=#f(473.645 118.88 1012.5) pface #108=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -404.421 convexp t edges (#110=#s(edge plist nil pvert #109=#f(439.443 24.9106 987.5) nvert #106=#f(439.443 24.9106 1012.5) pface #107=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 173.707 convexp t edges (#100=#s(edge plist nil pvert #98=#f(411.252 35.1712 987.5) nvert #102=#f(411.252 35.1712 1012.5) pface #96=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 374.421 convexp t edges (#115=#s(edge plist nil pvert #101=#f(445.454 129.14 1012.5) nvert #95# pface #96# nface #97# angle 1.5708 flags 0) #119=#s(edge plist nil pvert #95# nvert #98# pface #96# nface #99# angle 1.5708 flags 0) #100# #105=#s(edge plist nil pvert #101# nvert #102# pface #104=#s(face plist nil normal #f(0.0 0.0 1.0) distance -1012.5 convexp t edges (#116=#s(edge plist nil pvert #103# nvert #101# pface #104# nface #97# angle 1.5708 flags 0) #105# #111=#s(edge plist nil pvert #102# nvert #106# pface #104# nface #107# angle 1.5708 flags 0) #113=#s(edge plist nil pvert #106# nvert #103# pface #104# nface #108# angle 1.5708 flags 0)) vertices (#103# #101# #102# #106# #103#) model-normal #f(0.0 0.0 1.0) model-distance -12.5 holes nil mbody #93# primitive-face #104# id (:top)) nface #96# angle 1.5708 flags 0)) vertices (#101# #95# #98# #102# #101#) model-normal #f(-1.0 0.0 0.0) model-distance -15.0 holes nil mbody #93# primitive-face #96# id (:side 0 :-x)) nface #107# angle 1.5708 flags 0) #118=#s(edge plist nil pvert #98# nvert #109# pface #107# nface #99# angle 1.5708 flags 0) #110# #111#) vertices (#102# #98# #109# #106# #102#) model-normal #f(0.0 -1.0 0.0) model-distance -50.0 holes nil mbody #93# primitive-face #107# id (:side 1 :-y)) nface #108# angle 1.5708 flags 0) #117=#s(edge plist nil pvert #109# nvert #94# pface #108# nface #99# angle 1.5708 flags 0) #112# #113#) vertices (#106# #109# #94# #103# #106#) model-normal #f(1.0 0.0 0.0) model-distance -15.0 holes nil mbody #93# primitive-face #108# id (:side 2 :x)) nface #97# angle 1.5708 flags 0) #114# #115# #116#) vertices (#103# #94# #95# #101# #103#) model-normal #f(0.0 1.0 0.0) model-distance -50.0 holes nil mbody #93# primitive-face #97# id (:side 3 :y)) nface #99# angle 1.5708 flags 0) #117# #118# #119#) vertices (#95# #94# #109# #98# #95#) model-normal #f(0.0 0.0 -1.0) model-distance -12.5 holes nil mbody #93# primitive-face #99# id (:bottom)) #104# #97# #108# #107# #96#) edges (#114# #116# #117# #112# #113# #118# #110# #111# #115# #119# #100# #105#) vertices (#94# #103# #109# #106# #95# #98# #102# #101#) model-vertices (#f(15.0 50.0 -12.5) #f(15.0 50.0 12.5) #f(15.0 -50.0 -12.5) #f(15.0 -50.0 12.5) #f(-15.0 50.0 -12.5) #f(-15.0 -50.0 -12.5) #f(-15.0 -50.0 12.5) #f(-15.0 50.0 12.5)) convexp t geometry::evertedp nil csg ((:cube 30.0 100.0 25.0))) #121=#s(body plist ((:face-color . #120#) (:gl-displaylist-id (106107744 . 71)) (:volume . 75000.0) (:centroid . #f(0.0 -2.728484e-16 -1.818989e-16))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #10# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(559.91 34.273 1000.0)) manager #121# changed nil box #s(bounding-box geometry::minpoint #f(528.214 -18.6757 987.3) geometry::maxpoint #f(591.606 87.2218 1012.7)) faces (#127=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 987.5 convexp t edges (#142=#s(edge plist nil pvert #122=#f(591.106 76.1274 987.5) nvert #123=#f(562.916 86.388 987.5) pface #125=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -273.707 convexp t edges (#140=#s(edge plist nil pvert #122# nvert #131=#f(591.106 76.1274 1012.5) pface #136=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -529.421 convexp t edges (#138=#s(edge plist nil pvert #137=#f(556.904 -17.8419 987.5) nvert #134=#f(556.904 -17.8419 1012.5) pface #135=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 173.707 convexp t edges (#128=#s(edge plist nil pvert #126=#f(528.714 -7.58129 987.5) nvert #130=#f(528.714 -7.58129 1012.5) pface #124=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 499.421 convexp t edges (#143=#s(edge plist nil pvert #129=#f(562.916 86.388 1012.5) nvert #123# pface #124# nface #125# angle 1.5708 flags 0) #147=#s(edge plist nil pvert #123# nvert #126# pface #124# nface #127# angle 1.5708 flags 0) #128# #133=#s(edge plist nil pvert #129# nvert #130# pface #132=#s(face plist nil normal #f(2.425319e-15 0.0 1.0) distance -1012.5 convexp t edges (#144=#s(edge plist nil pvert #131# nvert #129# pface #132# nface #125# angle 1.5708 flags 0) #133# #139=#s(edge plist nil pvert #130# nvert #134# pface #132# nface #135# angle 1.5708 flags 0) #141=#s(edge plist nil pvert #134# nvert #131# pface #132# nface #136# angle 1.5708 flags 0)) vertices (#131# #129# #130# #134# #131#) model-normal #f(0.0 0.0 1.0) model-distance -12.5 holes nil mbody #121# primitive-face #132# id (:top)) nface #124# angle 1.5708 flags 0)) vertices (#129# #123# #126# #130# #129#) model-normal #f(-1.0 0.0 0.0) model-distance -15.0 holes nil mbody #121# primitive-face #124# id (:side 0 :-x)) nface #135# angle 1.5708 flags 0) #146=#s(edge plist nil pvert #126# nvert #137# pface #135# nface #127# angle 1.5708 flags 0) #138# #139#) vertices (#130# #126# #137# #134# #130#) model-normal #f(0.0 -1.0 0.0) model-distance -50.0 holes nil mbody #121# primitive-face #135# id (:side 1 :-y)) nface #136# angle 1.5708 flags 0) #145=#s(edge plist nil pvert #137# nvert #122# pface #136# nface #127# angle 1.5708 flags 0) #140# #141#) vertices (#134# #137# #122# #131# #134#) model-normal #f(1.0 0.0 0.0) model-distance -15.0 holes nil mbody #121# primitive-face #136# id (:side 2 :x)) nface #125# angle 1.5708 flags 0) #142# #143# #144#) vertices (#131# #122# #123# #129# #131#) model-normal #f(0.0 1.0 0.0) model-distance -50.0 holes nil mbody #121# primitive-face #125# id (:side 3 :y)) nface #127# angle 1.5708 flags 0) #145# #146# #147#) vertices (#123# #122# #137# #126# #123#) model-normal #f(0.0 0.0 -1.0) model-distance -12.5 holes nil mbody #121# primitive-face #127# id (:bottom)) #132# #125# #136# #135# #124#) edges (#142# #144# #145# #140# #141# #146# #138# #139# #143# #147# #128# #133#) vertices (#122# #131# #137# #134# #123# #126# #130# #129#) model-vertices (#f(15.0 50.0 -12.5) #f(15.0 50.0 12.5) #f(15.0 -50.0 -12.5) #f(15.0 -50.0 12.5) #f(-15.0 50.0 -12.5) #f(-15.0 -50.0 -12.5) #f(-15.0 -50.0 12.5) #f(-15.0 50.0 12.5)) convexp t geometry::evertedp nil csg ((:cube 30.0 100.0 25.0))) #12#) collision-avoidance-links nil end-coords-list nil rear-knob-coords #148# front-knob-coords #149=#s(cascaded-coords plist ((:name . "front-knob-coords")) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #9# descendants (#150=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 -0.984808) (-0.984808 -5.551115e-17 0.173648) (0.0 1.0 1.665335e-16)) pos #f(66.3868 824.802 1000.0)) manager #150# changed t) #151=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 -0.984808) (-0.984808 5.551115e-17 -0.173648) (5.551115e-17 1.0 1.665335e-16)) pos #f(53.3632 599.059 1000.0)) manager #151# changed t) #152=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 1.665335e-16 -0.866025) (-0.866025 1.110223e-16 -0.5) (0.0 1.0 2.081668e-16)) pos #f(118.333 382.476 1000.0)) manager #152# changed t) #153=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 1.110223e-16 -0.642788) (-0.642788 1.387779e-16 -0.766044) (0.0 1.0 1.942890e-16)) pos #f(253.461 201.176 1000.0)) manager #153# changed t) #154=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 5.551115e-17 -0.34202) (-0.34202 1.630640e-16 -0.939693) (0.0 1.0 1.700029e-16)) pos #f(442.448 77.0256 1000.0)) manager #154# changed t) #155=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 -0.984808) (-0.984808 -5.551115e-17 0.173648) (0.0 1.0 1.665335e-16)) pos #f(66.3868 824.802 1000.0)) manager #155# changed t) #156=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 -0.984808) (-0.984808 5.551115e-17 -0.173648) (5.551115e-17 1.0 1.665335e-16)) pos #f(53.3632 599.059 1000.0)) manager #156# changed t) #157=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 1.665335e-16 -0.866025) (-0.866025 1.110223e-16 -0.5) (0.0 1.0 2.081668e-16)) pos #f(118.333 382.476 1000.0)) manager #157# changed t) #158=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 1.110223e-16 -0.642788) (-0.642788 1.387779e-16 -0.766044) (0.0 1.0 1.942890e-16)) pos #f(253.461 201.176 1000.0)) manager #158# changed t) #159=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #149# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 5.551115e-17 -0.34202) (-0.34202 1.630640e-16 -0.939693) (0.0 1.0 1.700029e-16)) pos #f(442.448 77.0256 1000.0)) manager #159# changed t)) worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(66.3868 824.802 1000.0)) manager #149# changed t) end-coords #160=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #9# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0)) manager #160# changed t) l1 #6# l2 #8# l3 #9# j1 #161# j2 #162# door-radius nil door-width 795 door-thickness 50 knob-height nil knob-radius nil front-touch-cds-list (#163=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1250.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1250.0)) manager #163# changed t) #164=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1167.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1167.0)) manager #164# changed t) #165=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1084.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1084.0)) manager #165# changed t) #166=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1001.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1001.0)) manager #166# changed t) #167=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 918.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 918.0)) manager #167# changed t) #168=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 835.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 835.0)) manager #168# changed t) #169=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1250.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1250.0)) manager #169# changed t) #170=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1167.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1167.0)) manager #170# changed t) #171=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1084.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1084.0)) manager #171# changed t) #172=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1001.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1001.0)) manager #172# changed t) #173=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 918.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 918.0)) manager #173# changed t) #174=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 835.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 835.0)) manager #174# changed t) #175=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1250.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1250.0)) manager #175# changed t) #176=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1167.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1167.0)) manager #176# changed t) #177=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1084.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1084.0)) manager #177# changed t) #178=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1001.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1001.0)) manager #178# changed t) #179=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 918.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 918.0)) manager #179# changed t) #180=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 835.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 835.0)) manager #180# changed t) #181=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1250.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1250.0)) manager #181# changed t) #182=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1167.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1167.0)) manager #182# changed t) #183=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1084.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1084.0)) manager #183# changed t) #184=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1001.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1001.0)) manager #184# changed t) #185=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 918.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 918.0)) manager #185# changed t) #186=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 835.0) parent #8# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 835.0)) manager #186# changed t)) rear-touch-cds-list (#187=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1400.0) parent #8# descendants (#188=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #188# changed t) #189=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #189# changed t) #190=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #190# changed t) #191=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #191# changed t) #192=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #192# changed t) #193=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #193# changed t) #194=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #194# changed t) #195=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #195# changed t) #196=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #196# changed t) #197=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #197# changed t) #198=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1400.0)) manager #198# changed t) #199=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1400.0)) manager #199# changed t) #200=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1400.0)) manager #200# changed t) #201=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1400.0)) manager #201# changed t) #202=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1400.0)) manager #202# changed t) #203=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #203# changed t) #204=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #204# changed t) #205=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #205# changed t) #206=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #206# changed t) #207=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #207# changed t) #208=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #208# changed t) #209=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #209# changed t) #210=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #210# changed t) #211=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #211# changed t) #212=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #212# changed t) #213=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1400.0)) manager #213# changed t) #214=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1400.0)) manager #214# changed t) #215=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1400.0)) manager #215# changed t) #216=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1400.0)) manager #216# changed t) #217=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #187# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1400.0)) manager #217# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1400.0)) manager #187# changed nil) #218=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1234.37) parent #8# descendants (#219=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #219# changed t) #220=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #220# changed t) #221=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #221# changed t) #222=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #222# changed t) #223=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #223# changed t) #224=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #224# changed t) #225=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #225# changed t) #226=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #226# changed t) #227=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #227# changed t) #228=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #228# changed t) #229=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1234.37)) manager #229# changed t) #230=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1234.37)) manager #230# changed t) #231=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1234.37)) manager #231# changed t) #232=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1234.37)) manager #232# changed t) #233=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1234.37)) manager #233# changed t) #234=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #234# changed t) #235=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #235# changed t) #236=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #236# changed t) #237=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #237# changed t) #238=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #238# changed t) #239=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #239# changed t) #240=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #240# changed t) #241=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #241# changed t) #242=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #242# changed t) #243=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #243# changed t) #244=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1234.37)) manager #244# changed t) #245=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1234.37)) manager #245# changed t) #246=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1234.37)) manager #246# changed t) #247=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1234.37)) manager #247# changed t) #248=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #218# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1234.37)) manager #248# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1234.37)) manager #218# changed nil) #249=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1068.75) parent #8# descendants (#250=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #250# changed t) #251=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #251# changed t) #252=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #252# changed t) #253=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #253# changed t) #254=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #254# changed t) #255=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #255# changed t) #256=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #256# changed t) #257=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #257# changed t) #258=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #258# changed t) #259=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #259# changed t) #260=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1068.75)) manager #260# changed t) #261=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1068.75)) manager #261# changed t) #262=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1068.75)) manager #262# changed t) #263=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1068.75)) manager #263# changed t) #264=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1068.75)) manager #264# changed t) #265=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #265# changed t) #266=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #266# changed t) #267=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #267# changed t) #268=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #268# changed t) #269=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #269# changed t) #270=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #270# changed t) #271=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #271# changed t) #272=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #272# changed t) #273=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #273# changed t) #274=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #274# changed t) #275=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1068.75)) manager #275# changed t) #276=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1068.75)) manager #276# changed t) #277=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1068.75)) manager #277# changed t) #278=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1068.75)) manager #278# changed t) #279=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #249# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1068.75)) manager #279# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1068.75)) manager #249# changed nil) #280=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 903.125) parent #8# descendants (#281=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #281# changed t) #282=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #282# changed t) #283=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #283# changed t) #284=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #284# changed t) #285=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #285# changed t) #286=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #286# changed t) #287=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #287# changed t) #288=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #288# changed t) #289=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #289# changed t) #290=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #290# changed t) #291=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 903.125)) manager #291# changed t) #292=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 903.125)) manager #292# changed t) #293=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 903.125)) manager #293# changed t) #294=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 903.125)) manager #294# changed t) #295=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 903.125)) manager #295# changed t) #296=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #296# changed t) #297=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #297# changed t) #298=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #298# changed t) #299=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #299# changed t) #300=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #300# changed t) #301=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #301# changed t) #302=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #302# changed t) #303=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #303# changed t) #304=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #304# changed t) #305=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #305# changed t) #306=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 903.125)) manager #306# changed t) #307=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 903.125)) manager #307# changed t) #308=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 903.125)) manager #308# changed t) #309=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 903.125)) manager #309# changed t) #310=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #280# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 903.125)) manager #310# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 903.125)) manager #280# changed nil) #311=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 737.5) parent #8# descendants (#312=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #312# changed t) #313=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #313# changed t) #314=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #314# changed t) #315=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #315# changed t) #316=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #316# changed t) #317=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #317# changed t) #318=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #318# changed t) #319=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #319# changed t) #320=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #320# changed t) #321=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #321# changed t) #322=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 737.5)) manager #322# changed t) #323=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 737.5)) manager #323# changed t) #324=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 737.5)) manager #324# changed t) #325=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 737.5)) manager #325# changed t) #326=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 737.5)) manager #326# changed t) #327=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #327# changed t) #328=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #328# changed t) #329=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #329# changed t) #330=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #330# changed t) #331=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #331# changed t) #332=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #332# changed t) #333=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #333# changed t) #334=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #334# changed t) #335=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #335# changed t) #336=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #336# changed t) #337=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 737.5)) manager #337# changed t) #338=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 737.5)) manager #338# changed t) #339=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 737.5)) manager #339# changed t) #340=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 737.5)) manager #340# changed t) #341=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #311# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 737.5)) manager #341# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 737.5)) manager #311# changed nil) #342=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 571.875) parent #8# descendants (#343=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #343# changed t) #344=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #344# changed t) #345=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #345# changed t) #346=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #346# changed t) #347=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #347# changed t) #348=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #348# changed t) #349=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #349# changed t) #350=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #350# changed t) #351=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #351# changed t) #352=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #352# changed t) #353=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 571.875)) manager #353# changed t) #354=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 571.875)) manager #354# changed t) #355=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 571.875)) manager #355# changed t) #356=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 571.875)) manager #356# changed t) #357=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 571.875)) manager #357# changed t) #358=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #358# changed t) #359=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #359# changed t) #360=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #360# changed t) #361=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #361# changed t) #362=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #362# changed t) #363=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #363# changed t) #364=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #364# changed t) #365=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #365# changed t) #366=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #366# changed t) #367=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #367# changed t) #368=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 571.875)) manager #368# changed t) #369=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 571.875)) manager #369# changed t) #370=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 571.875)) manager #370# changed t) #371=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 571.875)) manager #371# changed t) #372=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #342# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 571.875)) manager #372# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 571.875)) manager #342# changed nil) #373=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1400.0) parent #8# descendants (#374=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #374# changed t) #375=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #375# changed t) #376=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #376# changed t) #377=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #377# changed t) #378=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #378# changed t) #379=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #379# changed t) #380=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #380# changed t) #381=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #381# changed t) #382=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #382# changed t) #383=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #383# changed t) #384=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1400.0)) manager #384# changed t) #385=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1400.0)) manager #385# changed t) #386=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1400.0)) manager #386# changed t) #387=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1400.0)) manager #387# changed t) #388=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1400.0)) manager #388# changed t) #389=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #389# changed t) #390=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #390# changed t) #391=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #391# changed t) #392=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #392# changed t) #393=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #393# changed t) #394=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #394# changed t) #395=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #395# changed t) #396=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #396# changed t) #397=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #397# changed t) #398=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #398# changed t) #399=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1400.0)) manager #399# changed t) #400=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1400.0)) manager #400# changed t) #401=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1400.0)) manager #401# changed t) #402=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1400.0)) manager #402# changed t) #403=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #373# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1400.0)) manager #403# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1400.0)) manager #373# changed nil) #404=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1234.37) parent #8# descendants (#405=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #405# changed t) #406=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #406# changed t) #407=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #407# changed t) #408=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #408# changed t) #409=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #409# changed t) #410=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #410# changed t) #411=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #411# changed t) #412=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #412# changed t) #413=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #413# changed t) #414=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #414# changed t) #415=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1234.37)) manager #415# changed t) #416=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1234.37)) manager #416# changed t) #417=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1234.37)) manager #417# changed t) #418=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1234.37)) manager #418# changed t) #419=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1234.37)) manager #419# changed t) #420=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #420# changed t) #421=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #421# changed t) #422=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #422# changed t) #423=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #423# changed t) #424=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #424# changed t) #425=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #425# changed t) #426=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #426# changed t) #427=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #427# changed t) #428=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #428# changed t) #429=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #429# changed t) #430=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1234.37)) manager #430# changed t) #431=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1234.37)) manager #431# changed t) #432=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1234.37)) manager #432# changed t) #433=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1234.37)) manager #433# changed t) #434=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #404# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1234.37)) manager #434# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1234.37)) manager #404# changed nil) #435=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1068.75) parent #8# descendants (#436=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #436# changed t) #437=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #437# changed t) #438=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #438# changed t) #439=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #439# changed t) #440=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #440# changed t) #441=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #441# changed t) #442=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #442# changed t) #443=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #443# changed t) #444=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #444# changed t) #445=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #445# changed t) #446=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1068.75)) manager #446# changed t) #447=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1068.75)) manager #447# changed t) #448=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1068.75)) manager #448# changed t) #449=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1068.75)) manager #449# changed t) #450=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1068.75)) manager #450# changed t) #451=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #451# changed t) #452=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #452# changed t) #453=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #453# changed t) #454=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #454# changed t) #455=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #455# changed t) #456=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #456# changed t) #457=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #457# changed t) #458=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #458# changed t) #459=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #459# changed t) #460=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #460# changed t) #461=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1068.75)) manager #461# changed t) #462=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1068.75)) manager #462# changed t) #463=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1068.75)) manager #463# changed t) #464=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1068.75)) manager #464# changed t) #465=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #435# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1068.75)) manager #465# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1068.75)) manager #435# changed nil) #466=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 903.125) parent #8# descendants (#467=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #467# changed t) #468=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #468# changed t) #469=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #469# changed t) #470=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #470# changed t) #471=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #471# changed t) #472=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #472# changed t) #473=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #473# changed t) #474=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #474# changed t) #475=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #475# changed t) #476=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #476# changed t) #477=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 903.125)) manager #477# changed t) #478=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 903.125)) manager #478# changed t) #479=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 903.125)) manager #479# changed t) #480=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 903.125)) manager #480# changed t) #481=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 903.125)) manager #481# changed t) #482=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #482# changed t) #483=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #483# changed t) #484=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #484# changed t) #485=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #485# changed t) #486=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #486# changed t) #487=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #487# changed t) #488=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #488# changed t) #489=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #489# changed t) #490=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #490# changed t) #491=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #491# changed t) #492=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 903.125)) manager #492# changed t) #493=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 903.125)) manager #493# changed t) #494=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 903.125)) manager #494# changed t) #495=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 903.125)) manager #495# changed t) #496=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #466# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 903.125)) manager #496# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 903.125)) manager #466# changed nil) #497=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 737.5) parent #8# descendants (#498=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #498# changed t) #499=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #499# changed t) #500=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #500# changed t) #501=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #501# changed t) #502=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #502# changed t) #503=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #503# changed t) #504=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #504# changed t) #505=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #505# changed t) #506=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #506# changed t) #507=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #507# changed t) #508=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 737.5)) manager #508# changed t) #509=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 737.5)) manager #509# changed t) #510=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 737.5)) manager #510# changed t) #511=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 737.5)) manager #511# changed t) #512=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 737.5)) manager #512# changed t) #513=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #513# changed t) #514=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #514# changed t) #515=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #515# changed t) #516=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #516# changed t) #517=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #517# changed t) #518=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #518# changed t) #519=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #519# changed t) #520=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #520# changed t) #521=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #521# changed t) #522=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #522# changed t) #523=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 737.5)) manager #523# changed t) #524=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 737.5)) manager #524# changed t) #525=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 737.5)) manager #525# changed t) #526=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 737.5)) manager #526# changed t) #527=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #497# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 737.5)) manager #527# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 737.5)) manager #497# changed nil) #528=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 571.875) parent #8# descendants (#529=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #529# changed t) #530=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #530# changed t) #531=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #531# changed t) #532=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #532# changed t) #533=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #533# changed t) #534=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #534# changed t) #535=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #535# changed t) #536=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #536# changed t) #537=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #537# changed t) #538=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #538# changed t) #539=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 571.875)) manager #539# changed t) #540=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 571.875)) manager #540# changed t) #541=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 571.875)) manager #541# changed t) #542=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 571.875)) manager #542# changed t) #543=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 571.875)) manager #543# changed t) #544=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #544# changed t) #545=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #545# changed t) #546=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #546# changed t) #547=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #547# changed t) #548=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #548# changed t) #549=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #549# changed t) #550=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #550# changed t) #551=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #551# changed t) #552=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #552# changed t) #553=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #553# changed t) #554=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 571.875)) manager #554# changed t) #555=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 571.875)) manager #555# changed t) #556=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 571.875)) manager #556# changed t) #557=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 571.875)) manager #557# changed t) #558=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #528# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 571.875)) manager #558# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 571.875)) manager #528# changed nil) #559=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1400.0) parent #8# descendants (#560=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #560# changed t) #561=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #561# changed t) #562=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #562# changed t) #563=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #563# changed t) #564=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #564# changed t) #565=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #565# changed t) #566=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #566# changed t) #567=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #567# changed t) #568=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #568# changed t) #569=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #569# changed t) #570=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1400.0)) manager #570# changed t) #571=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1400.0)) manager #571# changed t) #572=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1400.0)) manager #572# changed t) #573=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1400.0)) manager #573# changed t) #574=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1400.0)) manager #574# changed t) #575=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #575# changed t) #576=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #576# changed t) #577=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #577# changed t) #578=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #578# changed t) #579=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #579# changed t) #580=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #580# changed t) #581=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #581# changed t) #582=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #582# changed t) #583=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #583# changed t) #584=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #584# changed t) #585=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1400.0)) manager #585# changed t) #586=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1400.0)) manager #586# changed t) #587=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1400.0)) manager #587# changed t) #588=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1400.0)) manager #588# changed t) #589=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #559# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1400.0)) manager #589# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1400.0)) manager #559# changed nil) #590=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1234.37) parent #8# descendants (#591=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #591# changed t) #592=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #592# changed t) #593=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #593# changed t) #594=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #594# changed t) #595=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #595# changed t) #596=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #596# changed t) #597=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #597# changed t) #598=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #598# changed t) #599=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #599# changed t) #600=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #600# changed t) #601=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1234.37)) manager #601# changed t) #602=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1234.37)) manager #602# changed t) #603=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1234.37)) manager #603# changed t) #604=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1234.37)) manager #604# changed t) #605=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1234.37)) manager #605# changed t) #606=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #606# changed t) #607=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #607# changed t) #608=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #608# changed t) #609=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #609# changed t) #610=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #610# changed t) #611=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #611# changed t) #612=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #612# changed t) #613=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #613# changed t) #614=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #614# changed t) #615=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #615# changed t) #616=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1234.37)) manager #616# changed t) #617=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1234.37)) manager #617# changed t) #618=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1234.37)) manager #618# changed t) #619=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1234.37)) manager #619# changed t) #620=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #590# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1234.37)) manager #620# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1234.37)) manager #590# changed nil) #621=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1068.75) parent #8# descendants (#622=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #622# changed t) #623=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #623# changed t) #624=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #624# changed t) #625=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #625# changed t) #626=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #626# changed t) #627=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #627# changed t) #628=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #628# changed t) #629=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #629# changed t) #630=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #630# changed t) #631=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #631# changed t) #632=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1068.75)) manager #632# changed t) #633=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1068.75)) manager #633# changed t) #634=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1068.75)) manager #634# changed t) #635=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1068.75)) manager #635# changed t) #636=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1068.75)) manager #636# changed t) #637=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #637# changed t) #638=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #638# changed t) #639=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #639# changed t) #640=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #640# changed t) #641=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #641# changed t) #642=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #642# changed t) #643=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #643# changed t) #644=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #644# changed t) #645=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #645# changed t) #646=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #646# changed t) #647=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1068.75)) manager #647# changed t) #648=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1068.75)) manager #648# changed t) #649=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1068.75)) manager #649# changed t) #650=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1068.75)) manager #650# changed t) #651=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #621# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1068.75)) manager #651# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1068.75)) manager #621# changed nil) #652=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 903.125) parent #8# descendants (#653=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #653# changed t) #654=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #654# changed t) #655=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #655# changed t) #656=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #656# changed t) #657=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #657# changed t) #658=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #658# changed t) #659=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #659# changed t) #660=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #660# changed t) #661=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #661# changed t) #662=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #662# changed t) #663=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 903.125)) manager #663# changed t) #664=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 903.125)) manager #664# changed t) #665=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 903.125)) manager #665# changed t) #666=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 903.125)) manager #666# changed t) #667=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 903.125)) manager #667# changed t) #668=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #668# changed t) #669=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #669# changed t) #670=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #670# changed t) #671=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #671# changed t) #672=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #672# changed t) #673=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #673# changed t) #674=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #674# changed t) #675=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #675# changed t) #676=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #676# changed t) #677=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #677# changed t) #678=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 903.125)) manager #678# changed t) #679=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 903.125)) manager #679# changed t) #680=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 903.125)) manager #680# changed t) #681=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 903.125)) manager #681# changed t) #682=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #652# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 903.125)) manager #682# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 903.125)) manager #652# changed nil) #683=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 737.5) parent #8# descendants (#684=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #684# changed t) #685=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #685# changed t) #686=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #686# changed t) #687=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #687# changed t) #688=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #688# changed t) #689=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #689# changed t) #690=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #690# changed t) #691=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #691# changed t) #692=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #692# changed t) #693=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #693# changed t) #694=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 737.5)) manager #694# changed t) #695=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 737.5)) manager #695# changed t) #696=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 737.5)) manager #696# changed t) #697=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 737.5)) manager #697# changed t) #698=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 737.5)) manager #698# changed t) #699=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #699# changed t) #700=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #700# changed t) #701=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #701# changed t) #702=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #702# changed t) #703=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #703# changed t) #704=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #704# changed t) #705=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #705# changed t) #706=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #706# changed t) #707=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #707# changed t) #708=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #708# changed t) #709=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 737.5)) manager #709# changed t) #710=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 737.5)) manager #710# changed t) #711=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 737.5)) manager #711# changed t) #712=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 737.5)) manager #712# changed t) #713=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #683# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 737.5)) manager #713# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 737.5)) manager #683# changed nil) #714=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 571.875) parent #8# descendants (#715=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #715# changed t) #716=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #716# changed t) #717=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #717# changed t) #718=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #718# changed t) #719=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #719# changed t) #720=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #720# changed t) #721=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #721# changed t) #722=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #722# changed t) #723=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #723# changed t) #724=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #724# changed t) #725=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 571.875)) manager #725# changed t) #726=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 571.875)) manager #726# changed t) #727=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 571.875)) manager #727# changed t) #728=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 571.875)) manager #728# changed t) #729=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 571.875)) manager #729# changed t) #730=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #730# changed t) #731=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #731# changed t) #732=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #732# changed t) #733=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #733# changed t) #734=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #734# changed t) #735=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #735# changed t) #736=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #736# changed t) #737=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #737# changed t) #738=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #738# changed t) #739=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #739# changed t) #740=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 571.875)) manager #740# changed t) #741=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 571.875)) manager #741# changed t) #742=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 571.875)) manager #742# changed t) #743=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 571.875)) manager #743# changed t) #744=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #714# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 571.875)) manager #744# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 571.875)) manager #714# changed nil) #745=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1400.0) parent #8# descendants (#746=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #746# changed t) #747=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #747# changed t) #748=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #748# changed t) #749=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #749# changed t) #750=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #750# changed t) #751=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #751# changed t) #752=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #752# changed t) #753=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #753# changed t) #754=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #754# changed t) #755=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #755# changed t) #756=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1400.0)) manager #756# changed t) #757=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1400.0)) manager #757# changed t) #758=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1400.0)) manager #758# changed t) #759=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1400.0)) manager #759# changed t) #760=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1400.0)) manager #760# changed t) #761=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #761# changed t) #762=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #762# changed t) #763=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #763# changed t) #764=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #764# changed t) #765=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #765# changed t) #766=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #766# changed t) #767=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #767# changed t) #768=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #768# changed t) #769=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #769# changed t) #770=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #770# changed t) #771=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1400.0)) manager #771# changed t) #772=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1400.0)) manager #772# changed t) #773=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1400.0)) manager #773# changed t) #774=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1400.0)) manager #774# changed t) #775=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #745# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1400.0)) manager #775# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1400.0)) manager #745# changed nil) #776=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1234.37) parent #8# descendants (#777=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #777# changed t) #778=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #778# changed t) #779=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #779# changed t) #780=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #780# changed t) #781=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #781# changed t) #782=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #782# changed t) #783=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #783# changed t) #784=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #784# changed t) #785=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #785# changed t) #786=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #786# changed t) #787=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1234.37)) manager #787# changed t) #788=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1234.37)) manager #788# changed t) #789=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1234.37)) manager #789# changed t) #790=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1234.37)) manager #790# changed t) #791=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1234.37)) manager #791# changed t) #792=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #792# changed t) #793=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #793# changed t) #794=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #794# changed t) #795=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #795# changed t) #796=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #796# changed t) #797=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #797# changed t) #798=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #798# changed t) #799=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #799# changed t) #800=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #800# changed t) #801=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #801# changed t) #802=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1234.37)) manager #802# changed t) #803=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1234.37)) manager #803# changed t) #804=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1234.37)) manager #804# changed t) #805=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1234.37)) manager #805# changed t) #806=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #776# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1234.37)) manager #806# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1234.37)) manager #776# changed nil) #807=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1068.75) parent #8# descendants (#808=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #808# changed t) #809=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #809# changed t) #810=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #810# changed t) #811=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #811# changed t) #812=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #812# changed t) #813=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #813# changed t) #814=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #814# changed t) #815=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #815# changed t) #816=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #816# changed t) #817=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #817# changed t) #818=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1068.75)) manager #818# changed t) #819=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1068.75)) manager #819# changed t) #820=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1068.75)) manager #820# changed t) #821=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1068.75)) manager #821# changed t) #822=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1068.75)) manager #822# changed t) #823=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #823# changed t) #824=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #824# changed t) #825=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #825# changed t) #826=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #826# changed t) #827=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #827# changed t) #828=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #828# changed t) #829=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #829# changed t) #830=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #830# changed t) #831=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #831# changed t) #832=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #832# changed t) #833=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1068.75)) manager #833# changed t) #834=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1068.75)) manager #834# changed t) #835=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1068.75)) manager #835# changed t) #836=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1068.75)) manager #836# changed t) #837=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #807# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1068.75)) manager #837# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1068.75)) manager #807# changed nil) #838=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 903.125) parent #8# descendants (#839=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #839# changed t) #840=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #840# changed t) #841=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #841# changed t) #842=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #842# changed t) #843=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #843# changed t) #844=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #844# changed t) #845=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #845# changed t) #846=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #846# changed t) #847=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #847# changed t) #848=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #848# changed t) #849=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 903.125)) manager #849# changed t) #850=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 903.125)) manager #850# changed t) #851=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 903.125)) manager #851# changed t) #852=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 903.125)) manager #852# changed t) #853=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 903.125)) manager #853# changed t) #854=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #854# changed t) #855=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #855# changed t) #856=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #856# changed t) #857=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #857# changed t) #858=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #858# changed t) #859=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #859# changed t) #860=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #860# changed t) #861=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #861# changed t) #862=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #862# changed t) #863=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #863# changed t) #864=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 903.125)) manager #864# changed t) #865=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 903.125)) manager #865# changed t) #866=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 903.125)) manager #866# changed t) #867=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 903.125)) manager #867# changed t) #868=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #838# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 903.125)) manager #868# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 903.125)) manager #838# changed nil) #869=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 737.5) parent #8# descendants (#870=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #870# changed t) #871=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #871# changed t) #872=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #872# changed t) #873=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #873# changed t) #874=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #874# changed t) #875=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #875# changed t) #876=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #876# changed t) #877=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #877# changed t) #878=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #878# changed t) #879=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #879# changed t) #880=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 737.5)) manager #880# changed t) #881=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 737.5)) manager #881# changed t) #882=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 737.5)) manager #882# changed t) #883=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 737.5)) manager #883# changed t) #884=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 737.5)) manager #884# changed t) #885=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #885# changed t) #886=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #886# changed t) #887=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #887# changed t) #888=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #888# changed t) #889=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #889# changed t) #890=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #890# changed t) #891=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #891# changed t) #892=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #892# changed t) #893=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #893# changed t) #894=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #894# changed t) #895=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 737.5)) manager #895# changed t) #896=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 737.5)) manager #896# changed t) #897=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 737.5)) manager #897# changed t) #898=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 737.5)) manager #898# changed t) #899=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #869# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 737.5)) manager #899# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 737.5)) manager #869# changed nil) #900=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 571.875) parent #8# descendants (#901=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #901# changed t) #902=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #902# changed t) #903=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #903# changed t) #904=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #904# changed t) #905=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #905# changed t) #906=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #906# changed t) #907=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #907# changed t) #908=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #908# changed t) #909=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #909# changed t) #910=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #910# changed t) #911=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 571.875)) manager #911# changed t) #912=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 571.875)) manager #912# changed t) #913=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 571.875)) manager #913# changed t) #914=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 571.875)) manager #914# changed t) #915=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 571.875)) manager #915# changed t) #916=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #916# changed t) #917=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #917# changed t) #918=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #918# changed t) #919=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #919# changed t) #920=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #920# changed t) #921=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #921# changed t) #922=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #922# changed t) #923=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #923# changed t) #924=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #924# changed t) #925=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #925# changed t) #926=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 571.875)) manager #926# changed t) #927=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 571.875)) manager #927# changed t) #928=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 571.875)) manager #928# changed t) #929=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 571.875)) manager #929# changed t) #930=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #900# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 571.875)) manager #930# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 571.875)) manager #900# changed nil)) h-tgts-num 4 v-tgts-num 6 h-step 198 v-step 165.625) descendants (#11# #8# #39#) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0)) manager #6# changed nil geometry::bodies (#39#) joint nil parent-link nil child-links (#8#) analysis-level :body default-coords nil weight 1 acentroid #931# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#900# #869# #838# #807# #776# #745# #714# #683# #652# #621# #590# #559# #528# #497# #466# #435# #404# #373# #342# #311# #280# #249# #218# #187# #186# #185# #184# #183# #182# #181# #180# #179# #178# #177# #176# #175# #174# #173# #172# #171# #170# #169# #168# #167# #166# #165# #164# #163# #9# #66#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(700.0 675.0 0.0)) manager #8# changed nil geometry::bodies (#66#) joint #161# parent-link #6# child-links (#9#) analysis-level :body default-coords nil weight 1 acentroid #931# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#10# #160# #149# #93#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(425.347 30.0409 1000.0)) manager #9# changed nil geometry::bodies (#93#) joint #162# parent-link #8# child-links nil analysis-level :body default-coords nil weight 1 acentroid #931# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#148# #121#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(542.809 -12.7116 1000.0)) manager #10# changed nil geometry::bodies (#121#) joint nil parent-link nil child-links nil analysis-level :body default-coords nil weight 1 acentroid #931# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#932=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 0.984808) (0.984808 -8.326673e-17 -0.173648) (5.551115e-17 1.0 -1.387779e-16)) pos #f(44.6807 701.701 1000.0)) manager #932# changed t) #933=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 0.984808) (0.984808 5.551115e-17 0.173648) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(75.0692 475.958 1000.0)) manager #933# changed t) #934=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.5 1.665335e-16 0.866025) (0.866025 1.665335e-16 0.5) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(180.833 274.223 1000.0)) manager #934# changed t) #935=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.766044 1.110223e-16 0.642788) (0.642788 1.110223e-16 0.766044) (0.0 1.0 -1.110223e-16)) pos #f(349.217 120.827 1000.0)) manager #935# changed t) #936=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.939693 2.775558e-17 0.34202) (0.34202 1.665335e-16 0.939693) (-2.775558e-17 1.0 -1.665335e-16)) pos #f(559.91 34.273 1000.0)) manager #936# changed t) #937=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 0.984808) (0.984808 -8.326673e-17 -0.173648) (5.551115e-17 1.0 -1.387779e-16)) pos #f(44.6807 701.701 1000.0)) manager #937# changed t) #938=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 0.984808) (0.984808 5.551115e-17 0.173648) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(75.0692 475.958 1000.0)) manager #938# changed t) #939=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.5 1.665335e-16 0.866025) (0.866025 1.665335e-16 0.5) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(180.833 274.223 1000.0)) manager #939# changed t) #940=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.766044 1.110223e-16 0.642788) (0.642788 1.110223e-16 0.766044) (0.0 1.0 -1.110223e-16)) pos #f(349.217 120.827 1000.0)) manager #940# changed t) #941=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #148# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.939693 2.775558e-17 0.34202) (0.34202 1.665335e-16 0.939693) (-2.775558e-17 1.0 -1.665335e-16)) pos #f(559.91 34.273 1000.0)) manager #941# changed t)) worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(44.6807 701.701 1000.0)) manager #148# changed t) ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.790837) #s(costed-arc plist nil from #4# to #942=#s(extended-node plist ((:name . #1045="r-0-4-23")) arc-list (#s(costed-arc plist nil from #942# to #943=#s(extended-node plist ((:name . "r-0-4-23<->-l-0-4-18")) arc-list (#s(costed-arc plist nil from #943# to #944=#s(extended-node plist ((:name . #1196="l-0-4-18")) arc-list (#s(costed-arc plist nil from #944# to #943# cost 0) #s(costed-arc plist nil from #944# to #945=#s(extended-node plist ((:name . "r-2-4-15<->-l-0-4-18")) arc-list (#s(costed-arc plist nil from #945# to #944# cost 0) #s(costed-arc plist nil from #945# to #946=#s(extended-node plist ((:name . #1076="r-2-4-15")) arc-list (#s(costed-arc plist nil from #946# to #947=#s(extended-node plist ((:name . "r-2-4-15<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #947# to #948=#s(extended-node plist ((:name . #991="l-0-4-3")) arc-list (#s(costed-arc plist nil from #948# to #949=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #949# to #948# cost 0) #s(costed-arc plist nil from #949# to #950=#s(extended-node plist ((:name . #973="r-0-4-1")) arc-list (#s(costed-arc plist nil from #950# to #949# cost 0) #s(costed-arc plist nil from #950# to #951=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #951# to #952=#s(extended-node plist ((:name . #982="l-0-4-4")) arc-list (#s(costed-arc plist nil from #952# to #951# cost 0) #s(costed-arc plist nil from #952# to #953=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #953# to #952# cost 0) #s(costed-arc plist nil from #953# to #954=#s(extended-node plist ((:name . #976="r-0-4-2")) arc-list (#s(costed-arc plist nil from #954# to #955=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-1")) arc-list (#s(costed-arc plist nil from #955# to #956=#s(extended-node plist ((:name . #1191="l-0-4-1")) arc-list (#s(costed-arc plist nil from #956# to #955# cost 0) #s(costed-arc plist nil from #956# to #957=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-1")) arc-list (#s(costed-arc plist nil from #957# to #956# cost 0) #s(costed-arc plist nil from #957# to #958=#s(extended-node plist ((:name . #966="r-0-4-4")) arc-list (#s(costed-arc plist nil from #958# to #959=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-0")) arc-list (#s(costed-arc plist nil from #959# to #960=#s(extended-node plist ((:name . #1185="l-0-4-0")) arc-list (#s(costed-arc plist nil from #960# to #961=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-0")) arc-list (#s(costed-arc plist nil from #961# to #960# cost 0) #s(costed-arc plist nil from #961# to #962=#s(extended-node plist ((:name . #969="r-0-4-3")) arc-list (#s(costed-arc plist nil from #962# to #961# cost 0) #s(costed-arc plist nil from #962# to #963=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-2")) arc-list (#s(costed-arc plist nil from #963# to #964=#s(extended-node plist ((:name . #967="l-0-4-2")) arc-list (#s(costed-arc plist nil from #964# to #963# cost 0) #s(costed-arc plist nil from #964# to #965=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-2")) arc-list (#s(costed-arc plist nil from #965# to #964# cost 0) #s(costed-arc plist nil from #965# to #958# cost 0)) arm :arms islands (#966# #967#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(180.759 29.3851 23.5266 68.1975 -121.525 -143.211 -67.0864 234.959 -16.0087 36.3054 -82.8652 -70.7555 -11.4425 -40.2564 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #964# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.262 113.065 15.4941 77.2793 -121.529 -17.566 -5.95653 178.266 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(219.096 72.2791 16.5942 74.993 -107.31 -34.0019 -5.73237 185.459 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.947272 -0.320431 0.0) (0.320431 0.947272 0.0) (0.0 0.0 1.0)) pos #f(-89.5039 82.1817 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.660146 -0.751137 0.0) (0.751137 0.660146 0.0) (0.0 0.0 1.0)) pos #f(-85.2283 63.7058 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #963# to #962# cost 0)) arm :arms islands (#969# #967#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(196.006 -17.0187 31.7696 9.3427 -105.723 -105.32 -97.4661 222.959 -14.214 33.2834 -70.3131 -80.9912 -9.1248 -33.8659 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #970=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #970# to #971=#s(extended-node plist ((:name . #974="l-0-4-5")) arc-list (#s(costed-arc plist nil from #971# to #972=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #972# to #971# cost 0) #s(costed-arc plist nil from #972# to #950# cost 0)) arm :arms islands (#973# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(190.644 31.9334 64.4801 103.326 -68.4294 -84.2189 -89.4654 180.0 -7.40519 10.839 -46.7057 -89.4744 -12.9135 -23.9863 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #975=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #975# to #971# cost 0) #s(costed-arc plist nil from #975# to #954# cost 0)) arm :arms islands (#976# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(135.855 34.1097 74.2671 60.6449 -104.484 -172.19 -54.9675 237.239 -9.86083 16.743 -56.2101 -83.0904 -7.2732 -32.3771 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #970# cost 0) #s(costed-arc plist nil from #971# to #977=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #977# to #971# cost 0) #s(costed-arc plist nil from #977# to #958# cost 0)) arm :arms islands (#966# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(136.245 19.94 73.4911 41.0493 -106.239 -175.19 -76.1306 234.959 -15.8821 34.5589 -80.1703 -73.5181 -10.6695 -40.4371 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #978=#s(extended-node plist ((:name . "r-0-4-7<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #978# to #971# cost 0) #s(costed-arc plist nil from #978# to #979=#s(extended-node plist ((:name . #981="r-0-4-7")) arc-list (#s(costed-arc plist nil from #979# to #980=#s(extended-node plist ((:name . "r-0-4-7<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #980# to #952# cost 0) #s(costed-arc plist nil from #980# to #979# cost 0)) arm :arms islands (#981# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(172.985 37.3144 50.9787 105.398 -82.7806 -50.6006 -89.4884 17.3821 -13.197 10.5112 -41.1764 -76.8584 -13.0636 -23.9405 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #979# to #978# cost 0) #s(costed-arc plist nil from #979# to #983=#s(extended-node plist ((:name . "r-0-4-7<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #983# to #984=#s(extended-node plist ((:name . #986="l-2-4-4")) arc-list (#s(costed-arc plist nil from #984# to #985=#s(extended-node plist ((:name . "r-0-4-1<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #985# to #984# cost 0) #s(costed-arc plist nil from #985# to #950# cost 0)) arm :arms islands (#973# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.525 -8.46046 33.0222 175.563 -120.0 20.0 -30.0 180.0 -6.98986 14.7596 -46.6195 -97.6629 -13.3997 -6.03504 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #984# to #987=#s(extended-node plist ((:name . "r-0-4-5<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #987# to #984# cost 0) #s(costed-arc plist nil from #987# to #988=#s(extended-node plist ((:name . #990="r-0-4-5")) arc-list (#s(costed-arc plist nil from #988# to #989=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #989# to #948# cost 0) #s(costed-arc plist nil from #989# to #988# cost 0)) arm :arms islands (#990# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(193.263 27.7644 47.1875 82.6174 -96.172 -68.7905 -90.1158 180.0 -15.9719 45.6377 -94.0885 -67.5978 -15.8643 -22.3386 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #988# to #992=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #992# to #952# cost 0) #s(costed-arc plist nil from #992# to #988# cost 0)) arm :arms islands (#990# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.874 31.151 62.1602 87.1532 -85.9918 -75.5239 -90.0026 180.0 -16.0826 45.7065 -94.0087 -67.9293 -15.8412 -21.9465 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #988# to #993=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #993# to #994=#s(extended-node plist ((:name . #996="l-0-4-9")) arc-list (#s(costed-arc plist nil from #994# to #995=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #995# to #994# cost 0) #s(costed-arc plist nil from #995# to #950# cost 0)) arm :arms islands (#973# #996#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(204.594 7.11424 39.0208 70.2956 -74.7366 -89.7972 -76.3652 180.0 -7.86572 12.7737 -47.496 -91.7905 -13.1946 -20.8744 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #994# to #997=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #997# to #994# cost 0) #s(costed-arc plist nil from #997# to #954# cost 0)) arm :arms islands (#976# #996#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(152.115 -11.4232 47.9512 4.52625 -94.8922 -171.921 -39.7639 237.239 -10.3396 18.6262 -56.9691 -84.4285 -7.59087 -30.7851 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #994# to #998=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #998# to #994# cost 0) #s(costed-arc plist nil from #998# to #958# cost 0)) arm :arms islands (#966# #996#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(152.267 -9.96045 47.2433 4.73387 -94.027 -176.199 -40.1726 234.959 -16.1064 35.8248 -80.7966 -73.1461 -10.8782 -39.2661 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #994# to #993# cost 0) #s(costed-arc plist nil from #994# to #999=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #999# to #994# cost 0) #s(costed-arc plist nil from #999# to #1000=#s(extended-node plist ((:name . #1002="r-0-4-10")) arc-list (#s(costed-arc plist nil from #1000# to #1001=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1001# to #948# cost 0) #s(costed-arc plist nil from #1001# to #1000# cost 0)) arm :arms islands (#1002# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(193.289 28.2902 40.216 92.5868 -96.3018 -71.2116 -93.5813 180.0 -21.7564 38.0886 -75.1677 -62.4765 -10.7347 -34.8767 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #1003=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1003# to #952# cost 0) #s(costed-arc plist nil from #1003# to #1000# cost 0)) arm :arms islands (#1002# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.759 32.4067 55.0109 100.25 -86.3799 -77.6427 -93.4544 180.0 -21.7844 38.0706 -75.0819 -62.6636 -10.7118 -34.7364 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #1004=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1004# to #971# cost 0) #s(costed-arc plist nil from #1004# to #1000# cost 0)) arm :arms islands (#1002# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(189.819 33.7807 64.1029 103.557 -70.6751 -88.0604 -88.1315 180.0 -21.8142 38.0333 -74.981 -62.876 -10.6849 -34.6031 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #999# cost 0) #s(costed-arc plist nil from #1000# to #1005=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1005# to #1006=#s(extended-node plist ((:name . #1008="l-0-4-11")) arc-list (#s(costed-arc plist nil from #1006# to #1007=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1007# to #1006# cost 0) #s(costed-arc plist nil from #1007# to #950# cost 0)) arm :arms islands (#973# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.887 4.39987 55.0679 74.3162 -50.9751 -100.866 -64.2535 180.0 -7.70859 12.7932 -47.2322 -92.1768 -13.1969 -19.6158 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1006# to #1009=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1009# to #1006# cost 0) #s(costed-arc plist nil from #1009# to #954# cost 0)) arm :arms islands (#976# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(149.312 -12.3041 59.9864 3.57136 -73.068 -172.914 -45.1405 237.239 -10.2473 18.5947 -56.6824 -84.6677 -7.56584 -30.1154 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1006# to #1010=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1010# to #1006# cost 0) #s(costed-arc plist nil from #1010# to #962# cost 0)) arm :arms islands (#969# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(208.685 -19.4139 54.3504 -3.10286 -55.5918 -142.411 -49.7788 222.959 -14.647 35.1905 -70.5883 -82.1593 -9.27057 -30.6388 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1006# to #1011=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1011# to #1006# cost 0) #s(costed-arc plist nil from #1011# to #1012=#s(extended-node plist ((:name . #1014="r-0-4-9")) arc-list (#s(costed-arc plist nil from #1012# to #1013=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1013# to #948# cost 0) #s(costed-arc plist nil from #1013# to #1012# cost 0)) arm :arms islands (#1014# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(189.079 29.0396 39.949 91.5284 -95.1247 -68.3253 -95.4818 180.0 -20.2063 29.7385 -67.0224 -72.4053 -10.3162 -31.3359 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1015=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1015# to #952# cost 0) #s(costed-arc plist nil from #1015# to #1012# cost 0)) arm :arms islands (#1014# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.464 33.1878 55.1555 99.1826 -85.0971 -74.3872 -95.4231 180.0 -20.203 29.6927 -66.9231 -72.5712 -10.2991 -31.0849 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1016=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1016# to #971# cost 0) #s(costed-arc plist nil from #1016# to #1012# cost 0)) arm :arms islands (#1014# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(185.452 34.6932 64.6485 102.454 -69.2658 -84.6071 -90.1135 180.0 -20.1945 29.6219 -66.8042 -72.7487 -10.2781 -30.8287 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1017=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1017# to #1018=#s(extended-node plist ((:name . #1020="l-0-4-10")) arc-list (#s(costed-arc plist nil from #1018# to #1019=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1019# to #1018# cost 0) #s(costed-arc plist nil from #1019# to #950# cost 0)) arm :arms islands (#973# #1020#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.759 7.19971 49.6349 73.1184 -66.3456 -94.0613 -73.6791 180.0 -7.81243 12.8216 -47.4063 -92.0039 -13.2002 -20.274 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1018# to #1021=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1021# to #1018# cost 0) #s(costed-arc plist nil from #1021# to #954# cost 0)) arm :arms islands (#976# #1020#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.4 -11.8157 57.8515 4.01694 -88.9893 -172.152 -41.5449 237.239 -10.3147 18.6631 -56.8727 -84.5602 -7.58667 -30.4708 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1018# to #1017# cost 0) #s(costed-arc plist nil from #1018# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.834 99.787 33.5565 104.222 -100.883 0.035502 -5.73374 195.95 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(206.272 61.1464 47.3735 85.4642 -88.7151 -17.8954 -5.73007 198.577 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.940391 -0.340095 0.0) (0.340095 0.940391 0.0) (0.0 0.0 1.0)) pos #f(-27.0378 30.8438 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.644355 -0.764727 0.0) (0.764727 0.644355 0.0) (0.0 0.0 1.0)) pos #f(-8.21831 27.2805 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1017# to #1012# cost 0)) arm :arms islands (#1014# #1020#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.539 9.32248 49.638 72.63 -67.2057 -95.1812 -75.1699 180.0 -20.5144 31.1106 -67.2472 -73.5661 -10.412 -28.4156 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1011# cost 0) #s(costed-arc plist nil from #1012# to #1022=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1022# to #1023=#s(extended-node plist ((:name . #1025="l-0-4-12")) arc-list (#s(costed-arc plist nil from #1023# to #1024=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1024# to #1023# cost 0) #s(costed-arc plist nil from #1024# to #988# cost 0)) arm :arms islands (#990# #1025#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(223.892 -13.9687 -20.2598 52.5903 -9.8347 -105.489 -13.8725 180.0 -15.9039 48.4858 -94.2825 -68.0382 -15.8566 -12.772 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1023# to #1022# cost 0) #s(costed-arc plist nil from #1023# to #1026=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1026# to #1023# cost 0) #s(costed-arc plist nil from #1026# to #1000# cost 0)) arm :arms islands (#1002# #1025#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(224.734 -15.5444 -20.2598 53.5911 -9.95069 -109.333 -13.6461 180.0 -21.8498 40.5844 -75.6041 -62.2151 -10.8838 -30.7065 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1023# to #1027=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1027# to #1023# cost 0) #s(costed-arc plist nil from #1027# to #1028=#s(extended-node plist ((:name . #1030="r-0-4-11")) arc-list (#s(costed-arc plist nil from #1028# to #1029=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1029# to #952# cost 0) #s(costed-arc plist nil from #1029# to #1028# cost 0)) arm :arms islands (#1030# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(178.482 37.7338 52.4932 100.528 -80.2096 -45.6052 -81.4559 8.13637 -22.5926 43.4255 -83.3316 -51.6588 -12.3672 -36.5862 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1028# to #1031=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1031# to #971# cost 0) #s(costed-arc plist nil from #1031# to #1028# cost 0)) arm :arms islands (#1030# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(176.644 41.2532 61.3972 107.345 -63.8349 -49.4708 -76.4501 8.13637 -22.6697 43.4226 -83.2333 -51.8832 -12.3301 -36.5798 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1028# to #1027# cost 0) #s(costed-arc plist nil from #1028# to #1032=#s(extended-node plist ((:name . "r-0-4-11<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1032# to #984# cost 0) #s(costed-arc plist nil from #1032# to #1028# cost 0)) arm :arms islands (#1030# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(222.957 -10.0643 36.0568 165.938 -120.0 20.0 -30.0 180.0 -21.605 47.2382 -81.7698 -50.1195 -11.9037 -29.0463 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1028# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(213.221 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.2735 47.6405 -81.0559 -52.0492 -11.6109 -27.8673 186.316 0.0 0.0) robot-pose-optimized #f(213.665 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -57.7071 71.6107 -67.9567 -64.072 -7.76087 -36.0396 186.39 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.597062 -0.802195 0.0) (0.802195 0.597062 0.0) (0.0 0.0 1.0)) pos #f(-429.587 410.535 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1030# #1025#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(205.944 -14.9509 -20.2598 54.3369 -12.0634 -70.0221 -12.0869 8.13637 -21.8977 45.1794 -83.0957 -50.0935 -12.3355 -33.2416 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1023# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.509 88.6189 5.91396 18.5463 -112.421 -182.142 -66.5824 165.237 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(250.29 63.8495 3.03436 18.5174 -104.988 -177.253 -73.9708 165.258 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997024 -0.077098 0.0) (0.077098 0.997024 0.0) (0.0 0.0 1.0)) pos #f(281.856 -105.424 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.936692 -0.350154 0.0) (0.350154 0.936692 0.0) (0.0 0.0 1.0)) pos #f(267.29 -106.679 0.0)) object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1022# to #1012# cost 0)) arm :arms islands (#1014# #1025#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(220.061 -14.5679 -20.2598 52.7564 -10.8298 -106.823 -15.0894 180.0 -20.8575 32.829 -68.0516 -73.843 -10.5878 -26.5275 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1033=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1033# to #1034=#s(extended-node plist ((:name . #1036="l-0-4-17")) arc-list (#s(costed-arc plist nil from #1034# to #1035=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1035# to #1034# cost 0) #s(costed-arc plist nil from #1035# to #950# cost 0)) arm :arms islands (#973# #1036#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(147.258 -14.0025 16.1951 167.513 -15.9955 -82.8856 -15.9185 180.0 -5.07928 9.35786 -43.2323 -92.897 -13.1681 -8.64693 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1034# to #1037=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1037# to #1034# cost 0) #s(costed-arc plist nil from #1037# to #954# cost 0)) arm :arms islands (#976# #1036#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(81.4205 -17.44 23.097 -2.2713 -9.90619 -170.948 -8.63878 237.239 -8.13012 13.8705 -51.8971 -84.296 -6.9539 -24.9708 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1034# to #1038=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1038# to #1034# cost 0) #s(costed-arc plist nil from #1038# to #988# cost 0)) arm :arms islands (#990# #1036#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(153.883 -10.8507 16.406 165.325 -16.028 -77.2184 -15.1028 180.0 -18.5491 47.901 -91.5823 -77.1529 -15.4681 -9.5378 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1034# to #1033# cost 0) #s(costed-arc plist nil from #1034# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(201.232 84.9043 40.8508 106.004 -78.5362 8.14889 -5.73389 204.315 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(194.025 45.8214 43.1886 92.028 -65.8867 -6.92239 -5.72958 205.436 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.949891 -0.312582 0.0) (0.312582 0.949891 0.0) (0.0 0.0 1.0)) pos #f(61.9635 -6.56432 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.666342 -0.745646 0.0) (0.745646 0.666342 0.0) (0.0 0.0 1.0)) pos #f(79.9784 -10.2597 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1033# to #1012# cost 0)) arm :arms islands (#1014# #1036#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(158.409 -11.0909 15.6496 166.805 -18.0554 -77.5986 -17.5673 180.0 -20.0691 29.5453 -64.6653 -76.6496 -10.0231 -23.9617 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1039=#s(extended-node plist ((:name . "r-0-4-9<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1039# to #1040=#s(extended-node plist ((:name . #1042="l-1-4-5")) arc-list (#s(costed-arc plist nil from #1040# to #1041=#s(extended-node plist ((:name . "r-0-4-2<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1041# to #1040# cost 0) #s(costed-arc plist nil from #1041# to #954# cost 0)) arm :arms islands (#976# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(113.356 2.82775 31.1633 111.311 -30.0297 -0.699931 -30.0 180.0 -8.74541 18.9468 -52.5486 -89.8178 -7.89007 -16.1782 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1043=#s(extended-node plist ((:name . "r-0-4-4<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1043# to #1040# cost 0) #s(costed-arc plist nil from #1043# to #958# cost 0)) arm :arms islands (#966# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(104.607 3.90935 30.1417 110.719 -31.0987 -0.142947 -30.0 180.0 -16.0562 37.7016 -75.2619 -78.9018 -9.78417 -33.167 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1039# cost 0) #s(costed-arc plist nil from #1040# to #1044=#s(extended-node plist ((:name . "r-0-4-23<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1044# to #1040# cost 0) #s(costed-arc plist nil from #1044# to #942# cost 0)) arm :arms islands (#1045# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(220.779 42.0129 59.4948 98.9192 -61.8136 55.156 -30.0 180.0 -13.4248 39.2304 -69.1188 -27.4886 -13.5116 -22.7694 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1046=#s(extended-node plist ((:name . "r-2-4-7<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1046# to #1040# cost 0) #s(costed-arc plist nil from #1046# to #1047=#s(extended-node plist ((:name . #1063="r-2-4-7")) arc-list (#s(costed-arc plist nil from #1047# to #1048=#s(extended-node plist ((:name . "r-2-4-7<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1048# to #1049=#s(extended-node plist ((:name . #1051="l-1-4-4")) arc-list (#s(costed-arc plist nil from #1049# to #1050=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1050# to #1049# cost 0) #s(costed-arc plist nil from #1050# to #962# cost 0)) arm :arms islands (#969# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(257.54 5.23008 30.7096 100.372 -32.8778 9.91411 -30.0 180.0 -15.8011 40.2551 -72.4092 -83.0718 -9.76344 -24.5958 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1052=#s(extended-node plist ((:name . "r-0-4-23<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1052# to #1049# cost 0) #s(costed-arc plist nil from #1052# to #942# cost 0)) arm :arms islands (#1045# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(228.377 44.5623 59.7248 75.7909 -103.28 58.8479 -30.0 180.0 -12.7887 39.2674 -69.2306 -26.3702 -13.6045 -22.0903 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1048# cost 0) #s(costed-arc plist nil from #1049# to #1053=#s(extended-node plist ((:name . "r-2-4-11<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1053# to #1049# cost 0) #s(costed-arc plist nil from #1053# to #1054=#s(extended-node plist ((:name . #1055="r-2-4-11")) arc-list (#s(costed-arc plist nil from #1054# to #1053# cost 0) #s(costed-arc plist nil from #1054# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(118.178 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.9583 44.9129 -149.187 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.606393 -0.795165 0.0) (0.795165 0.606393 0.0) (0.0 0.0 1.0)) pos #f(-351.429 517.864 0.0)) base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1055# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(110.804 -30.0903 49.7992 23.0618 -98.1595 69.4483 -30.0 180.0 -12.0768 43.8237 -147.426 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.606393 -0.795165 0.0) (0.795165 0.606393 0.0) (0.0 0.0 1.0)) pos #f(-351.429 517.864 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1056=#s(extended-node plist ((:name . "r-2-4-14<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1056# to #1049# cost 0) #s(costed-arc plist nil from #1056# to #1057=#s(extended-node plist ((:name . #1059="r-2-4-14")) arc-list (#s(costed-arc plist nil from #1057# to #1056# cost 0) #s(costed-arc plist nil from #1057# to #1058=#s(extended-node plist ((:name . "r-2-4-14<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1058# to #1040# cost 0) #s(costed-arc plist nil from #1058# to #1057# cost 0)) arm :arms islands (#1059# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(262.611 -0.028556 54.1585 109.138 -36.6509 31.2105 -30.0 180.0 -6.88293 0.625961 -144.106 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1057# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(255.314 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.96066 -0.174426 -146.047 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1059# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(271.987 11.6439 58.1529 73.4793 -84.5942 59.2431 -30.0 180.0 -6.87099 1.68428 -143.752 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1060=#s(extended-node plist ((:name . "r-2-4-17<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1060# to #1049# cost 0) #s(costed-arc plist nil from #1060# to #1061=#s(extended-node plist ((:name . #1062="r-2-4-17")) arc-list (#s(costed-arc plist nil from #1061# to #1060# cost 0) #s(costed-arc plist nil from #1061# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(128.411 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -7.35823 46.7487 -141.435 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(125.348 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -10.1464 46.358 -144.808 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.351614 -0.936145 0.0) (0.936145 0.351614 0.0) (0.0 0.0 1.0)) pos #f(-53.1241 347.194 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.290881 -0.956759 0.0) (0.956759 0.290881 0.0) (0.0 0.0 1.0)) pos #f(-54.1666 330.136 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1062# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(136.029 16.9584 48.5699 71.5477 -117.442 42.1262 -30.0 180.0 -7.30759 47.3346 -140.717 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.351614 -0.936145 0.0) (0.936145 0.351614 0.0) (0.0 0.0 1.0)) pos #f(-53.1241 347.194 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #968# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(62.2507 95.3678 30.7009 76.5296 -121.449 21.295 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.991351 -0.131237 0.0) (0.131237 0.991351 0.0) (0.0 0.0 1.0)) pos #f(-63.6184 111.559 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1048# to #1047# cost 0)) arm :arms islands (#1063# #1051#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(254.693 -8.40775 64.7995 34.7012 -84.6723 75.765 -30.0 180.0 7.79586 -19.6799 -153.816 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1047# to #1046# cost 0) #s(costed-arc plist nil from #1047# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(254.466 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.03632 -19.9764 -145.781 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1063# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(246.333 -11.8224 60.8935 50.6624 -33.3567 63.5191 -30.0 180.0 7.80858 -20.2598 -153.62 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1064=#s(extended-node plist ((:name . "r-2-4-9<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1064# to #1040# cost 0) #s(costed-arc plist nil from #1064# to #1065=#s(extended-node plist ((:name . #1066="r-2-4-9")) arc-list (#s(costed-arc plist nil from #1065# to #1064# cost 0) #s(costed-arc plist nil from #1065# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(222.305 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 12.5329 15.0194 -136.913 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.874616 -0.484816 0.0) (0.484816 0.874616 0.0) (0.0 0.0 1.0)) pos #f(-357.686 475.394 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1066# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(190.176 -3.48836 65.6437 40.5942 -59.0075 74.4189 -30.0 180.0 12.7274 11.2748 -136.614 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.874616 -0.484816 0.0) (0.484816 0.874616 0.0) (0.0 0.0 1.0)) pos #f(-357.686 475.394 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1067=#s(extended-node plist ((:name . "r-2-4-10<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1067# to #1040# cost 0) #s(costed-arc plist nil from #1067# to #1068=#s(extended-node plist ((:name . #1069="r-2-4-10")) arc-list (#s(costed-arc plist nil from #1068# to #1067# cost 0) #s(costed-arc plist nil from #1068# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(173.237 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 4.80869 29.5343 -143.003 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(260.992 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.061 42.2014 -167.108 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.788148 -0.615486 0.0) (0.615486 0.788148 0.0) (0.0 0.0 1.0)) pos #f(-346.678 484.672 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.374858 -0.927082 0.0) (0.927082 0.374858 0.0) (0.0 0.0 1.0)) pos #f(-351.857 442.563 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1069# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.964 -10.2672 63.8248 41.9078 -62.3006 73.299 -30.0 180.0 4.85614 29.2614 -142.42 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.788148 -0.615486 0.0) (0.615486 0.788148 0.0) (0.0 0.0 1.0)) pos #f(-346.678 484.672 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1070=#s(extended-node plist ((:name . "r-2-4-13<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1070# to #1040# cost 0) #s(costed-arc plist nil from #1070# to #1071=#s(extended-node plist ((:name . #1073="r-2-4-13")) arc-list (#s(costed-arc plist nil from #1071# to #1072=#s(extended-node plist ((:name . "r-2-4-13<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1072# to #948# cost 0) #s(costed-arc plist nil from #1072# to #1071# cost 0)) arm :arms islands (#1073# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(256.892 32.5675 54.8128 114.122 -121.542 278.433 -96.9631 180.0 -7.53601 -19.3936 -157.53 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1071# to #1074=#s(extended-node plist ((:name . "r-2-4-13<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1074# to #952# cost 0) #s(costed-arc plist nil from #1074# to #1071# cost 0)) arm :arms islands (#1073# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(254.004 41.6345 57.3808 125.485 -121.53 236.552 -97.8262 180.0 -7.56924 -19.6946 -158.356 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1071# to #1070# cost 0) #s(costed-arc plist nil from #1071# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(257.856 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.75437 -19.8448 -136.885 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1073# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(248.679 6.27574 54.4091 105.375 -45.7485 42.3384 -30.0 180.0 -7.07386 -20.2598 -146.211 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1058# cost 0) #s(costed-arc plist nil from #1040# to #1075=#s(extended-node plist ((:name . "r-2-4-15<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1075# to #1040# cost 0) #s(costed-arc plist nil from #1075# to #946# cost 0)) arm :arms islands (#1076# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(218.196 14.1124 57.4664 94.4038 -59.2176 53.685 -30.0 180.0 -3.27871 14.4272 -131.905 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #1077=#s(extended-node plist ((:name . "r-2-4-20<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1077# to #1040# cost 0) #s(costed-arc plist nil from #1077# to #1078=#s(extended-node plist ((:name . #1141="r-2-4-20")) arc-list (#s(costed-arc plist nil from #1078# to #1077# cost 0) #s(costed-arc plist nil from #1078# to #1079=#s(extended-node plist ((:name . "r-2-4-20<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1079# to #1080=#s(extended-node plist ((:name . #1085="l-2-4-5")) arc-list (#s(costed-arc plist nil from #1080# to #1081=#s(extended-node plist ((:name . "r-0-4-6<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1081# to #1080# cost 0) #s(costed-arc plist nil from #1081# to #1082=#s(extended-node plist ((:name . #1084="r-0-4-6")) arc-list (#s(costed-arc plist nil from #1082# to #1083=#s(extended-node plist ((:name . "r-0-4-6<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1083# to #984# cost 0) #s(costed-arc plist nil from #1083# to #1082# cost 0)) arm :arms islands (#1084# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(252.168 -12.0564 41.7474 186.054 -120.0 20.0 -30.0 180.0 -9.18184 8.19312 -31.0624 -82.7668 -12.4923 -6.72401 181.608 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1082# to #1081# cost 0) #s(costed-arc plist nil from #1082# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(229.284 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -10.9726 3.58041 -33.8138 -80.4874 -13.0454 -5.73812 181.608 0.0 0.0) robot-pose-optimized #f(230.755 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -41.3902 -8.73717 -48.468 -85.3965 -19.6009 -12.1272 181.192 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.732484 -0.680785 0.0) (0.680785 0.732484 0.0) (0.0 0.0 1.0)) pos #f(-394.719 441.021 0.0)) object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1084# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(114.541 -11.9007 44.2032 188.78 -120.0 20.0 -30.0 180.0 -3.2248 -7.54379 -24.5648 -66.3672 -12.4783 -6.30548 181.608 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1086=#s(extended-node plist ((:name . "r-0-4-7<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1086# to #1080# cost 0) #s(costed-arc plist nil from #1086# to #979# cost 0)) arm :arms islands (#981# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(89.0713 -8.30288 40.4454 192.513 -120.0 20.0 -30.0 180.0 -8.51436 5.35395 -34.7429 -77.5924 -13.4609 -6.26344 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1087=#s(extended-node plist ((:name . "r-0-4-8<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1087# to #1080# cost 0) #s(costed-arc plist nil from #1087# to #1088=#s(extended-node plist ((:name . #1090="r-0-4-8")) arc-list (#s(costed-arc plist nil from #1088# to #1089=#s(extended-node plist ((:name . "r-0-4-8<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1089# to #984# cost 0) #s(costed-arc plist nil from #1089# to #1088# cost 0)) arm :arms islands (#1090# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(215.308 -5.70507 36.1111 155.253 -120.0 20.0 -30.0 180.0 -19.7595 22.2844 -60.8074 -86.1843 -21.4471 -12.5291 174.08 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1088# to #1087# cost 0) #s(costed-arc plist nil from #1088# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(223.901 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.1271 23.2897 -62.0193 -88.6812 -21.5383 -6.13681 174.08 0.0 0.0) robot-pose-optimized #f(224.5 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -56.3787 14.2421 -73.0398 -101.5 -33.8803 -9.33264 172.579 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.601573 -0.798818 0.0) (0.798818 0.601573 0.0) (0.0 0.0 1.0)) pos #f(-408.69 372.195 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1090# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(81.8794 -5.65966 39.1984 156.996 -120.0 20.0 -30.0 180.0 -15.8797 12.2859 -52.9963 -84.3018 -21.1242 -6.62211 174.08 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1091=#s(extended-node plist ((:name . "r-0-4-12<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1091# to #1080# cost 0) #s(costed-arc plist nil from #1091# to #1092=#s(extended-node plist ((:name . #1093="r-0-4-12")) arc-list (#s(costed-arc plist nil from #1092# to #1091# cost 0) #s(costed-arc plist nil from #1092# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(216.285 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.1932 -3.11189 -34.2462 -57.0602 -10.9298 -16.7447 180.419 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.893516 -0.449032 0.0) (0.449032 0.893516 0.0) (0.0 0.0 1.0)) pos #f(-366.912 460.499 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1093# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(144.839 -16.5059 48.9646 152.3 -120.0 20.0 -30.0 180.0 -11.9671 -9.34582 -25.4644 -47.3954 -9.22266 -17.0068 180.419 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.893516 -0.449032 0.0) (0.449032 0.893516 0.0) (0.0 0.0 1.0)) pos #f(-366.912 460.499 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1094=#s(extended-node plist ((:name . "r-0-4-13<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1094# to #1080# cost 0) #s(costed-arc plist nil from #1094# to #1095=#s(extended-node plist ((:name . #1096="r-0-4-13")) arc-list (#s(costed-arc plist nil from #1095# to #1094# cost 0) #s(costed-arc plist nil from #1095# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(227.781 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.0979 15.9624 -38.121 -72.5095 -12.6841 -6.02873 182.037 0.0 0.0) robot-pose-optimized #f(227.065 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.9279 16.1987 -44.9593 -84.8233 -15.8754 -19.2317 181.531 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.914341 -0.404945 0.0) (0.404945 0.914341 0.0) (0.0 0.0 1.0)) pos #f(-379.881 448.404 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.589374 -0.80786 0.0) (0.80786 0.589374 0.0) (0.0 0.0 1.0)) pos #f(-368.997 438.978 0.0)) object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1096# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(137.988 -11.3376 48.1604 184.298 -120.0 20.0 -30.0 180.0 -15.3044 6.97615 -34.4542 -65.6895 -12.4687 -6.46959 182.037 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.914341 -0.404945 0.0) (0.404945 0.914341 0.0) (0.0 0.0 1.0)) pos #f(-379.881 448.404 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1097=#s(extended-node plist ((:name . "r-0-4-14<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1097# to #1080# cost 0) #s(costed-arc plist nil from #1097# to #1098=#s(extended-node plist ((:name . #1100="r-0-4-14")) arc-list (#s(costed-arc plist nil from #1098# to #1099=#s(extended-node plist ((:name . "r-0-4-14<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1099# to #984# cost 0) #s(costed-arc plist nil from #1099# to #1098# cost 0)) arm :arms islands (#1100# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(273.009 -8.57457 45.0002 189.354 -120.0 20.0 -30.0 180.0 -21.894 31.6701 -48.8925 -75.6031 -13.6625 -6.26174 180.639 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1098# to #1097# cost 0) #s(costed-arc plist nil from #1098# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(225.449 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.0104 29.2187 -44.9012 -75.7539 -13.6103 -5.73914 180.639 0.0 0.0) robot-pose-optimized #f(224.433 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.7054 34.1443 -49.6563 -88.7178 -16.4882 -18.18 180.356 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.594839 -0.803845 0.0) (0.803845 0.594839 0.0) (0.0 0.0 1.0)) pos #f(-371.422 416.021 0.0)) object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1100# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(135.757 -8.36715 47.4921 192.769 -120.0 20.0 -30.0 180.0 -18.6394 20.9055 -42.6351 -73.297 -13.4829 -6.09348 180.639 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1101=#s(extended-node plist ((:name . "r-0-4-15<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1101# to #1080# cost 0) #s(costed-arc plist nil from #1101# to #1102=#s(extended-node plist ((:name . #1103="r-0-4-15")) arc-list (#s(costed-arc plist nil from #1102# to #1101# cost 0) #s(costed-arc plist nil from #1102# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(222.291 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.7597 30.1533 -66.693 -72.3303 -22.2055 -5.7626 173.816 0.0 0.0) robot-pose-optimized #f(221.914 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -62.4435 34.6806 -70.6578 -83.8374 -23.1405 -20.9513 173.732 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.91922 -0.393745 0.0) (0.393745 0.91922 0.0) (0.0 0.0 1.0)) pos #f(-370.915 405.396 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.5992 -0.800599 0.0) (0.800599 0.5992 0.0) (0.0 0.0 1.0)) pos #f(-360.743 394.562 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1103# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(140.061 -4.54738 48.298 196.356 -120.0 20.0 -30.0 180.0 -25.1974 24.6282 -63.7607 -74.0354 -22.038 -6.03809 173.816 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.91922 -0.393745 0.0) (0.393745 0.91922 0.0) (0.0 0.0 1.0)) pos #f(-370.915 405.396 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1104=#s(extended-node plist ((:name . "r-0-4-16<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1104# to #1080# cost 0) #s(costed-arc plist nil from #1104# to #1105=#s(extended-node plist ((:name . #1106="r-0-4-16")) arc-list (#s(costed-arc plist nil from #1105# to #1104# cost 0) #s(costed-arc plist nil from #1105# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(219.054 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.3346 38.7676 -69.2867 -55.9984 -11.3646 -23.6471 186.449 0.0 0.0) robot-pose-optimized #f(219.353 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -62.0462 47.0559 -71.8083 -66.3408 -13.0386 -38.3925 186.563 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.916615 -0.399771 0.0) (0.399771 0.916615 0.0) (0.0 0.0 1.0)) pos #f(-377.224 422.314 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.593932 -0.804515 0.0) (0.804515 0.593932 0.0) (0.0 0.0 1.0)) pos #f(-370.184 410.066 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1106# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(138.154 -7.47913 48.0037 190.107 -120.0 20.0 -30.0 180.0 -26.1044 34.6239 -67.3712 -60.0582 -10.8506 -26.8992 186.449 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916615 -0.399771 0.0) (0.399771 0.916615 0.0) (0.0 0.0 1.0)) pos #f(-377.224 422.314 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1107=#s(extended-node plist ((:name . "r-0-4-17<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1107# to #1080# cost 0) #s(costed-arc plist nil from #1107# to #1108=#s(extended-node plist ((:name . #1109="r-0-4-17")) arc-list (#s(costed-arc plist nil from #1108# to #1107# cost 0) #s(costed-arc plist nil from #1108# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(212.05 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.3504 44.0192 -75.2684 -42.7345 -11.9788 -25.0102 186.488 0.0 0.0) robot-pose-optimized #f(212.702 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -63.183 60.0177 -68.701 -53.2528 -10.224 -41.6947 186.382 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.908126 -0.418696 0.0) (0.418696 0.908126 0.0) (0.0 0.0 1.0)) pos #f(-368.981 452.015 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.577112 -0.816665 0.0) (0.816665 0.577112 0.0) (0.0 0.0 1.0)) pos #f(-356.107 442.909 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1109# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(148.118 -13.5213 49.6452 160.87 -120.0 20.0 -30.0 180.0 -27.9667 42.0429 -74.5139 -48.3508 -11.6542 -29.8851 186.488 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.908126 -0.418696 0.0) (0.418696 0.908126 0.0) (0.0 0.0 1.0)) pos #f(-368.981 452.015 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1110=#s(extended-node plist ((:name . "r-0-4-18<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1110# to #1080# cost 0) #s(costed-arc plist nil from #1110# to #1111=#s(extended-node plist ((:name . #1114="r-0-4-18")) arc-list (#s(costed-arc plist nil from #1111# to #1112=#s(extended-node plist ((:name . "r-0-4-18<->-l-0-4-23")) arc-list (#s(costed-arc plist nil from #1112# to #1113=#s(extended-node plist ((:name . #1115="l-0-4-23")) arc-list (#s(costed-arc plist nil from #1113# to #1112# cost 0) #s(costed-arc plist nil from #1113# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(198.844 83.2655 53.4868 94.9697 -77.8307 1.06883 -5.73369 204.462 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(192.065 41.9422 50.5814 81.9558 -65.994 -7.54331 -5.72958 209.694 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.958114 -0.286386 0.0) (0.286386 0.958114 0.0) (0.0 0.0 1.0)) pos #f(206.837 -7.11621 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.686562 -0.727072 0.0) (0.727072 0.686562 0.0) (0.0 0.0 1.0)) pos #f(226.312 -12.3799 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1112# to #1111# cost 0)) arm :arms islands (#1114# #1115#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.151 -14.4577 23.0068 121.111 -12.7871 -20.3323 -11.5519 18.5829 -6.30346 -10.6281 -23.7831 -29.9536 6.29291 -23.4664 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1111# to #1110# cost 0) #s(costed-arc plist nil from #1111# to #1116=#s(extended-node plist ((:name . "r-0-4-18<->-l-2-4-10")) arc-list (#s(costed-arc plist nil from #1116# to #1117=#s(extended-node plist ((:name . #1119="l-2-4-10")) arc-list (#s(costed-arc plist nil from #1117# to #1116# cost 0) #s(costed-arc plist nil from #1117# to #1118=#s(extended-node plist ((:name . "r-0-4-23<->-l-2-4-10")) arc-list (#s(costed-arc plist nil from #1118# to #1117# cost 0) #s(costed-arc plist nil from #1118# to #942# cost 0)) arm :arms islands (#1045# #1119#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(232.772 -5.29839 37.4907 156.389 -120.0 20.0 -30.0 180.0 -12.4589 39.4864 -69.022 -26.1528 -13.2492 -20.8523 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1117# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(233.134 54.4709 37.5838 141.912 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(183.818 28.1173 30.7957 139.6 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999614 -0.0278 0.0) (0.0278 0.999614 0.0) (0.0 0.0 1.0)) pos #f(-76.3545 48.1345 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.908579 -0.417712 0.0) (0.417712 0.908579 0.0) (0.0 0.0 1.0)) pos #f(-49.3484 75.7463 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1116# to #1111# cost 0)) arm :arms islands (#1114# #1119#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.838 -9.72093 31.2242 156.384 -120.0 20.0 -30.0 180.0 -8.08634 -11.0408 -27.7418 -31.0473 3.09213 -22.1505 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1111# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(219.095 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.6312 -8.7748 -34.5349 -34.9789 0.183342 -23.3931 186.175 0.0 0.0) robot-pose-optimized #f(214.466 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.9362 -13.753 -52.5276 -51.8353 -8.40681 -26.7428 185.765 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.455308 -0.890334 0.0) (0.890334 0.455308 0.0) (0.0 0.0 1.0)) pos #f(-219.405 288.713 0.0)) object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1114# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.234 5.36885 56.0644 154.123 -120.0 20.0 -30.0 180.0 -7.41786 -10.8739 -26.0807 -30.7637 3.74935 -22.297 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1120=#s(extended-node plist ((:name . "r-0-4-19<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1120# to #1080# cost 0) #s(costed-arc plist nil from #1120# to #1121=#s(extended-node plist ((:name . #1122="r-0-4-19")) arc-list (#s(costed-arc plist nil from #1121# to #1120# cost 0) #s(costed-arc plist nil from #1121# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(216.695 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.5814 4.76801 -35.2637 -40.1621 -10.6153 -19.8644 180.747 0.0 0.0) robot-pose-optimized #f(213.183 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -61.4586 7.03657 -42.5675 -53.099 -11.7949 -36.4473 180.556 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.858571 -0.512695 0.0) (0.512695 0.858571 0.0) (0.0 0.0 1.0)) pos #f(-343.285 441.406 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.487197 -0.873292 0.0) (0.873292 0.487197 0.0) (0.0 0.0 1.0)) pos #f(-344.705 425.967 0.0)) object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1122# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.923 -16.8732 50.0404 148.232 -120.0 20.0 -30.0 180.0 -19.923 -1.60469 -31.6738 -34.085 -9.8009 -19.1753 180.747 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.858571 -0.512695 0.0) (0.512695 0.858571 0.0) (0.0 0.0 1.0)) pos #f(-343.285 441.406 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1123=#s(extended-node plist ((:name . "r-0-4-20<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1123# to #1080# cost 0) #s(costed-arc plist nil from #1123# to #1124=#s(extended-node plist ((:name . #1125="r-0-4-20")) arc-list (#s(costed-arc plist nil from #1124# to #1123# cost 0) #s(costed-arc plist nil from #1124# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(227.826 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.581 19.1138 -38.9394 -49.1244 -12.4699 -5.73671 182.313 0.0 0.0) robot-pose-optimized #f(226.12 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -58.6966 27.6607 -41.0108 -64.0981 -10.2595 -24.6096 182.323 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.886715 -0.462317 0.0) (0.462317 0.886715 0.0) (0.0 0.0 1.0)) pos #f(-357.871 446.217 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.536759 -0.843736 0.0) (0.843736 0.536759 0.0) (0.0 0.0 1.0)) pos #f(-353.681 434.353 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1125# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(145.577 -14.417 49.4919 165.679 -120.0 20.0 -30.0 180.0 -20.4371 12.3264 -37.3539 -46.3843 -12.3534 -6.05152 182.313 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.886715 -0.462317 0.0) (0.462317 0.886715 0.0) (0.0 0.0 1.0)) pos #f(-357.871 446.217 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1126=#s(extended-node plist ((:name . "r-0-4-21<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1126# to #1080# cost 0) #s(costed-arc plist nil from #1126# to #1127=#s(extended-node plist ((:name . #1128="r-0-4-21")) arc-list (#s(costed-arc plist nil from #1127# to #1126# cost 0) #s(costed-arc plist nil from #1127# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.154 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.8909 28.8724 -44.5932 -48.0477 -13.7383 -5.73642 180.634 0.0 0.0) robot-pose-optimized #f(223.973 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.0803 40.2888 -44.7036 -62.9359 -10.6998 -26.112 181.002 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.883594 -0.468255 0.0) (0.468255 0.883594 0.0) (0.0 0.0 1.0)) pos #f(-351.416 436.166 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.531087 -0.847317 0.0) (0.847317 0.531087 0.0) (0.0 0.0 1.0)) pos #f(-344.448 425.585 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1128# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(149.437 -13.1071 50.1429 168.401 -120.0 20.0 -30.0 180.0 -23.19 24.4313 -43.9735 -49.9796 -13.6559 -5.91085 180.634 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.883594 -0.468255 0.0) (0.468255 0.883594 0.0) (0.0 0.0 1.0)) pos #f(-351.416 436.166 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1129=#s(extended-node plist ((:name . "r-0-4-22<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1129# to #1080# cost 0) #s(costed-arc plist nil from #1129# to #1130=#s(extended-node plist ((:name . #1132="r-0-4-22")) arc-list (#s(costed-arc plist nil from #1130# to #1131=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1131# to #952# cost 0) #s(costed-arc plist nil from #1131# to #1130# cost 0)) arm :arms islands (#1132# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(174.469 38.6077 48.3912 119.662 -92.2845 -55.7261 -95.3616 36.2181 -27.1158 26.1163 -65.2301 -36.0872 -23.1445 -22.7775 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1130# to #1133=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1133# to #971# cost 0) #s(costed-arc plist nil from #1133# to #1130# cost 0)) arm :arms islands (#1132# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(171.587 43.2518 55.7073 131.063 -74.7903 -64.2082 -91.0354 36.2181 -27.2097 26.0328 -65.1586 -36.3837 -23.1008 -22.6929 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1130# to #1134=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-20")) arc-list (#s(costed-arc plist nil from #1134# to #1135=#s(extended-node plist ((:name . #1136="l-0-4-20")) arc-list (#s(costed-arc plist nil from #1135# to #1134# cost 0) #s(costed-arc plist nil from #1135# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(231.289 102.301 -8.31778 90.3823 -99.3257 -18.7944 -6.72254 180.637 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(231.52 59.042 -1.55832 87.0865 -82.1236 -29.97 -5.73015 186.959 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.993151 -0.116839 0.0) (0.116839 0.993151 0.0) (0.0 0.0 1.0)) pos #f(264.559 -120.849 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.801678 -0.597756 0.0) (0.597756 0.801678 0.0) (0.0 0.0 1.0)) pos #f(241.242 -126.198 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1134# to #1130# cost 0)) arm :arms islands (#1132# #1136#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(196.082 -24.3151 -7.23102 139.026 -8.59437 -105.83 -9.41962 36.2181 -27.0032 28.3337 -65.2939 -38.7549 -22.8342 -13.9658 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1130# to #1129# cost 0) #s(costed-arc plist nil from #1130# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.135 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.3512 30.1564 -65.1028 -40.2807 -22.6081 -5.73662 173.918 0.0 0.0) robot-pose-optimized #f(217.347 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -66.8462 39.3289 -64.4721 -53.5969 -22.1723 -29.276 173.503 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.501214 -0.865323 0.0) (0.865323 0.501214 0.0) (0.0 0.0 1.0)) pos #f(-331.582 410.564 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1132# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.48 -12.7216 50.5021 163.569 -120.0 20.0 -30.0 180.0 -28.454 27.7129 -64.35 -46.1027 -22.4894 -5.74442 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1137=#s(extended-node plist ((:name . "r-0-4-23<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1137# to #1080# cost 0) #s(costed-arc plist nil from #1137# to #942# cost 0)) arm :arms islands (#1045# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.923 12.0668 59.5142 153.789 -120.0 20.0 -30.0 180.0 -14.9955 39.0575 -68.8815 -30.4191 -13.1131 -24.2434 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1138=#s(extended-node plist ((:name . "r-2-4-16<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1138# to #1080# cost 0) #s(costed-arc plist nil from #1138# to #1139=#s(extended-node plist ((:name . #1140="r-2-4-16")) arc-list (#s(costed-arc plist nil from #1139# to #1138# cost 0) #s(costed-arc plist nil from #1139# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(170.518 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.27191 29.011 -137.93 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(252.888 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -44.217 40.9194 -160.694 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.524128 -0.851639 0.0) (0.851639 0.524128 0.0) (0.0 0.0 1.0)) pos #f(-162.775 363.764 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.028088 -0.999605 0.0) (0.999605 0.028088 0.0) (0.0 0.0 1.0)) pos #f(-204.048 353.938 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1140# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(177.514 -15.7682 55.5493 166.588 -120.0 20.0 -30.0 180.0 -8.25877 29.7179 -137.924 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.524128 -0.851639 0.0) (0.851639 0.524128 0.0) (0.0 0.0 1.0)) pos #f(-162.775 363.764 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1080# to #1079# cost 0) #s(costed-arc plist nil from #1080# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(196.251 65.5752 59.1622 142.49 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(187.183 75.933 57.3795 145.852 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998631 -0.052301 0.0) (0.052301 0.998631 0.0) (0.0 0.0 1.0)) pos #f(-119.175 160.026 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.995971 0.089673 0.0) (-0.089673 0.995971 0.0) (0.0 0.0 1.0)) pos #f(-137.89 136.807 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1079# to #1078# cost 0)) arm :arms islands (#1141# #1085#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.183 1.5202 56.9374 169.463 -120.0 20.0 -30.0 180.0 -15.4571 -8.28989 -134.797 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(257.054 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -15.4652 -0.37129 -134.036 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1141# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.964 23.5515 44.7723 127.467 -62.3932 38.1482 -30.0 180.0 -15.4596 -6.6475 -134.648 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1040# to #968# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(58.4131 101.793 56.7124 108.428 -121.156 56.8688 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.983878 -0.178838 0.0) (0.178838 0.983878 0.0) (0.0 0.0 1.0)) pos #f(-44.5368 255.142 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1039# to #1012# cost 0)) arm :arms islands (#1014# #1042#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(150.117 0.632342 28.719 155.244 -39.3469 -40.1878 -30.0 180.0 -19.9286 29.3757 -64.0026 -77.4428 -9.95811 -22.549 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #1142=#s(extended-node plist ((:name . "r-0-4-9<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1142# to #984# cost 0) #s(costed-arc plist nil from #1142# to #1012# cost 0)) arm :arms islands (#1014# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.181 -5.85829 33.3673 165.004 -120.0 20.0 -30.0 180.0 -20.7091 33.3387 -66.3019 -76.8409 -10.352 -21.3778 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1012# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(221.735 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.8691 35.3723 -66.5055 -77.3775 -10.4651 -18.9348 186.473 0.0 0.0) robot-pose-optimized #f(222.462 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.9416 36.9871 -73.9258 -90.2078 -17.2614 -19.8415 186.999 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.603558 -0.797319 0.0) (0.797319 0.603558 0.0) (0.0 0.0 1.0)) pos #f(-449.838 364.127 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1014# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(197.675 6.61796 55.1745 73.8195 -51.8974 -102.154 -65.8711 180.0 -20.5122 31.0541 -67.1412 -73.7692 -10.3942 -28.1048 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1006# to #1005# cost 0) #s(costed-arc plist nil from #1006# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(200.468 93.1696 36.5922 113.721 -84.426 5.09889 -5.73357 201.317 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(193.013 55.7753 42.8473 98.2917 -72.4874 -8.80078 -5.73011 203.238 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.937875 -0.346972 0.0) (0.346972 0.937875 0.0) (0.0 0.0 1.0)) pos #f(-39.8924 23.3223 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.638738 -0.769425 0.0) (0.769425 0.638738 0.0) (0.0 0.0 1.0)) pos #f(-21.5026 20.2465 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1005# to #1000# cost 0)) arm :arms islands (#1002# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.82 6.60179 54.4936 75.376 -52.697 -104.885 -63.1339 180.0 -21.9393 39.2176 -75.0408 -63.1599 -10.7231 -32.365 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #1026# cost 0) #s(costed-arc plist nil from #1000# to #1143=#s(extended-node plist ((:name . "r-0-4-10<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1143# to #984# cost 0) #s(costed-arc plist nil from #1143# to #1000# cost 0)) arm :arms islands (#1002# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.304 -7.82044 32.1028 154.147 -120.0 20.0 -30.0 180.0 -22.2509 41.1095 -73.0134 -66.3318 -10.3274 -27.3297 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.821 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.1292 42.9927 -73.0373 -65.7018 -10.404 -24.9909 186.754 0.0 0.0) robot-pose-optimized #f(218.7 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -56.8678 58.5756 -70.9283 -79.2507 -11.6712 -28.9301 187.263 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.603007 -0.797736 0.0) (0.797736 0.603007 0.0) (0.0 0.0 1.0)) pos #f(-446.195 381.465 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1002# #996#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(204.027 9.49684 38.2932 71.3156 -76.2735 -93.7292 -73.8711 180.0 -21.8798 39.1919 -75.1879 -62.795 -10.7608 -32.7414 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #994# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.252 108.966 46.2713 91.1067 -121.36 -13.6644 -5.72958 186.032 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(219.18 51.9528 74.2629 50.8394 -112.612 -34.5122 -5.72958 190.566 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.945027 -0.326991 0.0) (0.326991 0.945027 0.0) (0.0 0.0 1.0)) pos #f(30.0358 98.9399 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.654922 -0.755697 0.0) (0.755697 0.654922 0.0) (0.0 0.0 1.0)) pos #f(55.3201 81.4293 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #993# to #988# cost 0)) arm :arms islands (#990# #996#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.865 9.7326 38.9602 69.0412 -73.9265 -90.2581 -76.3217 180.0 -16.1922 46.9747 -94.0741 -68.3421 -15.841 -17.7957 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #988# to #1024# cost 0) #s(costed-arc plist nil from #988# to #1038# cost 0) #s(costed-arc plist nil from #988# to #987# cost 0) #s(costed-arc plist nil from #988# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(211.468 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -17.0309 50.9736 -92.0256 -72.2227 -15.574 -5.73877 180.694 0.0 0.0) robot-pose-optimized #f(203.997 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -50.4863 74.2725 -84.588 -82.1455 -14.9248 -5.72958 180.724 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.652115 -0.75812 0.0) (0.75812 0.652115 0.0) (0.0 0.0 1.0)) pos #f(-440.841 366.979 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#990# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(183.01 -5.57107 30.5327 147.911 -120.0 20.0 -30.0 180.0 -17.9765 49.5314 -92.1315 -75.4789 -15.5308 -5.73413 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #984# to #1083# cost 0) #s(costed-arc plist nil from #984# to #983# cost 0) #s(costed-arc plist nil from #984# to #1089# cost 0) #s(costed-arc plist nil from #984# to #1142# cost 0) #s(costed-arc plist nil from #984# to #1143# cost 0) #s(costed-arc plist nil from #984# to #1032# cost 0) #s(costed-arc plist nil from #984# to #1099# cost 0) #s(costed-arc plist nil from #984# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.665 67.9164 37.7857 141.431 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(218.612 64.6691 35.4679 139.199 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997706 -0.067701 0.0) (0.067701 0.997706 0.0) (0.0 0.0 1.0)) pos #f(-137.34 28.9828 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.9935 -0.113828 0.0) (0.113828 0.9935 0.0) (0.0 0.0 1.0)) pos #f(-136.677 22.9731 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #983# to #979# cost 0)) arm :arms islands (#981# #986#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(225.636 -8.42204 37.7558 190.462 -120.0 20.0 -30.0 180.0 -13.844 18.7893 -42.4376 -87.8852 -13.5669 -6.57426 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #979# to #1086# cost 0) #s(costed-arc plist nil from #979# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(226.777 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.2485 19.6417 -41.5004 -88.3835 -13.8182 -5.7395 180.334 0.0 0.0) robot-pose-optimized #f(227.634 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -49.3355 10.0543 -54.5441 -98.5 -24.525 -10.4927 179.869 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.642559 -0.766236 0.0) (0.766236 0.642559 0.0) (0.0 0.0 1.0)) pos #f(-409.565 410.88 0.0)) object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#981# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.595 41.3078 60.4275 113.119 -65.7975 -56.1165 -84.9016 17.3821 -13.0811 10.3977 -40.9855 -76.9268 -13.0593 -23.436 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #1016# cost 0) #s(costed-arc plist nil from #971# to #1004# cost 0) #s(costed-arc plist nil from #971# to #1031# cost 0) #s(costed-arc plist nil from #971# to #1133# cost 0) #s(costed-arc plist nil from #971# to #1144=#s(extended-node plist ((:name . "r-2-4-1<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1144# to #971# cost 0) #s(costed-arc plist nil from #1144# to #1145=#s(extended-node plist ((:name . #1147="r-2-4-1")) arc-list (#s(costed-arc plist nil from #1145# to #1146=#s(extended-node plist ((:name . "r-2-4-1<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1146# to #952# cost 0) #s(costed-arc plist nil from #1146# to #1145# cost 0)) arm :arms islands (#1147# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(259.245 30.8014 42.8001 128.155 -81.5127 -77.6804 -97.1217 40.0434 29.5951 -19.2958 -149.256 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1145# to #1144# cost 0) #s(costed-arc plist nil from #1145# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(251.731 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.6256 -20.074 -144.922 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1147# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(257.195 29.6727 51.0828 135.494 -63.6374 -88.731 -87.9982 40.0434 29.5902 -19.4697 -149.462 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #1148=#s(extended-node plist ((:name . "r-2-4-19<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1148# to #971# cost 0) #s(costed-arc plist nil from #1148# to #1149=#s(extended-node plist ((:name . #1151="r-2-4-19")) arc-list (#s(costed-arc plist nil from #1149# to #1150=#s(extended-node plist ((:name . "r-2-4-19<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1150# to #952# cost 0) #s(costed-arc plist nil from #1150# to #1149# cost 0)) arm :arms islands (#1151# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(260.31 63.9953 50.1968 113.682 -75.7536 -6.02288 -90.9863 180.0 -15.8672 -19.3122 -143.718 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1149# to #1148# cost 0) #s(costed-arc plist nil from #1149# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(260.245 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -15.4084 -19.8194 -129.742 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1151# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(258.506 63.6162 53.8195 122.213 -55.2906 -2.4144 -83.3694 180.0 -15.8735 -19.4565 -143.926 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #1152=#s(extended-node plist ((:name . "r-2-4-21<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1152# to #971# cost 0) #s(costed-arc plist nil from #1152# to #1153=#s(extended-node plist ((:name . #1154="r-2-4-21")) arc-list (#s(costed-arc plist nil from #1153# to #1152# cost 0) #s(costed-arc plist nil from #1153# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.055 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.1219 18.1606 -144.687 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.480694 -0.876888 0.0) (0.876888 0.480694 0.0) (0.0 0.0 1.0)) pos #f(5.04264 294.135 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1154# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(236.325 68.1396 53.7417 124.987 -57.1264 -8.35589 -89.0781 180.0 -10.8657 16.7126 -137.049 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.480694 -0.876888 0.0) (0.876888 0.480694 0.0) (0.0 0.0 1.0)) pos #f(5.04264 294.135 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #971# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(152.605 116.65 14.11 148.29 -121.305 -27.3991 -5.72958 175.975 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(147.587 122.349 60.3131 131.684 -106.227 -26.8189 -5.72958 177.282 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.928429 -0.37151 0.0) (0.37151 0.928429 0.0) (0.0 0.0 1.0)) pos #f(8.29461 275.382 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.61829 -0.78595 0.0) (0.78595 0.61829 0.0) (0.0 0.0 1.0)) pos #f(36.2626 266.056 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #970# to #962# cost 0)) arm :arms islands (#969# #974#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.827 -17.2315 69.4826 3.6514 -81.8799 -127.537 -93.1315 222.959 -14.1786 33.2265 -69.9801 -81.4551 -9.06657 -33.1578 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1155=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-6")) arc-list (#s(costed-arc plist nil from #1155# to #1156=#s(extended-node plist ((:name . #1158="l-0-4-6")) arc-list (#s(costed-arc plist nil from #1156# to #1155# cost 0) #s(costed-arc plist nil from #1156# to #1157=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-6")) arc-list (#s(costed-arc plist nil from #1157# to #1156# cost 0) #s(costed-arc plist nil from #1157# to #958# cost 0)) arm :arms islands (#966# #1158#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(161.66 -10.4984 -7.13679 4.64354 -60.3768 -176.398 -33.1085 234.959 -16.1056 36.1283 -81.3842 -72.4459 -11.0423 -39.4736 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1156# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(238.475 121.416 -10.6171 46.1817 -107.696 -32.0474 -5.73349 170.675 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(240.725 87.6496 -19.0094 56.1135 -96.9478 -12.7478 -5.7303 169.576 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.978708 -0.205256 0.0) (0.205256 0.978708 0.0) (0.0 0.0 1.0)) pos #f(165.385 64.8203 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.744958 -0.667111 0.0) (0.667111 0.744958 0.0) (0.0 0.0 1.0)) pos #f(184.563 54.1602 0.0)) object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1155# to #962# cost 0)) arm :arms islands (#969# #1158#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(215.349 -14.6657 -1.08472 5.50572 -64.7179 -140.779 -40.3734 222.959 -14.6785 35.2312 -71.1071 -81.2753 -9.35903 -32.0198 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1159=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-7")) arc-list (#s(costed-arc plist nil from #1159# to #1160=#s(extended-node plist ((:name . #1162="l-0-4-7")) arc-list (#s(costed-arc plist nil from #1160# to #1159# cost 0) #s(costed-arc plist nil from #1160# to #1161=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-7")) arc-list (#s(costed-arc plist nil from #1161# to #1160# cost 0) #s(costed-arc plist nil from #1161# to #958# cost 0)) arm :arms islands (#966# #1162#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(155.365 -9.96606 13.8575 4.85144 -80.8973 -176.298 -36.827 234.959 -16.0892 35.8889 -81.003 -72.8563 -10.9356 -39.4554 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1160# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(235.597 114.316 -2.69056 61.9504 -121.492 -22.4083 -5.72958 175.36 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(235.094 79.3394 -9.47244 68.5898 -108.621 -11.1032 -5.72958 175.385 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.954005 -0.299791 0.0) (0.299791 0.954005 0.0) (0.0 0.0 1.0)) pos #f(111.88 94.379 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.676305 -0.736622 0.0) (0.736622 0.676305 0.0) (0.0 0.0 1.0)) pos #f(136.251 77.9852 0.0)) object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1159# to #962# cost 0)) arm :arms islands (#969# #1162#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(213.412 -17.2803 17.9382 2.5884 -81.0662 -136.926 -47.5081 222.959 -14.66 35.1854 -70.9662 -81.4683 -9.33308 -31.7565 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1163=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-8")) arc-list (#s(costed-arc plist nil from #1163# to #1164=#s(extended-node plist ((:name . #1166="l-0-4-8")) arc-list (#s(costed-arc plist nil from #1164# to #1163# cost 0) #s(costed-arc plist nil from #1164# to #1165=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-8")) arc-list (#s(costed-arc plist nil from #1165# to #1164# cost 0) #s(costed-arc plist nil from #1165# to #958# cost 0)) arm :arms islands (#966# #1166#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(153.366 -9.86112 32.305 4.86057 -91.6851 -176.234 -38.5545 234.959 -16.0954 35.8355 -80.8746 -73.0258 -10.8998 -39.3686 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1164# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.806 113.517 -8.54462 86.5594 -121.449 -34.1429 -5.72958 163.77 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(226.495 75.2129 -9.40045 90.2221 -107.35 -53.7948 -5.72958 165.073 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.92075 -0.390154 0.0) (0.390154 0.92075 0.0) (0.0 0.0 1.0)) pos #f(128.474 54.5924 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.602315 -0.798258 0.0) (0.798258 0.602315 0.0) (0.0 0.0 1.0)) pos #f(152.112 32.2518 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1163# to #962# cost 0)) arm :arms islands (#969# #1166#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(212.566 -19.2466 34.2853 0.335675 -88.3281 -134.948 -51.8525 222.959 -14.6635 35.2066 -70.8922 -81.6265 -9.3214 -31.4859 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1010# cost 0) #s(costed-arc plist nil from #962# to #1167=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-13")) arc-list (#s(costed-arc plist nil from #1167# to #1168=#s(extended-node plist ((:name . #1170="l-0-4-13")) arc-list (#s(costed-arc plist nil from #1168# to #1167# cost 0) #s(costed-arc plist nil from #1168# to #1169=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-13")) arc-list (#s(costed-arc plist nil from #1169# to #1168# cost 0) #s(costed-arc plist nil from #1169# to #958# cost 0)) arm :arms islands (#966# #1170#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(164.027 -16.3529 -13.2447 1.92795 -12.1365 -177.17 -11.1643 234.959 -16.2759 36.7167 -81.2794 -72.8717 -11.0212 -38.356 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1168# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(232.096 108.537 -7.25042 68.1952 -107.061 -24.3222 -6.67083 175.849 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(233.785 68.9518 -3.92492 69.0135 -94.8123 -31.9458 -5.7308 179.642 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.977757 -0.209741 0.0) (0.209741 0.977757 0.0) (0.0 0.0 1.0)) pos #f(204.238 -33.8812 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.741892 -0.67052 0.0) (0.67052 0.741892 0.0) (0.0 0.0 1.0)) pos #f(219.842 -43.9578 0.0)) object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1167# to #962# cost 0)) arm :arms islands (#969# #1170#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(221.131 -18.4068 -4.99131 -2.54158 -23.051 -145.048 -19.0538 222.959 -14.9538 36.3714 -71.1521 -82.3042 -9.40231 -29.4297 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1171=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-14")) arc-list (#s(costed-arc plist nil from #1171# to #1172=#s(extended-node plist ((:name . #1174="l-0-4-14")) arc-list (#s(costed-arc plist nil from #1172# to #1171# cost 0) #s(costed-arc plist nil from #1172# to #1173=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-14")) arc-list (#s(costed-arc plist nil from #1173# to #1172# cost 0) #s(costed-arc plist nil from #1173# to #958# cost 0)) arm :arms islands (#966# #1174#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(82.9881 -16.3927 0.616661 0.790509 -29.2072 -175.762 -13.8603 234.959 -15.5161 33.1343 -76.1848 -77.1399 -9.66663 -38.6643 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1172# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.776 113.834 -8.2425 87.4707 -121.489 -23.8365 -5.72958 181.49 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(235.381 71.7847 -4.14908 88.3765 -105.722 -38.2321 -5.72958 191.171 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.955375 -0.295397 0.0) (0.295397 0.955375 0.0) (0.0 0.0 1.0)) pos #f(265.058 23.6767 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.679683 -0.733506 0.0) (0.733506 0.679683 0.0) (0.0 0.0 1.0)) pos #f(255.563 1.03266 0.0)) object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1171# to #962# cost 0)) arm :arms islands (#969# #1174#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(219.686 -20.4604 11.8123 -6.33512 -35.7437 -140.626 -23.2952 222.959 -14.9464 36.3683 -71.0383 -82.5073 -9.38329 -29.1091 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1175=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-1")) arc-list (#s(costed-arc plist nil from #1175# to #1176=#s(extended-node plist ((:name . #1177="l-1-4-1")) arc-list (#s(costed-arc plist nil from #1176# to #1175# cost 0) #s(costed-arc plist nil from #1176# to #968# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(225.314 114.401 -16.0527 38.0614 -120.556 -46.5306 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.953711 -0.300724 0.0) (0.300724 0.953711 0.0) (0.0 0.0 1.0)) pos #f(203.568 196.288 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1175# to #962# cost 0)) arm :arms islands (#969# #1177#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(271.222 0.092167 0.019969 17.4651 -64.8675 53.1458 -30.0 180.0 -15.9816 40.7003 -73.3076 -81.9248 -9.91219 -25.6364 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1178=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-2")) arc-list (#s(costed-arc plist nil from #1178# to #1179=#s(extended-node plist ((:name . #1180="l-1-4-2")) arc-list (#s(costed-arc plist nil from #1179# to #1178# cost 0) #s(costed-arc plist nil from #1179# to #968# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(191.898 98.6325 3.85677 50.9616 -121.541 -19.0788 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.949702 -0.313155 0.0) (0.313155 0.949702 0.0) (0.0 0.0 1.0)) pos #f(105.533 112.24 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1178# to #962# cost 0)) arm :arms islands (#969# #1180#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(269.817 2.67607 20.2531 24.5719 -74.0912 55.1304 -30.0 180.0 -15.9857 40.7159 -73.2052 -82.1762 -9.89512 -25.2391 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #1050# cost 0) #s(costed-arc plist nil from #962# to #1181=#s(extended-node plist ((:name . "r-0-4-3<->-l-2-4-2")) arc-list (#s(costed-arc plist nil from #1181# to #1182=#s(extended-node plist ((:name . #1184="l-2-4-2")) arc-list (#s(costed-arc plist nil from #1182# to #1181# cost 0) #s(costed-arc plist nil from #1182# to #1183=#s(extended-node plist ((:name . "r-0-4-4<->-l-2-4-2")) arc-list (#s(costed-arc plist nil from #1183# to #1182# cost 0) #s(costed-arc plist nil from #1183# to #958# cost 0)) arm :arms islands (#966# #1184#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(235.16 -6.94513 -1.551 142.957 -120.0 20.0 -30.0 180.0 -17.1096 45.3098 -80.8838 -72.3409 -11.2571 -28.6356 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1182# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(245.645 69.7838 -1.21635 148.803 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997313 -0.073259 0.0) (0.073259 0.997313 0.0) (0.0 0.0 1.0)) pos #f(-145.481 -62.5522 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1181# to #962# cost 0)) arm :arms islands (#969# #1184#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(287.5 -7.30587 2.67052 121.771 -120.0 20.0 -30.0 180.0 -16.3156 42.5131 -73.7089 -82.2958 -10.0218 -22.9838 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #962# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(220.625 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.8981 39.9526 -68.97 -86.4331 -9.3443 -20.6744 186.654 0.0 0.0) robot-pose-optimized #f(222.843 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.3734 31.6986 -77.8602 -91.4166 -19.3809 -5.72958 187.403 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.875393 -0.483412 0.0) (0.483412 0.875393 0.0) (0.0 0.0 1.0)) pos #f(-513.652 345.947 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#969# #1185#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.637 -9.77397 -0.94764 15.9566 -86.424 -115.453 -71.8259 222.959 -14.2536 33.379 -70.5841 -80.6646 -9.1757 -34.314 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #960# to #959# cost 0) #s(costed-arc plist nil from #960# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(236.299 109.088 -0.375906 31.5852 -120.578 -29.2569 -7.62977 169.422 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(247.721 122.349 -20.2598 44.6517 -114.289 -1.82856 -5.72958 155.458 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.972238 -0.233995 0.0) (0.233995 0.972238 0.0) (0.0 0.0 1.0)) pos #f(-22.2966 218.792 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.913093 -0.407752 0.0) (0.407752 0.913093 0.0) (0.0 0.0 1.0)) pos #f(13.8903 196.644 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #959# to #958# cost 0)) arm :arms islands (#966# #1185#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(185.633 16.8569 -5.79613 43.5367 -94.1088 -140.347 -57.5824 234.959 -15.9803 36.4544 -83.1529 -70.359 -11.5285 -40.3592 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #958# to #957# cost 0) #s(costed-arc plist nil from #958# to #965# cost 0) #s(costed-arc plist nil from #958# to #1186=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1186# to #948# cost 0) #s(costed-arc plist nil from #1186# to #958# cost 0)) arm :arms islands (#966# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(179.318 34.1387 38.1392 80.651 -120.321 -142.193 -69.2303 234.959 -16.0233 36.2754 -82.7742 -70.8933 -11.4153 -40.1827 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #958# to #977# cost 0) #s(costed-arc plist nil from #958# to #1157# cost 0) #s(costed-arc plist nil from #958# to #1161# cost 0) #s(costed-arc plist nil from #958# to #1165# cost 0) #s(costed-arc plist nil from #958# to #998# cost 0) #s(costed-arc plist nil from #958# to #1169# cost 0) #s(costed-arc plist nil from #958# to #1173# cost 0) #s(costed-arc plist nil from #958# to #1043# cost 0) #s(costed-arc plist nil from #958# to #1183# cost 0) #s(costed-arc plist nil from #958# to #1187=#s(extended-node plist ((:name . "r-0-4-4<->-l-2-4-3")) arc-list (#s(costed-arc plist nil from #1187# to #1188=#s(extended-node plist ((:name . #1190="l-2-4-3")) arc-list (#s(costed-arc plist nil from #1188# to #1189=#s(extended-node plist ((:name . "r-0-4-2<->-l-2-4-3")) arc-list (#s(costed-arc plist nil from #1189# to #1188# cost 0) #s(costed-arc plist nil from #1189# to #954# cost 0)) arm :arms islands (#976# #1190#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(250.971 -7.5207 18.5088 151.931 -120.0 20.0 -30.0 180.0 -12.4774 32.3467 -60.2187 -93.3645 -8.82159 -15.0674 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1188# to #1187# cost 0) #s(costed-arc plist nil from #1188# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(240.877 68.1702 17.4352 145.184 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997276 -0.073754 0.0) (0.073754 0.997276 0.0) (0.0 0.0 1.0)) pos #f(-155.167 -43.3623 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1187# to #958# cost 0)) arm :arms islands (#966# #1190#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(227.909 -7.01544 15.5513 142.528 -120.0 20.0 -30.0 180.0 -17.141 45.0755 -80.5486 -72.9296 -11.18 -28.6695 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #958# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.56 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -17.2951 46.1657 -79.0198 -74.9177 -10.9281 -26.2728 186.282 0.0 0.0) robot-pose-optimized #f(220.948 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7862 74.2725 -61.3144 -94.3356 -10.9502 -5.72958 186.415 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.707003 -0.707211 0.0) (0.707211 0.707003 0.0) (0.0 0.0 1.0)) pos #f(-494.526 366.255 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#966# #1191#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(182.718 24.094 8.35266 55.8561 -111.543 -140.782 -63.5101 234.959 -15.9944 36.3592 -82.9833 -70.5864 -11.4778 -40.3183 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #956# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.339 113.691 5.52404 57.2422 -121.525 -25.0338 -5.73889 171.568 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(225.869 79.5959 -3.1181 65.0707 -108.621 -30.1875 -5.73304 173.985 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.957721 -0.287699 0.0) (0.287699 0.957721 0.0) (0.0 0.0 1.0)) pos #f(-60.3938 118.522 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.685561 -0.728015 0.0) (0.728015 0.685561 0.0) (0.0 0.0 1.0)) pos #f(-40.0961 101.778 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #955# to #954# cost 0)) arm :arms islands (#976# #1191#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.172 2.65946 21.5462 13.6265 -120.85 -178.057 -71.7682 237.239 -11.5077 20.9078 -60.2502 -83.4611 -8.01142 -34.9365 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #954# to #1192=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1192# to #948# cost 0) #s(costed-arc plist nil from #1192# to #954# cost 0)) arm :arms islands (#976# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(145.188 35.5689 49.6026 62.775 -121.542 -166.697 -34.4545 237.239 -10.1427 17.3095 -56.9179 -83.0497 -7.37987 -33.1149 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #954# to #953# cost 0) #s(costed-arc plist nil from #954# to #975# cost 0) #s(costed-arc plist nil from #954# to #997# cost 0) #s(costed-arc plist nil from #954# to #1021# cost 0) #s(costed-arc plist nil from #954# to #1009# cost 0) #s(costed-arc plist nil from #954# to #1193=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-16")) arc-list (#s(costed-arc plist nil from #1193# to #1194=#s(extended-node plist ((:name . #1195="l-0-4-16")) arc-list (#s(costed-arc plist nil from #1194# to #1193# cost 0) #s(costed-arc plist nil from #1194# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(202.727 97.2417 51.2942 95.1158 -100.107 -6.80081 -5.7337 194.683 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(202.846 54.5463 57.6155 75.1645 -89.4307 -18.8005 -5.72993 199.588 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.948671 -0.316264 0.0) (0.316264 0.948671 0.0) (0.0 0.0 1.0)) pos #f(109.061 27.2033 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.663441 -0.748229 0.0) (0.748229 0.663441 0.0) (0.0 0.0 1.0)) pos #f(131.001 22.4781 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1193# to #954# cost 0)) arm :arms islands (#976# #1195#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(91.9932 -17.9101 25.8452 -1.49486 -35.0522 -170.655 -16.1924 237.239 -8.47757 14.6417 -52.6242 -84.458 -7.04381 -25.7386 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #954# to #1037# cost 0) #s(costed-arc plist nil from #954# to #1041# cost 0) #s(costed-arc plist nil from #954# to #1189# cost 0) #s(costed-arc plist nil from #954# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(223.531 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.2149 31.3162 -57.5507 -95.1384 -8.70093 -10.6428 186.357 0.0 0.0) robot-pose-optimized #f(225.576 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -19.3893 14.5178 -72.5109 -94.4611 -20.4952 -5.72958 194.993 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.89999 -0.43591 0.0) (0.43591 0.89999 0.0) (0.0 0.0 1.0)) pos #f(-507.511 361.889 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#976# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(141.87 37.9159 66.5026 65.594 -117.105 -170.101 -44.8452 237.239 -10.0414 17.1342 -56.6506 -83.1032 -7.34258 -32.786 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #952# to #992# cost 0) #s(costed-arc plist nil from #952# to #980# cost 0) #s(costed-arc plist nil from #952# to #1015# cost 0) #s(costed-arc plist nil from #952# to #1003# cost 0) #s(costed-arc plist nil from #952# to #1029# cost 0) #s(costed-arc plist nil from #952# to #1131# cost 0) #s(costed-arc plist nil from #952# to #1146# cost 0) #s(costed-arc plist nil from #952# to #1074# cost 0) #s(costed-arc plist nil from #952# to #1150# cost 0) #s(costed-arc plist nil from #952# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.654 108.746 25.6804 110.91 -105.844 -3.88214 -5.73816 191.582 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(205.852 72.5689 45.223 92.1329 -93.458 -22.0148 -5.73008 193.619 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.929549 -0.368698 0.0) (0.368698 0.929549 0.0) (0.0 0.0 1.0)) pos #f(-119.948 62.6042 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.620665 -0.784076 0.0) (0.784076 0.620665 0.0) (0.0 0.0 1.0)) pos #f(-99.709 57.8371 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #951# to #950# cost 0)) arm :arms islands (#973# #982#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(192.611 30.5492 55.1598 99.9811 -84.4427 -74.077 -94.9902 180.0 -7.50345 10.8898 -46.8832 -89.3609 -12.9175 -24.5176 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #950# to #972# cost 0) #s(costed-arc plist nil from #950# to #995# cost 0) #s(costed-arc plist nil from #950# to #1019# cost 0) #s(costed-arc plist nil from #950# to #1007# cost 0) #s(costed-arc plist nil from #950# to #1035# cost 0) #s(costed-arc plist nil from #950# to #985# cost 0) #s(costed-arc plist nil from #950# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(226.529 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -7.4453 18.1732 -47.6565 -99.4863 -13.5538 -5.74253 180.795 0.0 0.0) robot-pose-optimized #f(228.635 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.6325 0.783345 -62.623 -95.6127 -32.0648 -5.7296 180.455 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.951458 -0.307779 0.0) (0.307779 0.951458 0.0) (0.0 0.0 1.0)) pos #f(-455.423 400.596 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#973# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.184 26.403 40.1348 92.3027 -94.7031 -67.9182 -95.2003 180.0 -7.58647 10.9072 -47.0353 -89.2326 -12.9184 -25.0208 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #948# to #1192# cost 0) #s(costed-arc plist nil from #948# to #1186# cost 0) #s(costed-arc plist nil from #948# to #989# cost 0) #s(costed-arc plist nil from #948# to #1013# cost 0) #s(costed-arc plist nil from #948# to #1001# cost 0) #s(costed-arc plist nil from #948# to #1072# cost 0) #s(costed-arc plist nil from #948# to #947# cost 0) #s(costed-arc plist nil from #948# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(209.708 113.228 21.7692 97.9096 -121.196 -10.0721 -5.7332 185.475 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(212.544 72.7497 46.6621 80.2779 -109.243 -30.1663 -5.73034 193.738 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.93663 -0.350319 0.0) (0.350319 0.93663 0.0) (0.0 0.0 1.0)) pos #f(-108.983 109.293 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.63599 -0.771697 0.0) (0.771697 0.63599 0.0) (0.0 0.0 1.0)) pos #f(-91.6573 100.731 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #947# to #946# cost 0)) arm :arms islands (#1076# #991#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(223.042 62.5862 45.5648 98.1824 -121.542 7.34138 -19.7195 180.0 -3.11821 14.7515 -126.23 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #946# to #945# cost 0) #s(costed-arc plist nil from #946# to #1075# cost 0) #s(costed-arc plist nil from #946# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(241.067 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.2744 17.0189 -132.122 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1076# #1196#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(236.135 -31.1755 -17.1341 50.5002 -30.1373 166.142 -15.371 180.0 -3.19171 16.3552 -129.338 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #944# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(208.26 49.766 0.253842 26.6428 -60.8354 0.407291 -11.579 197.571 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(209.442 36.9561 4.34827 4.7753 -61.9175 -17.2796 -5.73017 199.932 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.964708 -0.263321 0.0) (0.263321 0.964708 0.0) (0.0 0.0 1.0)) pos #f(140.35 -134.916 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.966144 -0.258004 0.0) (0.258004 0.966144 0.0) (0.0 0.0 1.0)) pos #f(134.629 -147.437 0.0)) object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #943# to #942# cost 0)) arm :arms islands (#1045# #1196#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.358 -14.1123 -19.4521 25.2387 -15.7887 10.7984 -14.5588 330.483 -16.6157 37.7375 -69.351 -32.5436 -14.6266 -28.622 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #942# to #1052# cost 0) #s(costed-arc plist nil from #942# to #1044# cost 0) #s(costed-arc plist nil from #942# to #1137# cost 0) #s(costed-arc plist nil from #942# to #1118# cost 0) #s(costed-arc plist nil from #942# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(206.046 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.7822 39.4271 -68.8895 -30.5944 -12.5166 -22.1789 186.497 0.0 0.0) robot-pose-optimized #f(205.784 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.5294 51.3384 -68.1113 -44.7594 -11.7783 -39.817 186.53 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.500998 -0.865448 0.0) (0.865448 0.500998 0.0) (0.0 0.0 1.0)) pos #f(-175.91 292.697 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.993463) #s(costed-arc plist nil from #4# to #1130# cost 0.911773) #s(costed-arc plist nil from #4# to #1127# cost 0.93932) #s(costed-arc plist nil from #4# to #1124# cost 0.944236) #s(costed-arc plist nil from #4# to #1121# cost 0.934733) #s(costed-arc plist nil from #4# to #1111# cost 0.967586) #s(costed-arc plist nil from #4# to #1108# cost 0.988361) #s(costed-arc plist nil from #4# to #1105# cost 0.941892) #s(costed-arc plist nil from #4# to #1102# cost 0.903405) #s(costed-arc plist nil from #4# to #1098# cost 0.932099) #s(costed-arc plist nil from #4# to #1095# cost 0.942666) #s(costed-arc plist nil from #4# to #1092# cost 0.958461) #s(costed-arc plist nil from #4# to #1028# cost 0.976623) #s(costed-arc plist nil from #4# to #1000# cost 0.931754) #s(costed-arc plist nil from #4# to #1012# cost 0.890449) #s(costed-arc plist nil from #4# to #1088# cost 0.868551) #s(costed-arc plist nil from #4# to #979# cost 0.913772) #s(costed-arc plist nil from #4# to #1082# cost 0.940243) #s(costed-arc plist nil from #4# to #988# cost 0.939288) #s(costed-arc plist nil from #4# to #958# cost 0.939247) #s(costed-arc plist nil from #4# to #962# cost 0.9169) #s(costed-arc plist nil from #4# to #954# cost 0.907746) #s(costed-arc plist nil from #4# to #950# cost 0.898014) #s(costed-arc plist nil from #4# to #1197=#s(extended-node plist ((:name . "r-0-4-0")) arc-list (#s(costed-arc plist nil from #1197# to #968# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(225.28 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 7.66831 12.0458 -20.1681 -103.191 -12.5411 -7.83095 180.0 0.0 0.0) robot-pose-optimized #f(233.864 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -4.29822 -8.744 -48.5126 -92.6744 -26.0389 -5.72958 180.785 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.900578 -0.434695 0.0) (0.434695 0.900578 0.0) (0.0 0.0 1.0)) pos #f(-380.343 493.975 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.976687 -0.214668 0.0) (0.214668 0.976687 0.0) (0.0 0.0 1.0)) pos #f(-397.008 459.487 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.00624)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 3 door-angle -80 solved t robot-pose #f(136.16 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -51.8134 -2.5039 -78.3058 -113.762 -80.2357 -9.65838 267.359 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.801563 -0.597911 0.0) (0.597911 0.801563 0.0) (0.0 0.0 1.0)) pos #f(-394.828 291.617 0.0)) base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.15034) #s(costed-arc plist nil from #3# to #1198=#s(extended-node plist ((:name . "r-0-3-23")) arc-list (#s(costed-arc plist nil from #1198# to #5# cost 1.69) #s(costed-arc plist nil from #1198# to #942# cost 0.532559) #s(costed-arc plist nil from #1198# to #1130# cost 0.63098) #s(costed-arc plist nil from #1198# to #1127# cost 0.698069) #s(costed-arc plist nil from #1198# to #1124# cost 0.738509) #s(costed-arc plist nil from #1198# to #1121# cost 0.705783) #s(costed-arc plist nil from #1198# to #1111# cost 0.656071) #s(costed-arc plist nil from #1198# to #1108# cost 0.753288) #s(costed-arc plist nil from #1198# to #1105# cost 0.78596) #s(costed-arc plist nil from #1198# to #1102# cost 0.858223) #s(costed-arc plist nil from #1198# to #1098# cost 0.888943) #s(costed-arc plist nil from #1198# to #1095# cost 0.900409) #s(costed-arc plist nil from #1198# to #1092# cost 0.856891) #s(costed-arc plist nil from #1198# to #1028# cost 0.835192) #s(costed-arc plist nil from #1198# to #1000# cost 0.862916) #s(costed-arc plist nil from #1198# to #1012# cost 0.894541) #s(costed-arc plist nil from #1198# to #1088# cost 0.944874) #s(costed-arc plist nil from #1198# to #979# cost 0.970616) #s(costed-arc plist nil from #1198# to #1082# cost 0.975547) #s(costed-arc plist nil from #1198# to #988# cost 0.938218) #s(costed-arc plist nil from #1198# to #958# cost 0.934251) #s(costed-arc plist nil from #1198# to #962# cost 0.969553) #s(costed-arc plist nil from #1198# to #954# cost 1.00999) #s(costed-arc plist nil from #1198# to #950# cost 1.02876) #s(costed-arc plist nil from #1198# to #1197# cost 1.11658)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(164.487 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -27.6134 32.6542 -55.8681 -17.7477 -20.9441 -15.3428 188.09 0.0 0.0) robot-pose-optimized #f(166.957 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -67.1216 45.289 -48.5537 -32.2071 -18.6774 -37.7688 187.623 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.598039 -0.801467 0.0) (0.801467 0.598039 0.0) (0.0 0.0 1.0)) pos #f(-268.646 161.329 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.117183 -0.99311 0.0) (0.99311 0.117183 0.0) (0.0 0.0 1.0)) pos #f(-265.793 136.461 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.47777) #s(costed-arc plist nil from #3# to #1199=#s(extended-node plist ((:name . #1369="r-0-3-22")) arc-list (#s(costed-arc plist nil from #1199# to #1200=#s(extended-node plist ((:name . "r-0-3-22<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1200# to #1201=#s(extended-node plist ((:name . #1238="l-0-3-4")) arc-list (#s(costed-arc plist nil from #1201# to #1202=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1202# to #1201# cost 0) #s(costed-arc plist nil from #1202# to #1203=#s(extended-node plist ((:name . #1211="r-0-3-3")) arc-list (#s(costed-arc plist nil from #1203# to #1204=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #1204# to #1205=#s(extended-node plist ((:name . #1217="l-0-3-0")) arc-list (#s(costed-arc plist nil from #1205# to #1204# cost 0) #s(costed-arc plist nil from #1205# to #1206=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #1206# to #1205# cost 0) #s(costed-arc plist nil from #1206# to #1207=#s(extended-node plist ((:name . #1223="r-0-3-4")) arc-list (#s(costed-arc plist nil from #1207# to #1206# cost 0) #s(costed-arc plist nil from #1207# to #1208=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #1208# to #1209=#s(extended-node plist ((:name . #1212="l-0-3-1")) arc-list (#s(costed-arc plist nil from #1209# to #1210=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #1210# to #1209# cost 0) #s(costed-arc plist nil from #1210# to #1203# cost 0)) arm :arms islands (#1211# #1212#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(164.861 -19.6342 14.895 29.3169 -82.742 -101.71 -65.0838 199.917 -33.9772 38.0854 -64.1868 -86.5054 -12.2115 -39.9011 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1209# to #1208# cost 0) #s(costed-arc plist nil from #1209# to #1213=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #1213# to #1209# cost 0) #s(costed-arc plist nil from #1213# to #1214=#s(extended-node plist ((:name . #1216="r-0-3-5")) arc-list (#s(costed-arc plist nil from #1214# to #1215=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #1215# to #1205# cost 0) #s(costed-arc plist nil from #1215# to #1214# cost 0)) arm :arms islands (#1216# #1217#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(126.076 -15.1359 -3.35762 7.7412 -82.5431 179.949 -32.8009 339.803 -35.5361 49.7625 -84.123 -69.7691 -21.5633 -40.6165 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1214# to #1213# cost 0) #s(costed-arc plist nil from #1214# to #1218=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #1218# to #1219=#s(extended-node plist ((:name . #1221="l-0-3-2")) arc-list (#s(costed-arc plist nil from #1219# to #1220=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #1220# to #1219# cost 0) #s(costed-arc plist nil from #1220# to #1203# cost 0)) arm :arms islands (#1211# #1221#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(162.878 -20.5096 32.5914 30.2756 -90.2425 -98.6118 -73.0077 199.917 -33.9201 38.0267 -64.0159 -86.6537 -12.1818 -39.6917 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1219# to #1222=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #1222# to #1219# cost 0) #s(costed-arc plist nil from #1222# to #1207# cost 0)) arm :arms islands (#1223# #1221#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(175.318 -20.2169 34.1003 28.467 -83.8226 -84.6852 -71.6394 194.347 -36.4466 44.9871 -76.1554 -75.5776 -15.7279 -40.3684 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1219# to #1218# cost 0) #s(costed-arc plist nil from #1219# to #1224=#s(extended-node plist ((:name . "l-0-4-rk")) arc-list (#s(costed-arc plist nil from #1224# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(239.642 53.4413 54.5777 1.19068 -121.537 -152.957 -69.4648 259.036 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(239.686 27.7765 46.6293 13.7959 -102.887 -146.987 -64.7126 243.739 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999346 -0.036167 0.0) (0.036167 0.999346 0.0) (0.0 0.0 1.0)) pos #f(-195.795 -38.4558 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.847375 -0.530994 0.0) (0.530994 0.847375 0.0) (0.0 0.0 1.0)) pos #f(-181.571 -45.933 0.0)) object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.782937) #s(costed-arc plist nil from #1219# to #1225=#s(extended-node plist ((:name . "l-0-4-fk")) arc-list (#s(costed-arc plist nil from #1225# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(152.363 87.7029 9.591 66.1207 -82.5121 3.32548 -112.943 -23.9516 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994072 -0.108728 0.0) (0.108728 0.994072 0.0) (0.0 0.0 1.0)) pos #f(-79.3173 240.642 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.60873) #s(costed-arc plist nil from #1219# to #1113# cost 1.46446) #s(costed-arc plist nil from #1219# to #1226=#s(extended-node plist ((:name . "l-0-4-22")) arc-list (#s(costed-arc plist nil from #1226# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(193.826 83.2677 -20.209 142.828 -92.2482 -5.2012 -5.73438 177.378 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999254 -0.038623 0.0) (0.038623 0.999254 0.0) (0.0 0.0 1.0)) pos #f(237.16 -143.729 0.0)) base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.47291) #s(costed-arc plist nil from #1219# to #1227=#s(extended-node plist ((:name . "l-0-4-21")) arc-list (#s(costed-arc plist nil from #1227# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(198.302 122.308 -20.2506 109.707 -121.23 -11.2685 -5.72958 187.907 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99677 0.080307 0.0) (-0.080307 0.99677 0.0) (0.0 0.0 1.0)) pos #f(335.468 -16.8712 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.47104) #s(costed-arc plist nil from #1219# to #1135# cost 1.3461) #s(costed-arc plist nil from #1219# to #1228=#s(extended-node plist ((:name . "l-0-4-19")) arc-list (#s(costed-arc plist nil from #1228# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.002 78.6606 18.0927 31.614 -109.992 -185.911 -68.2698 165.43 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(244.68 36.8531 8.83028 27.7099 -88.2169 -182.937 -83.4502 165.464 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997512 -0.070502 0.0) (0.070502 0.997512 0.0) (0.0 0.0 1.0)) pos #f(279.26 -166.88 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.846277 -0.532743 0.0) (0.532743 0.846277 0.0) (0.0 0.0 1.0)) pos #f(256.579 -159.535 0.0)) object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.18895) #s(costed-arc plist nil from #1219# to #944# cost 1.17367) #s(costed-arc plist nil from #1219# to #1034# cost 1.43297) #s(costed-arc plist nil from #1219# to #1194# cost 1.40769) #s(costed-arc plist nil from #1219# to #1229=#s(extended-node plist ((:name . "l-0-4-15")) arc-list (#s(costed-arc plist nil from #1229# to #968# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(212.221 116.123 -18.7799 111.065 -121.453 -8.62871 -5.72958 176.274 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(203.744 71.0055 -20.2598 114.611 -104.909 -18.6761 -5.72958 179.701 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.976817 -0.214078 0.0) (0.214078 0.976817 0.0) (0.0 0.0 1.0)) pos #f(280.494 4.87294 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.738909 -0.673805 0.0) (0.673805 0.738909 0.0) (0.0 0.0 1.0)) pos #f(256.191 -24.3698 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.56003) #s(costed-arc plist nil from #1219# to #1172# cost 1.48955) #s(costed-arc plist nil from #1219# to #1168# cost 1.30202) #s(costed-arc plist nil from #1219# to #1023# cost 1.18589) #s(costed-arc plist nil from #1219# to #1006# cost 1.4246) #s(costed-arc plist nil from #1219# to #1018# cost 1.38202) #s(costed-arc plist nil from #1219# to #994# cost 1.37446) #s(costed-arc plist nil from #1219# to #1164# cost 1.45447) #s(costed-arc plist nil from #1219# to #1160# cost 1.32486) #s(costed-arc plist nil from #1219# to #1156# cost 1.26785) #s(costed-arc plist nil from #1219# to #971# cost 1.69627) #s(costed-arc plist nil from #1219# to #952# cost 1.39657) #s(costed-arc plist nil from #1219# to #948# cost 1.36185) #s(costed-arc plist nil from #1219# to #964# cost 1.2524) #s(costed-arc plist nil from #1219# to #956# cost 1.19891) #s(costed-arc plist nil from #1219# to #960# cost 1.15014)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(166.151 16.5328 29.6827 -17.8787 -121.539 -69.6216 -75.0394 168.826 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999488 0.032004 0.0) (-0.032004 0.999488 0.0) (0.0 0.0 1.0)) pos #f(-246.533 -73.9797 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1218# to #1214# cost 0)) arm :arms islands (#1216# #1221#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(117.871 -13.1511 39.6836 10.0963 -114.191 179.081 -35.2497 339.803 -35.6389 49.7803 -83.5952 -70.596 -21.3714 -40.59 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1214# to #1230=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1230# to #1231=#s(extended-node plist ((:name . #1233="l-0-3-3")) arc-list (#s(costed-arc plist nil from #1231# to #1232=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1232# to #1231# cost 0) #s(costed-arc plist nil from #1232# to #1207# cost 0)) arm :arms islands (#1223# #1233#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(174.403 -21.0425 48.9065 28.5909 -82.5461 -84.8478 -76.451 194.347 -36.4464 45.0514 -76.043 -75.7097 -15.6981 -40.2351 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1231# to #1230# cost 0) #s(costed-arc plist nil from #1231# to #1234=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1234# to #1231# cost 0) #s(costed-arc plist nil from #1234# to #1235=#s(extended-node plist ((:name . #1237="r-0-3-17")) arc-list (#s(costed-arc plist nil from #1235# to #1234# cost 0) #s(costed-arc plist nil from #1235# to #1236=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1236# to #1201# cost 0) #s(costed-arc plist nil from #1236# to #1235# cost 0)) arm :arms islands (#1237# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(250.086 10.8427 44.5637 121.193 -92.7976 -98.5515 -86.1123 51.9934 -26.0161 41.9112 -64.3486 -25.2924 -19.7969 -25.0528 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1235# to #1239=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1239# to #1240=#s(extended-node plist ((:name . #1242="l-0-3-5")) arc-list (#s(costed-arc plist nil from #1240# to #1241=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1241# to #1240# cost 0) #s(costed-arc plist nil from #1241# to #1203# cost 0)) arm :arms islands (#1211# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(158.718 -21.6391 66.2905 29.6706 -71.4805 -110.129 -73.5162 199.917 -33.8086 37.9672 -63.6366 -87.053 -12.1293 -39.0656 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1243=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1243# to #1240# cost 0) #s(costed-arc plist nil from #1243# to #1207# cost 0)) arm :arms islands (#1223# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(171.835 -22.153 65.2778 27.8454 -61.5001 -96.3054 -68.7078 194.347 -36.438 45.1346 -75.7898 -76.0217 -15.6293 -39.9744 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1239# cost 0) #s(costed-arc plist nil from #1240# to #1244=#s(extended-node plist ((:name . "r-0-3-20<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1244# to #1240# cost 0) #s(costed-arc plist nil from #1244# to #1245=#s(extended-node plist ((:name . #1247="r-0-3-20")) arc-list (#s(costed-arc plist nil from #1245# to #1246=#s(extended-node plist ((:name . "r-0-3-20<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1246# to #1201# cost 0) #s(costed-arc plist nil from #1246# to #1245# cost 0)) arm :arms islands (#1247# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(185.901 22.4493 49.901 113.793 -93.1082 -67.6858 -75.7241 34.5257 -22.7573 6.85887 -40.4295 -26.1629 -13.5842 -16.3477 179.189 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1245# to #1244# cost 0) #s(costed-arc plist nil from #1245# to #5# cost 1.53146) #s(costed-arc plist nil from #1245# to #942# cost 0.517452) #s(costed-arc plist nil from #1245# to #1130# cost 0.478516) #s(costed-arc plist nil from #1245# to #1127# cost 0.458016) #s(costed-arc plist nil from #1245# to #1124# cost 0.442446) #s(costed-arc plist nil from #1245# to #1121# cost 0.398163) #s(costed-arc plist nil from #1245# to #1111# cost 0.409103) #s(costed-arc plist nil from #1245# to #1108# cost 0.664211) #s(costed-arc plist nil from #1245# to #1105# cost 0.642799) #s(costed-arc plist nil from #1245# to #1102# cost 0.645179) #s(costed-arc plist nil from #1245# to #1098# cost 0.631131) #s(costed-arc plist nil from #1245# to #1095# cost 0.605257) #s(costed-arc plist nil from #1245# to #1092# cost 0.531717) #s(costed-arc plist nil from #1245# to #1028# cost 0.721745) #s(costed-arc plist nil from #1245# to #1000# cost 0.70207) #s(costed-arc plist nil from #1245# to #1012# cost 0.687824) #s(costed-arc plist nil from #1245# to #1088# cost 0.691975) #s(costed-arc plist nil from #1245# to #979# cost 0.683949) #s(costed-arc plist nil from #1245# to #1082# cost 0.657903) #s(costed-arc plist nil from #1245# to #988# cost 0.780372) #s(costed-arc plist nil from #1245# to #958# cost 0.766961) #s(costed-arc plist nil from #1245# to #962# cost 0.761408) #s(costed-arc plist nil from #1245# to #954# cost 0.759637) #s(costed-arc plist nil from #1245# to #950# cost 0.744868) #s(costed-arc plist nil from #1245# to #1197# cost 0.818337)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(225.897 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.3291 11.4671 -40.0036 -33.0629 -13.7272 -5.73352 179.189 0.0 0.0) robot-pose-optimized #f(223.74 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.3889 20.4076 -39.2879 -47.3131 -8.48105 -25.3538 179.117 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.293406 -0.955988 0.0) (0.955988 0.293406 0.0) (0.0 0.0 1.0)) pos #f(-350.555 186.529 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1247# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(184.008 25.5333 56.4752 122.695 -77.9179 -75.6107 -70.9845 34.5257 -22.7218 6.76435 -40.2998 -26.2447 -13.5764 -16.0788 179.189 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1248=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1248# to #1240# cost 0) #s(costed-arc plist nil from #1248# to #1249=#s(extended-node plist ((:name . #1251="r-0-3-21")) arc-list (#s(costed-arc plist nil from #1249# to #1250=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1250# to #1201# cost 0) #s(costed-arc plist nil from #1250# to #1249# cost 0)) arm :arms islands (#1251# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(162.499 35.9019 60.0196 106.266 -111.297 -95.1087 -37.505 236.612 -24.829 17.6976 -41.2455 -27.3338 -14.1702 -23.4884 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1248# cost 0) #s(costed-arc plist nil from #1249# to #1252=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-10")) arc-list (#s(costed-arc plist nil from #1252# to #1253=#s(extended-node plist ((:name . #1254="l-0-3-10")) arc-list (#s(costed-arc plist nil from #1253# to #1252# cost 0) #s(costed-arc plist nil from #1253# to #1224# cost 0.731432) #s(costed-arc plist nil from #1253# to #1225# cost 1.67744) #s(costed-arc plist nil from #1253# to #1113# cost 1.54214) #s(costed-arc plist nil from #1253# to #1226# cost 1.59547) #s(costed-arc plist nil from #1253# to #1227# cost 1.59502) #s(costed-arc plist nil from #1253# to #1135# cost 1.48087) #s(costed-arc plist nil from #1253# to #1228# cost 1.14016) #s(costed-arc plist nil from #1253# to #944# cost 1.30946) #s(costed-arc plist nil from #1253# to #1034# cost 1.5225) #s(costed-arc plist nil from #1253# to #1194# cost 1.50104) #s(costed-arc plist nil from #1253# to #1229# cost 1.71056) #s(costed-arc plist nil from #1253# to #1172# cost 1.638) #s(costed-arc plist nil from #1253# to #1168# cost 1.44952) #s(costed-arc plist nil from #1253# to #1023# cost 1.16212) #s(costed-arc plist nil from #1253# to #1006# cost 1.51717) #s(costed-arc plist nil from #1253# to #1018# cost 1.49055) #s(costed-arc plist nil from #1253# to #994# cost 1.48519) #s(costed-arc plist nil from #1253# to #1164# cost 1.59844) #s(costed-arc plist nil from #1253# to #1160# cost 1.48336) #s(costed-arc plist nil from #1253# to #1156# cost 1.41892) #s(costed-arc plist nil from #1253# to #971# cost 1.79734) #s(costed-arc plist nil from #1253# to #952# cost 1.50747) #s(costed-arc plist nil from #1253# to #948# cost 1.48852) #s(costed-arc plist nil from #1253# to #964# cost 1.39135) #s(costed-arc plist nil from #1253# to #956# cost 1.35127) #s(costed-arc plist nil from #1253# to #960# cost 1.31759)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(152.222 14.6866 59.0213 -13.8649 -93.258 -96.9056 -89.0103 170.307 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(162.81 9.46915 65.7082 23.109 -89.2787 -99.2051 -64.1769 170.324 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998789 0.049198 0.0) (-0.049198 0.998789 0.0) (0.0 0.0 1.0)) pos #f(-261.709 -76.7209 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.889582 -0.456776 0.0) (0.456776 0.889582 0.0) (0.0 0.0 1.0)) pos #f(-236.541 -65.4181 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1252# to #1249# cost 0)) arm :arms islands (#1251# #1254#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(177.81 -8.20131 63.3845 46.555 -95.8658 -136.378 -45.9145 236.612 -24.5732 18.9444 -40.3157 -27.4733 -14.1713 -22.6821 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1255=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1255# to #1256=#s(extended-node plist ((:name . #1258="l-0-3-11")) arc-list (#s(costed-arc plist nil from #1256# to #1257=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1257# to #1256# cost 0) #s(costed-arc plist nil from #1257# to #1203# cost 0)) arm :arms islands (#1211# #1258#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(128.657 -32.0328 29.5921 2.32299 -15.8317 -113.136 -49.0976 199.917 -32.5802 37.2506 -60.5915 -88.8991 -11.5729 -36.4315 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1256# to #1255# cost 0) #s(costed-arc plist nil from #1256# to #1259=#s(extended-node plist ((:name . "r-2-3-15<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1259# to #1256# cost 0) #s(costed-arc plist nil from #1259# to #1260=#s(extended-node plist ((:name . #1262="r-2-3-15")) arc-list (#s(costed-arc plist nil from #1260# to #1261=#s(extended-node plist ((:name . "r-2-3-15<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1261# to #1240# cost 0) #s(costed-arc plist nil from #1261# to #1260# cost 0)) arm :arms islands (#1262# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(232.056 60.2454 53.5166 133.266 -59.8145 -30.2323 -89.2189 180.0 5.80617 16.4252 -144.169 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1259# cost 0) #s(costed-arc plist nil from #1260# to #1263=#s(extended-node plist ((:name . "r-2-3-15<->-l-2-3-5")) arc-list (#s(costed-arc plist nil from #1263# to #1264=#s(extended-node plist ((:name . #1336="l-2-3-5")) arc-list (#s(costed-arc plist nil from #1264# to #1263# cost 0) #s(costed-arc plist nil from #1264# to #1265=#s(extended-node plist ((:name . "r-2-3-20<->-l-2-3-5")) arc-list (#s(costed-arc plist nil from #1265# to #1264# cost 0) #s(costed-arc plist nil from #1265# to #1266=#s(extended-node plist ((:name . #1322="r-2-3-20")) arc-list (#s(costed-arc plist nil from #1266# to #1267=#s(extended-node plist ((:name . "r-2-3-20<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1267# to #1268=#s(extended-node plist ((:name . #1272="l-1-3-4")) arc-list (#s(costed-arc plist nil from #1268# to #1269=#s(extended-node plist ((:name . "r-0-3-1<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1269# to #1268# cost 0) #s(costed-arc plist nil from #1269# to #1270=#s(extended-node plist ((:name . #1271="r-0-3-1")) arc-list (#s(costed-arc plist nil from #1270# to #1269# cost 0) #s(costed-arc plist nil from #1270# to #5# cost 1.26906) #s(costed-arc plist nil from #1270# to #942# cost 0.681087) #s(costed-arc plist nil from #1270# to #1130# cost 0.572472) #s(costed-arc plist nil from #1270# to #1127# cost 0.528469) #s(costed-arc plist nil from #1270# to #1124# cost 0.530504) #s(costed-arc plist nil from #1270# to #1121# cost 0.541008) #s(costed-arc plist nil from #1270# to #1111# cost 0.615011) #s(costed-arc plist nil from #1270# to #1108# cost 0.649758) #s(costed-arc plist nil from #1270# to #1105# cost 0.564147) #s(costed-arc plist nil from #1270# to #1102# cost 0.499977) #s(costed-arc plist nil from #1270# to #1098# cost 0.437789) #s(costed-arc plist nil from #1270# to #1095# cost 0.462147) #s(costed-arc plist nil from #1270# to #1092# cost 0.533474) #s(costed-arc plist nil from #1270# to #1028# cost 0.610115) #s(costed-arc plist nil from #1270# to #1000# cost 0.511537) #s(costed-arc plist nil from #1270# to #1012# cost 0.43131) #s(costed-arc plist nil from #1270# to #1088# cost 0.404415) #s(costed-arc plist nil from #1270# to #979# cost 0.379969) #s(costed-arc plist nil from #1270# to #1082# cost 0.459309) #s(costed-arc plist nil from #1270# to #988# cost 0.579504) #s(costed-arc plist nil from #1270# to #958# cost 0.497186) #s(costed-arc plist nil from #1270# to #962# cost 0.41811) #s(costed-arc plist nil from #1270# to #954# cost 0.368253) #s(costed-arc plist nil from #1270# to #950# cost 0.364663) #s(costed-arc plist nil from #1270# to #1197# cost 0.489949)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(217.133 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.7994 25.0827 -37.5097 -104.807 -14.4243 -23.4813 180.19 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.831619 -0.555346 0.0) (0.555346 0.831619 0.0) (0.0 0.0 1.0)) pos #f(-474.503 273.408 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1271# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(239.611 -32.1539 19.4387 188.637 -33.1234 -103.794 -30.0 180.0 -27.8775 25.2314 -40.4853 -102.831 -14.0239 -30.671 180.19 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.831619 -0.555346 0.0) (0.555346 0.831619 0.0) (0.0 0.0 1.0)) pos #f(-474.503 273.408 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1273=#s(extended-node plist ((:name . "r-0-3-2<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1273# to #1268# cost 0) #s(costed-arc plist nil from #1273# to #1274=#s(extended-node plist ((:name . #1329="r-0-3-2")) arc-list (#s(costed-arc plist nil from #1274# to #1275=#s(extended-node plist ((:name . "r-0-3-2<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1275# to #1276=#s(extended-node plist ((:name . #1278="l-1-3-1")) arc-list (#s(costed-arc plist nil from #1276# to #1275# cost 0) #s(costed-arc plist nil from #1276# to #1277=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1277# to #1276# cost 0) #s(costed-arc plist nil from #1277# to #1214# cost 0)) arm :arms islands (#1216# #1278#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(214.63 -20.5174 -12.7762 1.25982 -30.9924 88.2819 -30.0 180.0 -35.1461 58.8036 -81.7406 -64.5515 -21.568 -30.8102 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1276# to #1279=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1279# to #1276# cost 0) #s(costed-arc plist nil from #1279# to #1280=#s(extended-node plist ((:name . #1287="r-0-3-10")) arc-list (#s(costed-arc plist nil from #1280# to #1279# cost 0) #s(costed-arc plist nil from #1280# to #1281=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1281# to #1282=#s(extended-node plist ((:name . #1284="l-1-3-2")) arc-list (#s(costed-arc plist nil from #1282# to #1283=#s(extended-node plist ((:name . "r-0-3-3<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1283# to #1282# cost 0) #s(costed-arc plist nil from #1283# to #1203# cost 0)) arm :arms islands (#1211# #1284#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(146.111 -24.7945 -4.99771 -6.42557 -23.6855 97.3081 -30.0 180.0 -33.11 39.3288 -61.4032 -89.2801 -11.8742 -35.1662 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1282# to #1285=#s(extended-node plist ((:name . "r-0-3-4<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1285# to #1282# cost 0) #s(costed-arc plist nil from #1285# to #1207# cost 0)) arm :arms islands (#1223# #1284#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(202.554 -23.1453 1.62761 -2.87455 -26.9575 93.2447 -30.0 180.0 -36.8666 49.8014 -75.0488 -75.8644 -15.6736 -35.8184 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1282# to #1286=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1286# to #1282# cost 0) #s(costed-arc plist nil from #1286# to #1214# cost 0)) arm :arms islands (#1216# #1284#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(210.497 -20.5256 10.8385 0.756569 -56.8483 88.9159 -30.0 180.0 -35.3182 59.1277 -81.3451 -65.1943 -21.4549 -30.5261 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1282# to #1281# cost 0) #s(costed-arc plist nil from #1282# to #1040# cost 0.951236) #s(costed-arc plist nil from #1282# to #1049# cost 0.597573) #s(costed-arc plist nil from #1282# to #1179# cost 0.753385) #s(costed-arc plist nil from #1282# to #1176# cost 0.967713)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(186.024 78.5908 -1.33824 63.5044 -77.3523 5.42291 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.991463 -0.130391 0.0) (0.130391 0.991463 0.0) (0.0 0.0 1.0)) pos #f(-157.287 -276.733 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1281# to #1280# cost 0)) arm :arms islands (#1287# #1284#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(141.179 -29.4242 4.3502 -4.1918 -61.1658 97.6337 -30.0 180.0 -36.2948 42.9973 -64.4251 -68.0821 -13.2372 -35.4505 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1280# to #1288=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1288# to #1289=#s(extended-node plist ((:name . #1294="l-1-3-5")) arc-list (#s(costed-arc plist nil from #1289# to #1290=#s(extended-node plist ((:name . "r-0-3-9<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1290# to #1289# cost 0) #s(costed-arc plist nil from #1290# to #1291=#s(extended-node plist ((:name . #1293="r-0-3-9")) arc-list (#s(costed-arc plist nil from #1291# to #1292=#s(extended-node plist ((:name . "r-0-3-9<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1292# to #1268# cost 0) #s(costed-arc plist nil from #1292# to #1291# cost 0)) arm :arms islands (#1293# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(165.888 -28.6685 6.69504 183.767 -53.2132 -97.4004 -30.0 180.0 -35.6183 33.3799 -60.7659 -76.3825 -15.3824 -33.0693 188.595 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1291# to #1290# cost 0) #s(costed-arc plist nil from #1291# to #5# cost 1.25749) #s(costed-arc plist nil from #1291# to #942# cost 0.511615) #s(costed-arc plist nil from #1291# to #1130# cost 0.44187) #s(costed-arc plist nil from #1291# to #1127# cost 0.446377) #s(costed-arc plist nil from #1291# to #1124# cost 0.480774) #s(costed-arc plist nil from #1291# to #1121# cost 0.496756) #s(costed-arc plist nil from #1291# to #1111# cost 0.580769) #s(costed-arc plist nil from #1291# to #1108# cost 0.464637) #s(costed-arc plist nil from #1291# to #1105# cost 0.387629) #s(costed-arc plist nil from #1291# to #1102# cost 0.413387) #s(costed-arc plist nil from #1291# to #1098# cost 0.431677) #s(costed-arc plist nil from #1291# to #1095# cost 0.490849) #s(costed-arc plist nil from #1291# to #1092# cost 0.5455) #s(costed-arc plist nil from #1291# to #1028# cost 0.425286) #s(costed-arc plist nil from #1291# to #1000# cost 0.340886) #s(costed-arc plist nil from #1291# to #1012# cost 0.316232) #s(costed-arc plist nil from #1291# to #1088# cost 0.411615) #s(costed-arc plist nil from #1291# to #979# cost 0.466399) #s(costed-arc plist nil from #1291# to #1082# cost 0.54663) #s(costed-arc plist nil from #1291# to #988# cost 0.447638) #s(costed-arc plist nil from #1291# to #958# cost 0.350137) #s(costed-arc plist nil from #1291# to #962# cost 0.340207) #s(costed-arc plist nil from #1291# to #954# cost 0.399967) #s(costed-arc plist nil from #1291# to #950# cost 0.476798) #s(costed-arc plist nil from #1291# to #1197# cost 0.651825)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(211.313 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7751 39.5318 -60.3528 -77.6497 -15.7713 -28.419 188.595 0.0 0.0) robot-pose-optimized #f(207.146 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.801 44.7071 -65.6771 -90.3382 -19.4124 -37.6962 188.289 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.457564 -0.889177 0.0) (0.889177 0.457564 0.0) (0.0 0.0 1.0)) pos #f(-457.582 244.051 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1293# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(124.382 -28.9862 30.4911 200.329 -13.0804 -114.062 -30.0 180.0 -34.7263 30.6969 -58.4079 -77.3017 -14.8942 -32.3943 188.595 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1288# cost 0) #s(costed-arc plist nil from #1289# to #1295=#s(extended-node plist ((:name . "r-0-3-11<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1295# to #1289# cost 0) #s(costed-arc plist nil from #1295# to #1296=#s(extended-node plist ((:name . #1297="r-0-3-11")) arc-list (#s(costed-arc plist nil from #1296# to #1295# cost 0) #s(costed-arc plist nil from #1296# to #5# cost 1.30151) #s(costed-arc plist nil from #1296# to #942# cost 0.415002) #s(costed-arc plist nil from #1296# to #1130# cost 0.391704) #s(costed-arc plist nil from #1296# to #1127# cost 0.458001) #s(costed-arc plist nil from #1296# to #1124# cost 0.51065) #s(costed-arc plist nil from #1296# to #1121# cost 0.5144) #s(costed-arc plist nil from #1296# to #1111# cost 0.599389) #s(costed-arc plist nil from #1296# to #1108# cost 0.338931) #s(costed-arc plist nil from #1296# to #1105# cost 0.346262) #s(costed-arc plist nil from #1296# to #1102# cost 0.469097) #s(costed-arc plist nil from #1296# to #1098# cost 0.529246) #s(costed-arc plist nil from #1296# to #1095# cost 0.584246) #s(costed-arc plist nil from #1296# to #1092# cost 0.60524) #s(costed-arc plist nil from #1296# to #1028# cost 0.312681) #s(costed-arc plist nil from #1296# to #1000# cost 0.332818) #s(costed-arc plist nil from #1296# to #1012# cost 0.399975) #s(costed-arc plist nil from #1296# to #1088# cost 0.516047) #s(costed-arc plist nil from #1296# to #979# cost 0.585126) #s(costed-arc plist nil from #1296# to #1082# cost 0.65023) #s(costed-arc plist nil from #1296# to #988# cost 0.425427) #s(costed-arc plist nil from #1296# to #958# cost 0.362174) #s(costed-arc plist nil from #1296# to #962# cost 0.427621) #s(costed-arc plist nil from #1296# to #954# cost 0.516706) #s(costed-arc plist nil from #1296# to #950# cost 0.600726) #s(costed-arc plist nil from #1296# to #1197# cost 0.774799)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(200.873 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7975 49.2352 -74.835 -51.1344 -17.3134 -31.9075 187.856 0.0 0.0) robot-pose-optimized #f(201.857 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.3204 71.2926 -60.7287 -59.3116 -12.3287 -49.2033 187.713 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.839323 -0.543634 0.0) (0.543634 0.839323 0.0) (0.0 0.0 1.0)) pos #f(-477.671 266.327 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.455058 -0.890462 0.0) (0.890462 0.455058 0.0) (0.0 0.0 1.0)) pos #f(-462.58 258.679 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1297# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(114.087 -30.8027 28.5748 201.177 -15.8574 -115.839 -30.0 180.0 -37.6756 44.825 -74.3273 -56.7561 -17.2487 -39.7217 187.856 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839323 -0.543634 0.0) (0.543634 0.839323 0.0) (0.0 0.0 1.0)) pos #f(-477.671 266.327 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1298=#s(extended-node plist ((:name . "r-0-3-19<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1298# to #1289# cost 0) #s(costed-arc plist nil from #1298# to #1299=#s(extended-node plist ((:name . #1301="r-0-3-19")) arc-list (#s(costed-arc plist nil from #1299# to #1300=#s(extended-node plist ((:name . "r-0-3-19<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1300# to #1268# cost 0) #s(costed-arc plist nil from #1300# to #1299# cost 0)) arm :arms islands (#1301# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(232.637 -21.7043 61.0117 15.5045 -80.6494 82.6134 -30.0 180.0 -21.2766 1.89063 -25.6565 -25.5111 -13.6163 -23.3236 177.796 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1299# to #1298# cost 0) #s(costed-arc plist nil from #1299# to #5# cost 1.63256) #s(costed-arc plist nil from #1299# to #942# cost 0.622744) #s(costed-arc plist nil from #1299# to #1130# cost 0.6467) #s(costed-arc plist nil from #1299# to #1127# cost 0.639975) #s(costed-arc plist nil from #1299# to #1124# cost 0.616427) #s(costed-arc plist nil from #1299# to #1121# cost 0.475816) #s(costed-arc plist nil from #1299# to #1111# cost 0.406996) #s(costed-arc plist nil from #1299# to #1108# cost 0.81368) #s(costed-arc plist nil from #1299# to #1105# cost 0.798316) #s(costed-arc plist nil from #1299# to #1102# cost 0.815211) #s(costed-arc plist nil from #1299# to #1098# cost 0.799048) #s(costed-arc plist nil from #1299# to #1095# cost 0.75758) #s(costed-arc plist nil from #1299# to #1092# cost 0.622487) #s(costed-arc plist nil from #1299# to #1028# cost 0.877839) #s(costed-arc plist nil from #1299# to #1000# cost 0.864219) #s(costed-arc plist nil from #1299# to #1012# cost 0.852973) #s(costed-arc plist nil from #1299# to #1088# cost 0.855805) #s(costed-arc plist nil from #1299# to #979# cost 0.838743) #s(costed-arc plist nil from #1299# to #1082# cost 0.789189) #s(costed-arc plist nil from #1299# to #988# cost 0.96051) #s(costed-arc plist nil from #1299# to #958# cost 0.929597) #s(costed-arc plist nil from #1299# to #962# cost 0.925914) #s(costed-arc plist nil from #1299# to #954# cost 0.924953) #s(costed-arc plist nil from #1299# to #950# cost 0.898632) #s(costed-arc plist nil from #1299# to #1197# cost 0.941197)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(203.276 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.4785 -2.35494 -32.9386 -24.5276 -14.6228 -19.2909 177.796 0.0 0.0) robot-pose-optimized #f(197.519 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.7178 3.13429 -36.2553 -38.1911 -13.0017 -38.7018 178.312 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.222146 -0.975013 0.0) (0.975013 0.222146 0.0) (0.0 0.0 1.0)) pos #f(-306.685 157.945 0.0)) object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1301# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(222.965 -22.4993 57.5958 26.995 -28.8529 73.4847 -30.0 180.0 -21.034 0.995511 -25.2787 -25.0346 -13.5982 -22.7245 177.796 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1302=#s(extended-node plist ((:name . "r-0-3-21<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1302# to #1289# cost 0) #s(costed-arc plist nil from #1302# to #1249# cost 0)) arm :arms islands (#1251# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(197.049 -26.4861 58.5316 11.8296 -38.0234 83.4945 -30.0 180.0 -23.996 21.0718 -37.7345 -28.6766 -14.0446 -19.8979 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1303=#s(extended-node plist ((:name . "r-2-3-10<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1303# to #1289# cost 0) #s(costed-arc plist nil from #1303# to #1304=#s(extended-node plist ((:name . #1310="r-2-3-10")) arc-list (#s(costed-arc plist nil from #1304# to #1303# cost 0) #s(costed-arc plist nil from #1304# to #1153# cost 0.402246) #s(costed-arc plist nil from #1304# to #1078# cost 0.502774) #s(costed-arc plist nil from #1304# to #1149# cost 0.654822) #s(costed-arc plist nil from #1304# to #1061# cost 0.512495) #s(costed-arc plist nil from #1304# to #1139# cost 0.30053) #s(costed-arc plist nil from #1304# to #946# cost 0.25599) #s(costed-arc plist nil from #1304# to #1057# cost 0.313777) #s(costed-arc plist nil from #1304# to #1071# cost 0.447951) #s(costed-arc plist nil from #1304# to #1054# cost 0.355393) #s(costed-arc plist nil from #1304# to #1068# cost 0.445051) #s(costed-arc plist nil from #1304# to #1065# cost 0.620523) #s(costed-arc plist nil from #1304# to #1305=#s(extended-node plist ((:name . "r-2-4-8")) arc-list (#s(costed-arc plist nil from #1305# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(253.353 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 16.9938 -1.1628 -133.035 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.87689 -0.480691 0.0) (0.480691 0.87689 0.0) (0.0 0.0 1.0)) pos #f(-338.556 434.877 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.673977) #s(costed-arc plist nil from #1304# to #1047# cost 0.710811) #s(costed-arc plist nil from #1304# to #1306=#s(extended-node plist ((:name . "r-2-4-5")) arc-list (#s(costed-arc plist nil from #1306# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(153.274 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 10.8239 51.19 -147.911 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(159.209 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 0.449876 52.5215 -165.998 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.879748 -0.47544 0.0) (0.47544 0.879748 0.0) (0.0 0.0 1.0)) pos #f(-443.577 625.113 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.735649 -0.677363 0.0) (0.677363 0.735649 0.0) (0.0 0.0 1.0)) pos #f(-456.905 586.675 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.761253) #s(costed-arc plist nil from #1304# to #1307=#s(extended-node plist ((:name . "r-2-4-4")) arc-list (#s(costed-arc plist nil from #1307# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(233.888 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.4049 37.7019 -141.838 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(277.645 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 5.44311 44.7555 -171.769 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.954491 -0.298239 0.0) (0.298239 0.954491 0.0) (0.0 0.0 1.0)) pos #f(-423.236 534.465 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.677494 -0.735528 0.0) (0.735528 0.677494 0.0) (0.0 0.0 1.0)) pos #f(-442.924 496.883 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.862592) #s(costed-arc plist nil from #1304# to #1308=#s(extended-node plist ((:name . "r-2-4-3")) arc-list (#s(costed-arc plist nil from #1308# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.366 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.7518 17.5706 -139.902 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.966947 -0.254976 0.0) (0.254976 0.966947 0.0) (0.0 0.0 1.0)) pos #f(-481.232 497.517 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.897285) #s(costed-arc plist nil from #1304# to #1309=#s(extended-node plist ((:name . "r-2-4-2")) arc-list (#s(costed-arc plist nil from #1309# to #968# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.949 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.8761 -1.20342 -140.333 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.974158 -0.225868 0.0) (0.225868 0.974158 0.0) (0.0 0.0 1.0)) pos #f(-498.349 497.947 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.977869) #s(costed-arc plist nil from #1304# to #1145# cost 1.08028)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(160.564 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 1.51339 28.1303 -151.193 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(254.773 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.5294 41.3305 -189.048 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.603195 -0.797594 0.0) (0.797594 0.603195 0.0) (0.0 0.0 1.0)) pos #f(-273.023 184.957 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.123585 -0.992334 0.0) (0.992334 0.123585 0.0) (0.0 0.0 1.0)) pos #f(-267.191 142.934 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1310# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(159.259 -21.7618 64.2116 23.4102 -62.2959 80.1776 -30.0 180.0 1.60483 27.9237 -150.367 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.603195 -0.797594 0.0) (0.797594 0.603195 0.0) (0.0 0.0 1.0)) pos #f(-273.023 184.957 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1311=#s(extended-node plist ((:name . "r-2-3-13<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1311# to #1289# cost 0) #s(costed-arc plist nil from #1311# to #1312=#s(extended-node plist ((:name . #1314="r-2-3-13")) arc-list (#s(costed-arc plist nil from #1312# to #1313=#s(extended-node plist ((:name . "r-2-3-13<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1313# to #1231# cost 0) #s(costed-arc plist nil from #1313# to #1312# cost 0)) arm :arms islands (#1314# #1233#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(260.16 41.3635 60.2524 114.558 -121.542 280.914 -88.8084 180.0 -4.31974 -18.9963 -155.916 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1312# to #1315=#s(extended-node plist ((:name . "r-2-3-13<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1315# to #1201# cost 0) #s(costed-arc plist nil from #1315# to #1312# cost 0)) arm :arms islands (#1314# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(257.46 49.1782 61.3927 126.772 -121.538 238.89 -95.8324 180.0 -4.33587 -19.3597 -156.355 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1312# to #1316=#s(extended-node plist ((:name . "r-2-3-13<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1316# to #1268# cost 0) #s(costed-arc plist nil from #1316# to #1312# cost 0)) arm :arms islands (#1314# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(257.688 20.0918 55.464 83.5182 -91.8001 55.6787 -30.0 180.0 -3.74014 -19.6544 -141.053 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1312# to #1311# cost 0) #s(costed-arc plist nil from #1312# to #1153# cost 0.535598) #s(costed-arc plist nil from #1312# to #1078# cost 0.425545) #s(costed-arc plist nil from #1312# to #1149# cost 0.32947) #s(costed-arc plist nil from #1312# to #1061# cost 0.614868) #s(costed-arc plist nil from #1312# to #1139# cost 0.694764) #s(costed-arc plist nil from #1312# to #946# cost 0.696398) #s(costed-arc plist nil from #1312# to #1057# cost 0.681948) #s(costed-arc plist nil from #1312# to #1071# cost 0.501514) #s(costed-arc plist nil from #1312# to #1054# cost 1.02502) #s(costed-arc plist nil from #1312# to #1068# cost 1.09876) #s(costed-arc plist nil from #1312# to #1065# cost 1.14198) #s(costed-arc plist nil from #1312# to #1305# cost 1.05725) #s(costed-arc plist nil from #1312# to #1047# cost 0.988682) #s(costed-arc plist nil from #1312# to #1306# cost 1.45489) #s(costed-arc plist nil from #1312# to #1307# cost 1.4942) #s(costed-arc plist nil from #1312# to #1308# cost 1.45164) #s(costed-arc plist nil from #1312# to #1309# cost 1.42215) #s(costed-arc plist nil from #1312# to #1145# cost 1.42752)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(260.765 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.38627 -19.744 -130.01 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1314# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(250.004 10.5358 54.734 108.233 -47.2343 42.4276 -30.0 180.0 -3.72646 -20.2598 -140.853 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1317=#s(extended-node plist ((:name . "r-2-3-17<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1317# to #1289# cost 0) #s(costed-arc plist nil from #1317# to #1318=#s(extended-node plist ((:name . #1320="r-2-3-17")) arc-list (#s(costed-arc plist nil from #1318# to #1319=#s(extended-node plist ((:name . "r-2-3-17<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1319# to #1268# cost 0) #s(costed-arc plist nil from #1319# to #1318# cost 0)) arm :arms islands (#1320# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(132.959 22.713 47.3688 74.5345 -118.608 40.5097 -30.0 180.0 -2.85219 46.8285 -149.094 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1318# to #1317# cost 0) #s(costed-arc plist nil from #1318# to #1153# cost 0.63169) #s(costed-arc plist nil from #1318# to #1078# cost 0.740879) #s(costed-arc plist nil from #1318# to #1149# cost 0.791537) #s(costed-arc plist nil from #1318# to #1061# cost 0.482816) #s(costed-arc plist nil from #1318# to #1139# cost 0.740028) #s(costed-arc plist nil from #1318# to #946# cost 0.878197) #s(costed-arc plist nil from #1318# to #1057# cost 0.99052) #s(costed-arc plist nil from #1318# to #1071# cost 1.00809) #s(costed-arc plist nil from #1318# to #1054# cost 0.915434) #s(costed-arc plist nil from #1318# to #1068# cost 1.13161) #s(costed-arc plist nil from #1318# to #1065# cost 1.33524) #s(costed-arc plist nil from #1318# to #1305# cost 1.39955) #s(costed-arc plist nil from #1318# to #1047# cost 1.43884) #s(costed-arc plist nil from #1318# to #1306# cost 1.34009) #s(costed-arc plist nil from #1318# to #1307# cost 1.52529) #s(costed-arc plist nil from #1318# to #1308# cost 1.62791) #s(costed-arc plist nil from #1318# to #1309# cost 1.73145) #s(costed-arc plist nil from #1318# to #1145# cost 1.83109)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(122.002 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -2.91641 45.9578 -150.108 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(119.196 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.97271 45.5917 -153.445 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.026477 -0.999649 0.0) (0.999649 -0.026477 0.0) (0.0 0.0 1.0)) pos #f(133.828 89.2768 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1320# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(124.721 26.8619 47.8681 108.868 -88.423 48.7428 -30.0 180.0 -2.87966 46.1563 -149.36 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1321=#s(extended-node plist ((:name . "r-2-3-20<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1321# to #1289# cost 0) #s(costed-arc plist nil from #1321# to #1266# cost 0)) arm :arms islands (#1322# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(207.607 25.4622 44.6421 130.291 -63.1705 37.8885 -30.0 180.0 -12.9374 -6.28543 -127.581 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1323=#s(extended-node plist ((:name . "r-2-3-22<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1323# to #1289# cost 0) #s(costed-arc plist nil from #1323# to #1324=#s(extended-node plist ((:name . #1326="r-2-3-22")) arc-list (#s(costed-arc plist nil from #1324# to #1325=#s(extended-node plist ((:name . "r-2-3-22<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1325# to #1201# cost 0) #s(costed-arc plist nil from #1325# to #1324# cost 0)) arm :arms islands (#1326# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(218.068 83.2622 54.2367 80.6559 -85.2395 39.9132 -104.504 180.0 0.816402 35.5304 -142.342 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1324# to #1327=#s(extended-node plist ((:name . "r-2-3-22<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1327# to #1240# cost 0) #s(costed-arc plist nil from #1327# to #1324# cost 0)) arm :arms islands (#1326# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(214.458 85.1632 57.31 90.521 -65.8148 53.4939 -99.8017 180.0 0.802419 35.186 -142.556 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1324# to #1328=#s(extended-node plist ((:name . "r-2-3-22<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1328# to #1268# cost 0) #s(costed-arc plist nil from #1328# to #1324# cost 0)) arm :arms islands (#1326# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(218.368 52.5235 29.1507 127.689 -105.84 41.4991 -30.0 180.0 0.526906 35.759 -149.386 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1324# to #1323# cost 0) #s(costed-arc plist nil from #1324# to #1153# cost 0.617331) #s(costed-arc plist nil from #1324# to #1078# cost 0.732308) #s(costed-arc plist nil from #1324# to #1149# cost 0.772276) #s(costed-arc plist nil from #1324# to #1061# cost 0.543306) #s(costed-arc plist nil from #1324# to #1139# cost 0.753636) #s(costed-arc plist nil from #1324# to #946# cost 0.879853) #s(costed-arc plist nil from #1324# to #1057# cost 0.97987) #s(costed-arc plist nil from #1324# to #1071# cost 0.996495) #s(costed-arc plist nil from #1324# to #1054# cost 0.982004) #s(costed-arc plist nil from #1324# to #1068# cost 1.12491) #s(costed-arc plist nil from #1324# to #1065# cost 1.32585) #s(costed-arc plist nil from #1324# to #1305# cost 1.38992) #s(costed-arc plist nil from #1324# to #1047# cost 1.42076) #s(costed-arc plist nil from #1324# to #1306# cost 1.39125) #s(costed-arc plist nil from #1324# to #1307# cost 1.54129) #s(costed-arc plist nil from #1324# to #1308# cost 1.62693) #s(costed-arc plist nil from #1324# to #1309# cost 1.72269) #s(costed-arc plist nil from #1324# to #1145# cost 1.8155)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(219.022 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 0.442646 35.8718 -151.365 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(224.135 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -9.23179 36.5341 -149.424 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.054132 -0.998534 0.0) (0.998534 -0.054132 0.0) (0.0 0.0 1.0)) pos #f(308.036 76.1223 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1326# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(210.241 42.8789 39.8241 149.853 -67.1484 40.9949 -30.0 180.0 0.501381 34.9733 -149.74 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1289# to #1040# cost 0.64721) #s(costed-arc plist nil from #1289# to #1049# cost 0.546783) #s(costed-arc plist nil from #1289# to #1179# cost 0.985124) #s(costed-arc plist nil from #1289# to #1176# cost 1.2554)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(128.673 74.6287 57.1851 75.5669 -76.7638 58.1318 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(122.548 34.9715 45.9331 81.0467 -58.6625 43.9936 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995063 -0.099245 0.0) (0.099245 0.995063 0.0) (0.0 0.0 1.0)) pos #f(-199.233 -95.9712 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.812127 -0.58348 0.0) (0.58348 0.812127 0.0) (0.0 0.0 1.0)) pos #f(-180.276 -80.4206 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1288# to #1280# cost 0)) arm :arms islands (#1287# #1294#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(102.588 -30.2909 36.5877 -27.8303 -15.0485 114.008 -30.0 180.0 -35.8416 41.4146 -62.3707 -70.3396 -12.7242 -35.2023 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1280# to #5# cost 1.28701) #s(costed-arc plist nil from #1280# to #942# cost 0.470023) #s(costed-arc plist nil from #1280# to #1130# cost 0.424386) #s(costed-arc plist nil from #1280# to #1127# cost 0.447644) #s(costed-arc plist nil from #1280# to #1124# cost 0.493722) #s(costed-arc plist nil from #1280# to #1121# cost 0.506696) #s(costed-arc plist nil from #1280# to #1111# cost 0.599975) #s(costed-arc plist nil from #1280# to #1108# cost 0.405437) #s(costed-arc plist nil from #1280# to #1105# cost 0.352554) #s(costed-arc plist nil from #1280# to #1102# cost 0.444539) #s(costed-arc plist nil from #1280# to #1098# cost 0.476132) #s(costed-arc plist nil from #1280# to #1095# cost 0.536868) #s(costed-arc plist nil from #1280# to #1092# cost 0.578008) #s(costed-arc plist nil from #1280# to #1028# cost 0.364972) #s(costed-arc plist nil from #1280# to #1000# cost 0.312693) #s(costed-arc plist nil from #1280# to #1012# cost 0.347869) #s(costed-arc plist nil from #1280# to #1088# cost 0.469031) #s(costed-arc plist nil from #1280# to #979# cost 0.525088) #s(costed-arc plist nil from #1280# to #1082# cost 0.60047) #s(costed-arc plist nil from #1280# to #988# cost 0.432963) #s(costed-arc plist nil from #1280# to #958# cost 0.334539) #s(costed-arc plist nil from #1280# to #962# cost 0.368987) #s(costed-arc plist nil from #1280# to #954# cost 0.450594) #s(costed-arc plist nil from #1280# to #950# cost 0.538531) #s(costed-arc plist nil from #1280# to #1197# cost 0.710657)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(205.897 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.1641 48.0141 -64.6843 -65.7258 -13.5987 -31.62 188.367 0.0 0.0) robot-pose-optimized #f(205.673 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -71.2934 61.031 -63.465 -74.3138 -13.3245 -47.8178 188.192 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.459448 -0.888205 0.0) (0.888205 0.459448 0.0) (0.0 0.0 1.0)) pos #f(-474.29 247.682 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1287# #1278#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.519 -29.5365 -15.8278 -7.04214 -36.49 101.089 -30.0 180.0 -36.5244 44.0159 -65.9073 -66.273 -13.6299 -35.4265 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1276# to #1040# cost 1.06261) #s(costed-arc plist nil from #1276# to #1049# cost 0.697694) #s(costed-arc plist nil from #1276# to #1179# cost 0.776225) #s(costed-arc plist nil from #1276# to #1176# cost 0.937061)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(190.091 78.4945 -15.5444 47.3403 -68.6685 -0.909794 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.993089 -0.117366 0.0) (0.117366 0.993089 0.0) (0.0 0.0 1.0)) pos #f(-128.44 -259.991 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1275# to #1274# cost 0)) arm :arms islands (#1329# #1278#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(216.732 -27.9861 -17.2084 -17.9719 -15.3245 110.292 -30.0 180.0 -31.8945 36.2699 -53.2717 -96.7953 -10.7301 -31.0494 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1274# to #1273# cost 0) #s(costed-arc plist nil from #1274# to #5# cost 1.27874) #s(costed-arc plist nil from #1274# to #942# cost 0.65845) #s(costed-arc plist nil from #1274# to #1130# cost 0.572551) #s(costed-arc plist nil from #1274# to #1127# cost 0.544825) #s(costed-arc plist nil from #1274# to #1124# cost 0.56419) #s(costed-arc plist nil from #1274# to #1121# cost 0.58783) #s(costed-arc plist nil from #1274# to #1111# cost 0.678323) #s(costed-arc plist nil from #1274# to #1108# cost 0.608928) #s(costed-arc plist nil from #1274# to #1105# cost 0.526908) #s(costed-arc plist nil from #1274# to #1102# cost 0.499757) #s(costed-arc plist nil from #1274# to #1098# cost 0.465903) #s(costed-arc plist nil from #1274# to #1095# cost 0.521017) #s(costed-arc plist nil from #1274# to #1092# cost 0.601733) #s(costed-arc plist nil from #1274# to #1028# cost 0.553175) #s(costed-arc plist nil from #1274# to #1000# cost 0.454129) #s(costed-arc plist nil from #1274# to #1012# cost 0.388378) #s(costed-arc plist nil from #1274# to #1088# cost 0.432323) #s(costed-arc plist nil from #1274# to #979# cost 0.450264) #s(costed-arc plist nil from #1274# to #1082# cost 0.548068) #s(costed-arc plist nil from #1274# to #988# cost 0.526263) #s(costed-arc plist nil from #1274# to #958# cost 0.421158) #s(costed-arc plist nil from #1274# to #962# cost 0.352944) #s(costed-arc plist nil from #1274# to #954# cost 0.355206) #s(costed-arc plist nil from #1274# to #950# cost 0.432819) #s(costed-arc plist nil from #1274# to #1197# cost 0.601697)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(212.76 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.6374 38.8489 -50.9315 -99.4892 -10.7421 -25.5603 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1329# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(165.599 -28.1815 26.8135 -18.9236 -17.4576 107.086 -30.0 180.0 -29.5996 32.3311 -48.9927 -97.6521 -10.0894 -27.1726 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1330=#s(extended-node plist ((:name . "r-0-3-3<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1330# to #1268# cost 0) #s(costed-arc plist nil from #1330# to #1203# cost 0)) arm :arms islands (#1211# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(125.477 -24.9077 21.0483 -14.6592 -12.193 103.842 -30.0 180.0 -32.3572 38.0741 -59.7918 -90.038 -11.5467 -34.2233 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1331=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1331# to #1268# cost 0) #s(costed-arc plist nil from #1331# to #1214# cost 0)) arm :arms islands (#1216# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(203.07 -20.3993 33.4877 2.51846 -24.2259 87.8739 -30.0 180.0 -35.5711 59.387 -80.901 -66.1737 -21.3131 -30.36 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1292# cost 0) #s(costed-arc plist nil from #1268# to #1300# cost 0) #s(costed-arc plist nil from #1268# to #1332=#s(extended-node plist ((:name . "r-0-3-21<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1332# to #1268# cost 0) #s(costed-arc plist nil from #1332# to #1249# cost 0)) arm :arms islands (#1251# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(205.49 -26.7376 57.7413 7.1464 -81.5869 85.7899 -30.0 180.0 -23.9663 21.4182 -38.0184 -28.3222 -14.0896 -19.8668 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1316# cost 0) #s(costed-arc plist nil from #1268# to #1319# cost 0) #s(costed-arc plist nil from #1268# to #1333=#s(extended-node plist ((:name . "r-2-3-19<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1333# to #1268# cost 0) #s(costed-arc plist nil from #1333# to #1334=#s(extended-node plist ((:name . #1335="r-2-3-19")) arc-list (#s(costed-arc plist nil from #1334# to #1333# cost 0) #s(costed-arc plist nil from #1334# to #1153# cost 0.66385) #s(costed-arc plist nil from #1334# to #1078# cost 0.563986) #s(costed-arc plist nil from #1334# to #1149# cost 0.442898) #s(costed-arc plist nil from #1334# to #1061# cost 0.754581) #s(costed-arc plist nil from #1334# to #1139# cost 0.861176) #s(costed-arc plist nil from #1334# to #946# cost 0.867515) #s(costed-arc plist nil from #1334# to #1057# cost 0.864705) #s(costed-arc plist nil from #1334# to #1071# cost 0.682729) #s(costed-arc plist nil from #1334# to #1054# cost 1.19906) #s(costed-arc plist nil from #1334# to #1068# cost 1.27964) #s(costed-arc plist nil from #1334# to #1065# cost 1.32739) #s(costed-arc plist nil from #1334# to #1305# cost 1.24905) #s(costed-arc plist nil from #1334# to #1047# cost 1.18514) #s(costed-arc plist nil from #1334# to #1306# cost 1.63039) #s(costed-arc plist nil from #1334# to #1307# cost 1.67992) #s(costed-arc plist nil from #1334# to #1308# cost 1.64871) #s(costed-arc plist nil from #1334# to #1309# cost 1.62414) #s(costed-arc plist nil from #1334# to #1145# cost 1.62796)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(262.551 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.87028 -19.6619 -126.606 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.167396 -0.98589 0.0) (0.98589 0.167396 0.0) (0.0 0.0 1.0)) pos #f(218.537 84.6986 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1335# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(266.936 43.9482 39.1478 121.24 -95.4339 44.9536 -30.0 180.0 -6.37057 -18.607 -142.193 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.167396 -0.98589 0.0) (0.98589 0.167396 0.0) (0.0 0.0 1.0)) pos #f(218.537 84.6986 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1268# to #1267# cost 0) #s(costed-arc plist nil from #1268# to #1328# cost 0) #s(costed-arc plist nil from #1268# to #1040# cost 0.693939) #s(costed-arc plist nil from #1268# to #1049# cost 0.481206) #s(costed-arc plist nil from #1268# to #1179# cost 0.884646) #s(costed-arc plist nil from #1268# to #1176# cost 1.16093)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(132.603 74.1978 48.8589 52.8918 -103.463 50.0981 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(137.92 40.4439 36.1922 65.6837 -79.0636 40.8955 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995728 -0.092337 0.0) (0.092337 0.995728 0.0) (0.0 0.0 1.0)) pos #f(-180.659 -137.355 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.816162 -0.577823 0.0) (0.577823 0.816162 0.0) (0.0 0.0 1.0)) pos #f(-163.1 -136.106 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1267# to #1266# cost 0)) arm :arms islands (#1322# #1272#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(216.539 34.5897 41.7617 102.14 -101.602 43.0677 -30.0 180.0 -12.9389 -5.27475 -127.493 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1266# to #1321# cost 0) #s(costed-arc plist nil from #1266# to #1265# cost 0) #s(costed-arc plist nil from #1266# to #1153# cost 0.575349) #s(costed-arc plist nil from #1266# to #1078# cost 0.479383) #s(costed-arc plist nil from #1266# to #1149# cost 0.491085) #s(costed-arc plist nil from #1266# to #1061# cost 0.653401) #s(costed-arc plist nil from #1266# to #1139# cost 0.754408) #s(costed-arc plist nil from #1266# to #946# cost 0.767912) #s(costed-arc plist nil from #1266# to #1057# cost 0.814589) #s(costed-arc plist nil from #1266# to #1071# cost 0.736807) #s(costed-arc plist nil from #1266# to #1054# cost 1.093) #s(costed-arc plist nil from #1266# to #1068# cost 1.19098) #s(costed-arc plist nil from #1266# to #1065# cost 1.26617) #s(costed-arc plist nil from #1266# to #1305# cost 1.23698) #s(costed-arc plist nil from #1266# to #1047# cost 1.22957) #s(costed-arc plist nil from #1266# to #1306# cost 1.54031) #s(costed-arc plist nil from #1266# to #1307# cost 1.61376) #s(costed-arc plist nil from #1266# to #1308# cost 1.60621) #s(costed-arc plist nil from #1266# to #1309# cost 1.62067) #s(costed-arc plist nil from #1266# to #1145# cost 1.66806)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(260.191 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -12.9262 -0.311289 -126.367 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1322# #1336#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(189.526 4.8506 57.442 176.334 -120.0 20.0 -30.0 180.0 -12.931 -8.30235 -127.685 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1264# to #1337=#s(extended-node plist ((:name . "l-2-4-23")) arc-list (#s(costed-arc plist nil from #1337# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(189.564 40.0294 57.3364 129.742 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.995157 0.098296 0.0) (-0.098296 0.995157 0.0) (0.0 0.0 1.0)) pos #f(255.017 170.014 0.0)) base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.545134) #s(costed-arc plist nil from #1264# to #1338=#s(extended-node plist ((:name . "l-2-4-22")) arc-list (#s(costed-arc plist nil from #1338# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.12 41.2426 37.3744 131.747 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(138.773 8.84795 24.7049 130.753 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998438 0.055864 0.0) (-0.055864 0.998438 0.0) (0.0 0.0 1.0)) pos #f(181.355 77.4977 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.892605 -0.45084 0.0) (0.45084 0.892605 0.0) (0.0 0.0 1.0)) pos #f(212.984 105.775 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.476814) #s(costed-arc plist nil from #1264# to #1339=#s(extended-node plist ((:name . "l-2-4-21")) arc-list (#s(costed-arc plist nil from #1339# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.402 38.1929 17.6944 143.752 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998965 0.045496 0.0) (-0.045496 0.998965 0.0) (0.0 0.0 1.0)) pos #f(107.058 54.7319 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.501957) #s(costed-arc plist nil from #1264# to #1340=#s(extended-node plist ((:name . "l-2-4-20")) arc-list (#s(costed-arc plist nil from #1340# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(249.977 38.5951 -0.882878 143.005 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999167 0.040802 0.0) (-0.040802 0.999167 0.0) (0.0 0.0 1.0)) pos #f(98.6919 39.3891 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.57693) #s(costed-arc plist nil from #1264# to #1341=#s(extended-node plist ((:name . "l-2-4-19")) arc-list (#s(costed-arc plist nil from #1341# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(254.245 38.8561 -20.1276 141.801 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998808 0.048812 0.0) (-0.048812 0.998808 0.0) (0.0 0.0 1.0)) pos #f(125.982 61.9013 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.703146) #s(costed-arc plist nil from #1264# to #1342=#s(extended-node plist ((:name . "l-2-4-17")) arc-list (#s(costed-arc plist nil from #1342# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(193.974 43.8176 58.4849 136.543 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998917 0.046535 0.0) (-0.046535 0.998917 0.0) (0.0 0.0 1.0)) pos #f(102.746 177.953 0.0)) base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.398957) #s(costed-arc plist nil from #1264# to #1343=#s(extended-node plist ((:name . "l-2-4-16")) arc-list (#s(costed-arc plist nil from #1343# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(232.919 44.3939 37.541 141.518 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(140.646 11.7432 25.2631 139.801 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999876 0.015749 0.0) (-0.015749 0.999876 0.0) (0.0 0.0 1.0)) pos #f(23.7663 80.1038 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.873815 -0.486259 0.0) (0.486259 0.873815 0.0) (0.0 0.0 1.0)) pos #f(54.2351 109.628 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.342597) #s(costed-arc plist nil from #1264# to #1344=#s(extended-node plist ((:name . "l-2-4-15")) arc-list (#s(costed-arc plist nil from #1344# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.775 52.3019 17.4549 135.186 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999999 -0.001637 0.0) (0.001637 0.999999 0.0) (0.0 0.0 1.0)) pos #f(44.0391 -28.9114 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.384373) #s(costed-arc plist nil from #1264# to #1345=#s(extended-node plist ((:name . "l-2-4-14")) arc-list (#s(costed-arc plist nil from #1345# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.776 46.8929 -0.96773 148.865 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999998 -0.00181 0.0) (0.00181 0.999998 0.0) (0.0 0.0 1.0)) pos #f(-13.6329 -4.06558 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.455229) #s(costed-arc plist nil from #1264# to #1346=#s(extended-node plist ((:name . "l-2-4-13")) arc-list (#s(costed-arc plist nil from #1346# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(252.225 47.5553 -20.2047 147.588 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999988 0.004835 0.0) (-0.004835 0.999988 0.0) (0.0 0.0 1.0)) pos #f(13.1432 20.8648 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.583152) #s(costed-arc plist nil from #1264# to #1347=#s(extended-node plist ((:name . "l-2-4-11")) arc-list (#s(costed-arc plist nil from #1347# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(196.912 51.2367 59.3102 143.219 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(202.223 84.6957 60.427 142.26 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999995 -0.003193 0.0) (0.003193 0.999995 0.0) (0.0 0.0 1.0)) pos #f(-31.2467 175.338 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.908735 0.417374 0.0) (-0.417374 0.908735 0.0) (0.0 0.0 1.0)) pos #f(-61.163 149.079 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.272685) #s(costed-arc plist nil from #1264# to #1117# cost 0.2375) #s(costed-arc plist nil from #1264# to #1348=#s(extended-node plist ((:name . "l-2-4-9")) arc-list (#s(costed-arc plist nil from #1348# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(241.81 56.7025 17.5357 144.831 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999264 -0.038364 0.0) (0.038364 0.999264 0.0) (0.0 0.0 1.0)) pos #f(-91.9139 -26.7407 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.279218) #s(costed-arc plist nil from #1264# to #1349=#s(extended-node plist ((:name . "l-2-4-8")) arc-list (#s(costed-arc plist nil from #1349# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.452 64.6385 -1.34746 138.132 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999227 -0.039306 0.0) (0.039306 0.999227 0.0) (0.0 0.0 1.0)) pos #f(-22.368 -77.9763 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.399098) #s(costed-arc plist nil from #1264# to #1350=#s(extended-node plist ((:name . "l-2-4-7")) arc-list (#s(costed-arc plist nil from #1350# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(250.707 59.1197 -20.2598 152.717 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99942 -0.034048 0.0) (0.034048 0.99942 0.0) (0.0 0.0 1.0)) pos #f(-65.5321 -16.9082 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.49685) #s(costed-arc plist nil from #1264# to #1080# cost 0.205778) #s(costed-arc plist nil from #1264# to #984# cost 0.208836) #s(costed-arc plist nil from #1264# to #1188# cost 0.279024) #s(costed-arc plist nil from #1264# to #1182# cost 0.364482) #s(costed-arc plist nil from #1264# to #1351=#s(extended-node plist ((:name . "l-2-4-1")) arc-list (#s(costed-arc plist nil from #1351# to #968# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(249.676 72.5312 -20.2598 156.042 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(273.647 64.5438 -17.1019 172.96 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997754 -0.066989 0.0) (0.066989 0.997754 0.0) (0.0 0.0 1.0)) pos #f(-116.22 -30.793 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.981194 -0.193026 0.0) (0.193026 0.981194 0.0) (0.0 0.0 1.0)) pos #f(-109.428 -27.3064 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.471471)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(200.696 59.7565 60.1039 142.681 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998138 -0.060989 0.0) (0.060989 0.998138 0.0) (0.0 0.0 1.0)) pos #f(-108.391 -80.8857 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1263# to #1260# cost 0)) arm :arms islands (#1262# #1336#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(196.85 1.63773 58.08 173.379 -120.0 20.0 -30.0 180.0 5.42653 12.6855 -153.862 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1352=#s(extended-node plist ((:name . "r-2-3-15<->-l-2-3-10")) arc-list (#s(costed-arc plist nil from #1352# to #1353=#s(extended-node plist ((:name . #1361="l-2-3-10")) arc-list (#s(costed-arc plist nil from #1353# to #1352# cost 0) #s(costed-arc plist nil from #1353# to #1354=#s(extended-node plist ((:name . "r-2-3-21<->-l-2-3-10")) arc-list (#s(costed-arc plist nil from #1354# to #1353# cost 0) #s(costed-arc plist nil from #1354# to #1355=#s(extended-node plist ((:name . #1357="r-2-3-21")) arc-list (#s(costed-arc plist nil from #1355# to #1356=#s(extended-node plist ((:name . "r-2-3-21<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1356# to #1240# cost 0) #s(costed-arc plist nil from #1356# to #1355# cost 0)) arm :arms islands (#1357# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(239.751 64.5514 53.0383 128.081 -57.2395 -14.585 -88.2465 180.0 -13.0798 16.9466 -132.237 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1355# to #1354# cost 0) #s(costed-arc plist nil from #1355# to #1358=#s(extended-node plist ((:name . "r-2-3-21<->-l-2-3-14")) arc-list (#s(costed-arc plist nil from #1358# to #1359=#s(extended-node plist ((:name . #1360="l-2-3-14")) arc-list (#s(costed-arc plist nil from #1359# to #1358# cost 0) #s(costed-arc plist nil from #1359# to #1337# cost 0.650241) #s(costed-arc plist nil from #1359# to #1338# cost 0.433654) #s(costed-arc plist nil from #1359# to #1339# cost 0.289374) #s(costed-arc plist nil from #1359# to #1340# cost 0.21249) #s(costed-arc plist nil from #1359# to #1341# cost 0.301604) #s(costed-arc plist nil from #1359# to #1342# cost 0.574539) #s(costed-arc plist nil from #1359# to #1343# cost 0.369397) #s(costed-arc plist nil from #1359# to #1344# cost 0.182534) #s(costed-arc plist nil from #1359# to #1345# cost 0.142711) #s(costed-arc plist nil from #1359# to #1346# cost 0.225266) #s(costed-arc plist nil from #1359# to #1347# cost 0.54151) #s(costed-arc plist nil from #1359# to #1117# cost 0.371609) #s(costed-arc plist nil from #1359# to #1348# cost 0.250115) #s(costed-arc plist nil from #1359# to #1349# cost 0.171135) #s(costed-arc plist nil from #1359# to #1350# cost 0.26173) #s(costed-arc plist nil from #1359# to #1080# cost 0.595241) #s(costed-arc plist nil from #1359# to #984# cost 0.439837) #s(costed-arc plist nil from #1359# to #1188# cost 0.341917) #s(costed-arc plist nil from #1359# to #1182# cost 0.306604) #s(costed-arc plist nil from #1359# to #1351# cost 0.354704)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(249.951 47.7878 -0.945119 141.143 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999983 -0.00589 0.0) (0.00589 0.999983 0.0) (0.0 0.0 1.0)) pos #f(36.3615 -136.594 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1358# to #1355# cost 0)) arm :arms islands (#1357# #1360#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(259.306 -32.3493 0.645047 199.471 -120.0 20.0 -30.0 180.0 -13.2715 19.3535 -138.791 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1355# to #1153# cost 0.478027) #s(costed-arc plist nil from #1355# to #1078# cost 0.550244) #s(costed-arc plist nil from #1355# to #1149# cost 0.602323) #s(costed-arc plist nil from #1355# to #1061# cost 0.555309) #s(costed-arc plist nil from #1355# to #1139# cost 0.662023) #s(costed-arc plist nil from #1355# to #946# cost 0.737737) #s(costed-arc plist nil from #1355# to #1057# cost 0.828033) #s(costed-arc plist nil from #1355# to #1071# cost 0.832015) #s(costed-arc plist nil from #1355# to #1054# cost 0.988539) #s(costed-arc plist nil from #1355# to #1068# cost 1.11529) #s(costed-arc plist nil from #1355# to #1065# cost 1.25118) #s(costed-arc plist nil from #1355# to #1305# cost 1.28153) #s(costed-arc plist nil from #1355# to #1047# cost 1.2929) #s(costed-arc plist nil from #1355# to #1306# cost 1.45274) #s(costed-arc plist nil from #1355# to #1307# cost 1.56389) #s(costed-arc plist nil from #1355# to #1308# cost 1.5933) #s(costed-arc plist nil from #1355# to #1309# cost 1.64729) #s(costed-arc plist nil from #1355# to #1145# cost 1.72045)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(249.937 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.3032 18.342 -139.411 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1357# #1361#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(270.816 -17.7367 44.6327 194.457 -120.0 20.0 -30.0 180.0 -13.2313 20.5781 -137.882 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1353# to #1337# cost 0.527099) #s(costed-arc plist nil from #1353# to #1338# cost 0.350024) #s(costed-arc plist nil from #1353# to #1339# cost 0.360129) #s(costed-arc plist nil from #1353# to #1340# cost 0.427259) #s(costed-arc plist nil from #1353# to #1341# cost 0.551946) #s(costed-arc plist nil from #1353# to #1342# cost 0.424336) #s(costed-arc plist nil from #1353# to #1343# cost 0.246217) #s(costed-arc plist nil from #1353# to #1344# cost 0.224928) #s(costed-arc plist nil from #1353# to #1345# cost 0.329917) #s(costed-arc plist nil from #1353# to #1346# cost 0.452097) #s(costed-arc plist nil from #1353# to #1347# cost 0.363913) #s(costed-arc plist nil from #1353# to #1117# cost 0.163929) #s(costed-arc plist nil from #1353# to #1348# cost 0.200117) #s(costed-arc plist nil from #1353# to #1349# cost 0.260759) #s(costed-arc plist nil from #1353# to #1350# cost 0.399902) #s(costed-arc plist nil from #1353# to #1080# cost 0.366711) #s(costed-arc plist nil from #1353# to #984# cost 0.240646) #s(costed-arc plist nil from #1353# to #1188# cost 0.266549) #s(costed-arc plist nil from #1353# to #1182# cost 0.342765) #s(costed-arc plist nil from #1353# to #1351# cost 0.446073)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(229.42 52.8601 36.9039 137.08 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(142.525 19.2595 25.1853 130.984 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999453 -0.033067 0.0) (0.033067 0.999453 0.0) (0.0 0.0 1.0)) pos #f(-46.9758 -140.067 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.849035 -0.528336 0.0) (0.528336 0.849035 0.0) (0.0 0.0 1.0)) pos #f(-17.9842 -109.091 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1352# to #1260# cost 0)) arm :arms islands (#1262# #1361#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(241.672 -18.3823 38.7837 175.762 -120.0 20.0 -30.0 180.0 5.42152 17.7756 -154.445 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1153# cost 0.403041) #s(costed-arc plist nil from #1260# to #1078# cost 0.474277) #s(costed-arc plist nil from #1260# to #1149# cost 0.510077) #s(costed-arc plist nil from #1260# to #1061# cost 0.429167) #s(costed-arc plist nil from #1260# to #1139# cost 0.561047) #s(costed-arc plist nil from #1260# to #946# cost 0.63134) #s(costed-arc plist nil from #1260# to #1057# cost 0.670863) #s(costed-arc plist nil from #1260# to #1071# cost 0.687089) #s(costed-arc plist nil from #1260# to #1054# cost 0.839037) #s(costed-arc plist nil from #1260# to #1068# cost 0.917415) #s(costed-arc plist nil from #1260# to #1065# cost 1.04374) #s(costed-arc plist nil from #1260# to #1305# cost 1.07793) #s(costed-arc plist nil from #1260# to #1047# cost 1.09099) #s(costed-arc plist nil from #1260# to #1306# cost 1.24447) #s(costed-arc plist nil from #1260# to #1307# cost 1.32039) #s(costed-arc plist nil from #1260# to #1308# cost 1.33825) #s(costed-arc plist nil from #1260# to #1309# cost 1.39811) #s(costed-arc plist nil from #1260# to #1145# cost 1.48075)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(242.234 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 5.37791 17.858 -155.564 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1262# #1258#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(236.393 30.7421 50.1847 129.269 -61.8898 -61.7104 -75.6201 180.0 5.73425 16.9732 -146.226 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1256# to #1224# cost 0.73987) #s(costed-arc plist nil from #1256# to #1225# cost 1.70095) #s(costed-arc plist nil from #1256# to #1113# cost 1.54852) #s(costed-arc plist nil from #1256# to #1226# cost 1.60754) #s(costed-arc plist nil from #1256# to #1227# cost 1.63694) #s(costed-arc plist nil from #1256# to #1135# cost 1.49901) #s(costed-arc plist nil from #1256# to #1228# cost 1.11984) #s(costed-arc plist nil from #1256# to #944# cost 1.32933) #s(costed-arc plist nil from #1256# to #1034# cost 1.53148) #s(costed-arc plist nil from #1256# to #1194# cost 1.51669) #s(costed-arc plist nil from #1256# to #1229# cost 1.73881) #s(costed-arc plist nil from #1256# to #1172# cost 1.66699) #s(costed-arc plist nil from #1256# to #1168# cost 1.47527) #s(costed-arc plist nil from #1256# to #1023# cost 1.15114) #s(costed-arc plist nil from #1256# to #1006# cost 1.52738) #s(costed-arc plist nil from #1256# to #1018# cost 1.50905) #s(costed-arc plist nil from #1256# to #994# cost 1.51065) #s(costed-arc plist nil from #1256# to #1164# cost 1.62592) #s(costed-arc plist nil from #1256# to #1160# cost 1.51828) #s(costed-arc plist nil from #1256# to #1156# cost 1.44683) #s(costed-arc plist nil from #1256# to #971# cost 1.81052) #s(costed-arc plist nil from #1256# to #952# cost 1.52542) #s(costed-arc plist nil from #1256# to #948# cost 1.5143) #s(costed-arc plist nil from #1256# to #964# cost 1.42161) #s(costed-arc plist nil from #1256# to #956# cost 1.38512) #s(costed-arc plist nil from #1256# to #960# cost 1.35691)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(146.922 18.6097 63.9946 -7.88968 -73.9553 -107.127 -86.4008 170.803 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(143.789 1.49578 46.0939 23.6908 -45.664 -126.099 -100.478 170.694 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999264 0.038347 0.0) (-0.038347 0.999264 0.0) (0.0 0.0 1.0)) pos #f(-285.906 -88.4852 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.884568 -0.466411 0.0) (0.466411 0.884568 0.0) (0.0 0.0 1.0)) pos #f(-263.534 -81.4598 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1255# to #1249# cost 0)) arm :arms islands (#1251# #1258#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(176.104 -10.1291 67.0301 46.0458 -79.6833 -140.644 -45.6981 236.612 -24.5578 18.9025 -40.1558 -27.5763 -14.1541 -22.6125 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1362=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-16")) arc-list (#s(costed-arc plist nil from #1362# to #1363=#s(extended-node plist ((:name . #1364="l-0-3-16")) arc-list (#s(costed-arc plist nil from #1363# to #1362# cost 0) #s(costed-arc plist nil from #1363# to #1224# cost 0.764997) #s(costed-arc plist nil from #1363# to #1225# cost 1.60641) #s(costed-arc plist nil from #1363# to #1113# cost 1.42322) #s(costed-arc plist nil from #1363# to #1226# cost 1.48799) #s(costed-arc plist nil from #1363# to #1227# cost 1.468) #s(costed-arc plist nil from #1363# to #1135# cost 1.3751) #s(costed-arc plist nil from #1363# to #1228# cost 1.11198) #s(costed-arc plist nil from #1363# to #944# cost 1.17953) #s(costed-arc plist nil from #1363# to #1034# cost 1.40192) #s(costed-arc plist nil from #1363# to #1194# cost 1.3926) #s(costed-arc plist nil from #1363# to #1229# cost 1.60812) #s(costed-arc plist nil from #1363# to #1172# cost 1.53802) #s(costed-arc plist nil from #1363# to #1168# cost 1.34339) #s(costed-arc plist nil from #1363# to #1023# cost 1.128) #s(costed-arc plist nil from #1363# to #1006# cost 1.40024) #s(costed-arc plist nil from #1363# to #1018# cost 1.38104) #s(costed-arc plist nil from #1363# to #994# cost 1.39109) #s(costed-arc plist nil from #1363# to #1164# cost 1.49853) #s(costed-arc plist nil from #1363# to #1160# cost 1.3837) #s(costed-arc plist nil from #1363# to #1156# cost 1.31318) #s(costed-arc plist nil from #1363# to #971# cost 1.71699) #s(costed-arc plist nil from #1363# to #952# cost 1.41632) #s(costed-arc plist nil from #1363# to #948# cost 1.409) #s(costed-arc plist nil from #1363# to #964# cost 1.30437) #s(costed-arc plist nil from #1363# to #956# cost 1.26467) #s(costed-arc plist nil from #1363# to #960# cost 1.23626)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(156.809 15.6749 54.1722 -10.0047 -76.4639 -88.5693 -81.9381 168.68 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(155.22 -0.093156 39.2915 23.238 -50.9398 -108.014 -98.7433 168.686 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997675 0.068152 0.0) (-0.068152 0.997675 0.0) (0.0 0.0 1.0)) pos #f(-155.097 -42.242 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.898095 -0.439801 0.0) (0.439801 0.898095 0.0) (0.0 0.0 1.0)) pos #f(-132.839 -37.6021 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1362# to #1249# cost 0)) arm :arms islands (#1251# #1364#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(175.795 -31.6257 33.2385 23.7117 -43.1498 -136.662 -51.1828 236.612 -24.3605 19.3152 -39.0011 -28.1472 -14.0475 -21.817 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1365=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-17")) arc-list (#s(costed-arc plist nil from #1365# to #1366=#s(extended-node plist ((:name . #1367="l-0-3-17")) arc-list (#s(costed-arc plist nil from #1366# to #1365# cost 0) #s(costed-arc plist nil from #1366# to #1224# cost 0.715643) #s(costed-arc plist nil from #1366# to #1225# cost 1.6487) #s(costed-arc plist nil from #1366# to #1113# cost 1.47828) #s(costed-arc plist nil from #1366# to #1226# cost 1.54678) #s(costed-arc plist nil from #1366# to #1227# cost 1.52402) #s(costed-arc plist nil from #1366# to #1135# cost 1.43865) #s(costed-arc plist nil from #1366# to #1228# cost 1.06865) #s(costed-arc plist nil from #1366# to #944# cost 1.2716) #s(costed-arc plist nil from #1366# to #1034# cost 1.45857) #s(costed-arc plist nil from #1366# to #1194# cost 1.44544) #s(costed-arc plist nil from #1366# to #1229# cost 1.66946) #s(costed-arc plist nil from #1366# to #1172# cost 1.59663) #s(costed-arc plist nil from #1366# to #1168# cost 1.408) #s(costed-arc plist nil from #1366# to #1023# cost 1.09441) #s(costed-arc plist nil from #1366# to #1006# cost 1.4483) #s(costed-arc plist nil from #1366# to #1018# cost 1.43259) #s(costed-arc plist nil from #1366# to #994# cost 1.43721) #s(costed-arc plist nil from #1366# to #1164# cost 1.54987) #s(costed-arc plist nil from #1366# to #1160# cost 1.44331) #s(costed-arc plist nil from #1366# to #1156# cost 1.37183) #s(costed-arc plist nil from #1366# to #971# cost 1.73521) #s(costed-arc plist nil from #1366# to #952# cost 1.449) #s(costed-arc plist nil from #1366# to #948# cost 1.44366) #s(costed-arc plist nil from #1366# to #964# cost 1.34728) #s(costed-arc plist nil from #1366# to #956# cost 1.31108) #s(costed-arc plist nil from #1366# to #960# cost 1.28707)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(149.514 17.1952 60.2727 -4.35567 -67.6506 -109.916 -79.3317 170.456 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(146.913 -0.409736 44.7204 26.0421 -43.3942 -127.685 -83.4921 170.578 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997472 0.071065 0.0) (-0.071065 0.997472 0.0) (0.0 0.0 1.0)) pos #f(-178.918 -16.6477 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.899372 -0.437185 0.0) (0.437185 0.899372 0.0) (0.0 0.0 1.0)) pos #f(-158.333 -21.4385 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1365# to #1249# cost 0)) arm :arms islands (#1251# #1367#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.325 -32.3285 34.8131 24.358 -23.5987 -141.178 -32.6057 236.612 -24.3649 19.0252 -38.7728 -28.3901 -14.0142 -21.7524 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1332# cost 0) #s(costed-arc plist nil from #1249# to #1302# cost 0) #s(costed-arc plist nil from #1249# to #5# cost 1.55547) #s(costed-arc plist nil from #1249# to #942# cost 0.497813) #s(costed-arc plist nil from #1249# to #1130# cost 0.515366) #s(costed-arc plist nil from #1249# to #1127# cost 0.492504) #s(costed-arc plist nil from #1249# to #1124# cost 0.500656) #s(costed-arc plist nil from #1249# to #1121# cost 0.44151) #s(costed-arc plist nil from #1249# to #1111# cost 0.446493) #s(costed-arc plist nil from #1249# to #1108# cost 0.660992) #s(costed-arc plist nil from #1249# to #1105# cost 0.650581) #s(costed-arc plist nil from #1249# to #1102# cost 0.693013) #s(costed-arc plist nil from #1249# to #1098# cost 0.674915) #s(costed-arc plist nil from #1249# to #1095# cost 0.663422) #s(costed-arc plist nil from #1249# to #1092# cost 0.597368) #s(costed-arc plist nil from #1249# to #1028# cost 0.724133) #s(costed-arc plist nil from #1249# to #1000# cost 0.714429) #s(costed-arc plist nil from #1249# to #1012# cost 0.716859) #s(costed-arc plist nil from #1249# to #1088# cost 0.748178) #s(costed-arc plist nil from #1249# to #979# cost 0.738826) #s(costed-arc plist nil from #1249# to #1082# cost 0.726175) #s(costed-arc plist nil from #1249# to #988# cost 0.814346) #s(costed-arc plist nil from #1249# to #958# cost 0.783239) #s(costed-arc plist nil from #1249# to #962# cost 0.789023) #s(costed-arc plist nil from #1249# to #954# cost 0.803277) #s(costed-arc plist nil from #1249# to #950# cost 0.802154) #s(costed-arc plist nil from #1249# to #1197# cost 0.867531)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(217.778 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.5117 22.6591 -36.2889 -28.8605 -13.9459 -18.1186 180.704 0.0 0.0) robot-pose-optimized #f(217.624 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -58.4955 32.6496 -35.3087 -41.946 -10.1504 -37.0103 181.072 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.268217 -0.963358 0.0) (0.963358 0.268217 0.0) (0.0 0.0 1.0)) pos #f(-337.158 176.859 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1251# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(158.654 40.1608 61.7376 116.596 -97.5993 -105.395 -37.3886 236.612 -24.8147 17.5184 -41.0638 -27.4343 -14.1437 -23.4747 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1368=#s(extended-node plist ((:name . "r-0-3-22<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1368# to #1240# cost 0) #s(costed-arc plist nil from #1368# to #1199# cost 0)) arm :arms islands (#1369# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(167.341 22.7888 59.1944 119.157 -70.987 -65.9024 -88.0465 180.0 -28.1251 23.063 -54.2476 -25.1938 -43.3934 -23.5785 175.575 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1261# cost 0) #s(costed-arc plist nil from #1240# to #1356# cost 0) #s(costed-arc plist nil from #1240# to #1327# cost 0) #s(costed-arc plist nil from #1240# to #1224# cost 0.662889) #s(costed-arc plist nil from #1240# to #1225# cost 1.90021) #s(costed-arc plist nil from #1240# to #1113# cost 1.85377) #s(costed-arc plist nil from #1240# to #1226# cost 1.87821) #s(costed-arc plist nil from #1240# to #1227# cost 1.92795) #s(costed-arc plist nil from #1240# to #1135# cost 1.75792) #s(costed-arc plist nil from #1240# to #1228# cost 1.03885) #s(costed-arc plist nil from #1240# to #944# cost 1.66897) #s(costed-arc plist nil from #1240# to #1034# cost 1.83697) #s(costed-arc plist nil from #1240# to #1194# cost 1.78886) #s(costed-arc plist nil from #1240# to #1229# cost 1.97111) #s(costed-arc plist nil from #1240# to #1172# cost 1.89119) #s(costed-arc plist nil from #1240# to #1168# cost 1.72037) #s(costed-arc plist nil from #1240# to #1023# cost 1.07093) #s(costed-arc plist nil from #1240# to #1006# cost 1.82131) #s(costed-arc plist nil from #1240# to #1018# cost 1.78278) #s(costed-arc plist nil from #1240# to #994# cost 1.74847) #s(costed-arc plist nil from #1240# to #1164# cost 1.84396) #s(costed-arc plist nil from #1240# to #1160# cost 1.74501) #s(costed-arc plist nil from #1240# to #1156# cost 1.67489) #s(costed-arc plist nil from #1240# to #971# cost 2.02835) #s(costed-arc plist nil from #1240# to #952# cost 1.78635) #s(costed-arc plist nil from #1240# to #948# cost 1.75287) #s(costed-arc plist nil from #1240# to #964# cost 1.65596) #s(costed-arc plist nil from #1240# to #956# cost 1.61144) #s(costed-arc plist nil from #1240# to #960# cost 1.57765)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(100.34 22.5628 73.2681 -30.0439 -121.048 -164.568 -110.23 174.652 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(102.535 14.9607 74.2447 -37.2423 -121.542 -191.527 -114.592 150.987 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999965 -0.008338 0.0) (0.008338 0.999965 0.0) (0.0 0.0 1.0)) pos #f(-305.677 -103.486 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.984469 -0.175559 0.0) (0.175559 0.984469 0.0) (0.0 0.0 1.0)) pos #f(-275.929 -73.2366 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1239# to #1235# cost 0)) arm :arms islands (#1237# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(248.104 9.03401 50.9397 126.881 -76.1171 -110.574 -78.7896 51.9934 -26.1834 41.9358 -64.2774 -25.6017 -19.7495 -25.2362 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1235# to #5# cost 1.35399) #s(costed-arc plist nil from #1235# to #942# cost 0.328775) #s(costed-arc plist nil from #1235# to #1130# cost 0.337071) #s(costed-arc plist nil from #1235# to #1127# cost 0.396711) #s(costed-arc plist nil from #1235# to #1124# cost 0.450403) #s(costed-arc plist nil from #1235# to #1121# cost 0.443869) #s(costed-arc plist nil from #1235# to #1111# cost 0.515934) #s(costed-arc plist nil from #1235# to #1108# cost 0.340802) #s(costed-arc plist nil from #1235# to #1105# cost 0.373511) #s(costed-arc plist nil from #1235# to #1102# cost 0.492706) #s(costed-arc plist nil from #1235# to #1098# cost 0.531229) #s(costed-arc plist nil from #1235# to #1095# cost 0.568791) #s(costed-arc plist nil from #1235# to #1092# cost 0.564058) #s(costed-arc plist nil from #1235# to #1028# cost 0.3944) #s(costed-arc plist nil from #1235# to #1000# cost 0.421567) #s(costed-arc plist nil from #1235# to #1012# cost 0.471363) #s(costed-arc plist nil from #1235# to #1088# cost 0.559698) #s(costed-arc plist nil from #1235# to #979# cost 0.604407) #s(costed-arc plist nil from #1235# to #1082# cost 0.643558) #s(costed-arc plist nil from #1235# to #988# cost 0.517634) #s(costed-arc plist nil from #1235# to #958# cost 0.491283) #s(costed-arc plist nil from #1235# to #962# cost 0.539954) #s(costed-arc plist nil from #1235# to #954# cost 0.601663) #s(costed-arc plist nil from #1235# to #950# cost 0.646296) #s(costed-arc plist nil from #1235# to #1197# cost 0.779965)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(195.629 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.4071 42.9213 -63.5646 -35.4188 -15.2744 -24.9225 188.127 0.0 0.0) robot-pose-optimized #f(195.745 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.0291 57.6069 -47.2391 -44.1907 -7.32691 -37.2445 188.167 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.394848 -0.918747 0.0) (0.918747 0.394848 0.0) (0.0 0.0 1.0)) pos #f(-410.588 250.029 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1237# #1233#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(251.322 8.09076 34.5469 111.457 -103.371 -88.5102 -88.2515 51.9934 -25.91 41.8852 -64.4149 -25.0877 -19.8382 -24.9489 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1231# to #1313# cost 0) #s(costed-arc plist nil from #1231# to #1224# cost 0.76497) #s(costed-arc plist nil from #1231# to #1225# cost 1.68471) #s(costed-arc plist nil from #1231# to #1113# cost 1.56163) #s(costed-arc plist nil from #1231# to #1226# cost 1.59789) #s(costed-arc plist nil from #1231# to #1227# cost 1.59887) #s(costed-arc plist nil from #1231# to #1135# cost 1.47501) #s(costed-arc plist nil from #1231# to #1228# cost 1.19414) #s(costed-arc plist nil from #1231# to #944# cost 1.3169) #s(costed-arc plist nil from #1231# to #1034# cost 1.5386) #s(costed-arc plist nil from #1231# to #1194# cost 1.50578) #s(costed-arc plist nil from #1231# to #1229# cost 1.69204) #s(costed-arc plist nil from #1231# to #1172# cost 1.6189) #s(costed-arc plist nil from #1231# to #1168# cost 1.43612) #s(costed-arc plist nil from #1231# to #1023# cost 1.20569) #s(costed-arc plist nil from #1231# to #1006# cost 1.53084) #s(costed-arc plist nil from #1231# to #1018# cost 1.49132) #s(costed-arc plist nil from #1231# to #994# cost 1.4737) #s(costed-arc plist nil from #1231# to #1164# cost 1.58253) #s(costed-arc plist nil from #1231# to #1160# cost 1.4584) #s(costed-arc plist nil from #1231# to #1156# cost 1.40386) #s(costed-arc plist nil from #1231# to #971# cost 1.79434) #s(costed-arc plist nil from #1231# to #952# cost 1.50452) #s(costed-arc plist nil from #1231# to #948# cost 1.47141) #s(costed-arc plist nil from #1231# to #964# cost 1.37071) #s(costed-arc plist nil from #1231# to #956# cost 1.32535) #s(costed-arc plist nil from #1231# to #960# cost 1.28338)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(156.597 14.4271 51.7239 -19.8189 -121.529 -84.6869 -86.4352 170.453 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(154.65 8.30024 54.4141 17.0645 -121.542 -112.279 -94.3628 170.559 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999436 0.033574 0.0) (-0.033574 0.999436 0.0) (0.0 0.0 1.0)) pos #f(-296.521 -92.0154 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.882324 -0.470642 0.0) (0.470642 0.882324 0.0) (0.0 0.0 1.0)) pos #f(-275.271 -82.5676 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1230# to #1214# cost 0)) arm :arms islands (#1216# #1233#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(116.135 -12.7973 59.132 10.7446 -118.706 178.741 -37.4377 339.803 -35.6744 49.8787 -83.419 -70.8095 -21.3136 -40.499 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1214# to #1370=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1370# to #1201# cost 0) #s(costed-arc plist nil from #1370# to #1214# cost 0)) arm :arms islands (#1216# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(115.39 -12.6253 73.5636 10.641 -114.371 178.607 -38.6041 339.803 -35.7052 50.0166 -83.2797 -70.9409 -21.2716 -40.3758 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1214# to #1371=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1371# to #1372=#s(extended-node plist ((:name . #1374="l-0-3-6")) arc-list (#s(costed-arc plist nil from #1372# to #1373=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1373# to #1372# cost 0) #s(costed-arc plist nil from #1373# to #1203# cost 0)) arm :arms islands (#1211# #1374#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(179.0 -23.3078 -17.3842 17.5608 -22.1123 -116.328 -17.3826 199.917 -34.3928 40.0025 -64.6595 -86.9226 -12.4914 -38.4245 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1372# to #1375=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1375# to #1372# cost 0) #s(costed-arc plist nil from #1375# to #1207# cost 0)) arm :arms islands (#1223# #1374#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(194.31 -22.451 -17.3156 16.53 -18.9175 -99.6986 -14.8911 194.347 -36.7367 46.9027 -76.4501 -74.998 -15.8956 -38.7788 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1372# to #1371# cost 0) #s(costed-arc plist nil from #1372# to #1224# cost 0.872379) #s(costed-arc plist nil from #1372# to #1225# cost 1.59486) #s(costed-arc plist nil from #1372# to #1113# cost 1.28465) #s(costed-arc plist nil from #1372# to #1226# cost 1.29431) #s(costed-arc plist nil from #1372# to #1227# cost 1.24167) #s(costed-arc plist nil from #1372# to #1135# cost 1.15378) #s(costed-arc plist nil from #1372# to #1228# cost 1.1681) #s(costed-arc plist nil from #1372# to #944# cost 0.96319) #s(costed-arc plist nil from #1372# to #1034# cost 1.2475) #s(costed-arc plist nil from #1372# to #1194# cost 1.22841) #s(costed-arc plist nil from #1372# to #1229# cost 1.36116) #s(costed-arc plist nil from #1372# to #1172# cost 1.28198) #s(costed-arc plist nil from #1372# to #1168# cost 1.09324) #s(costed-arc plist nil from #1372# to #1023# cost 1.14422) #s(costed-arc plist nil from #1372# to #1006# cost 1.2276) #s(costed-arc plist nil from #1372# to #1018# cost 1.18578) #s(costed-arc plist nil from #1372# to #994# cost 1.18644) #s(costed-arc plist nil from #1372# to #1164# cost 1.24093) #s(costed-arc plist nil from #1372# to #1160# cost 1.10181) #s(costed-arc plist nil from #1372# to #1156# cost 1.03897) #s(costed-arc plist nil from #1372# to #971# cost 1.49682) #s(costed-arc plist nil from #1372# to #952# cost 1.18887) #s(costed-arc plist nil from #1372# to #948# cost 1.16052) #s(costed-arc plist nil from #1372# to #964# cost 1.03707) #s(costed-arc plist nil from #1372# to #956# cost 0.972711) #s(costed-arc plist nil from #1372# to #960# cost 0.918589)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(199.86 19.3136 7.50079 -9.52974 -106.702 -69.1929 -21.6877 177.245 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(201.42 4.08224 8.77924 0.781942 -94.369 -63.4242 -36.6693 170.527 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998504 0.054674 0.0) (-0.054674 0.998504 0.0) (0.0 0.0 1.0)) pos #f(-123.934 38.6318 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.933881 -0.357585 0.0) (0.357585 0.933881 0.0) (0.0 0.0 1.0)) pos #f(-110.48 27.0927 0.0)) object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1371# to #1214# cost 0)) arm :arms islands (#1216# #1374#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(128.525 -20.9464 -20.2598 -0.204155 -29.7276 179.988 -18.9131 339.803 -35.7581 51.15 -83.3381 -70.1123 -21.3646 -39.3869 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1214# to #1277# cost 0) #s(costed-arc plist nil from #1214# to #1286# cost 0) #s(costed-arc plist nil from #1214# to #1331# cost 0) #s(costed-arc plist nil from #1214# to #5# cost 1.34851) #s(costed-arc plist nil from #1214# to #942# cost 0.521563) #s(costed-arc plist nil from #1214# to #1130# cost 0.490092) #s(costed-arc plist nil from #1214# to #1127# cost 0.556773) #s(costed-arc plist nil from #1214# to #1124# cost 0.613196) #s(costed-arc plist nil from #1214# to #1121# cost 0.634018) #s(costed-arc plist nil from #1214# to #1111# cost 0.737235) #s(costed-arc plist nil from #1214# to #1108# cost 0.473646) #s(costed-arc plist nil from #1214# to #1105# cost 0.452218) #s(costed-arc plist nil from #1214# to #1102# cost 0.504215) #s(costed-arc plist nil from #1214# to #1098# cost 0.581686) #s(costed-arc plist nil from #1214# to #1095# cost 0.655183) #s(costed-arc plist nil from #1214# to #1092# cost 0.706594) #s(costed-arc plist nil from #1214# to #1028# cost 0.411253) #s(costed-arc plist nil from #1214# to #1000# cost 0.394746) #s(costed-arc plist nil from #1214# to #1012# cost 0.441743) #s(costed-arc plist nil from #1214# to #1088# cost 0.538011) #s(costed-arc plist nil from #1214# to #979# cost 0.62893) #s(costed-arc plist nil from #1214# to #1082# cost 0.71768) #s(costed-arc plist nil from #1214# to #988# cost 0.425271) #s(costed-arc plist nil from #1214# to #958# cost 0.376288) #s(costed-arc plist nil from #1214# to #962# cost 0.438151) #s(costed-arc plist nil from #1214# to #954# cost 0.534164) #s(costed-arc plist nil from #1214# to #950# cost 0.629847) #s(costed-arc plist nil from #1214# to #1197# cost 0.815685)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(188.916 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.0724 60.0149 -80.0174 -68.2681 -21.0347 -29.4677 179.691 0.0 0.0) robot-pose-optimized #f(189.306 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.7325 74.2708 -76.7682 -69.3672 -21.8949 -47.8511 179.69 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.477966 -0.878378 0.0) (0.878378 0.477966 0.0) (0.0 0.0 1.0)) pos #f(-503.977 163.855 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1216# #1212#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(120.55 -13.8598 18.3381 8.96929 -102.097 179.51 -34.069 339.803 -35.5972 49.7184 -83.8061 -70.3033 -21.4444 -40.6495 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1209# to #1224# cost 0.767966) #s(costed-arc plist nil from #1209# to #1225# cost 1.61614) #s(costed-arc plist nil from #1209# to #1113# cost 1.34627) #s(costed-arc plist nil from #1209# to #1226# cost 1.3582) #s(costed-arc plist nil from #1209# to #1227# cost 1.3422) #s(costed-arc plist nil from #1209# to #1135# cost 1.21872) #s(costed-arc plist nil from #1209# to #1228# cost 1.20197) #s(costed-arc plist nil from #1209# to #944# cost 1.03018) #s(costed-arc plist nil from #1209# to #1034# cost 1.31063) #s(costed-arc plist nil from #1209# to #1194# cost 1.28726) #s(costed-arc plist nil from #1209# to #1229# cost 1.43065) #s(costed-arc plist nil from #1209# to #1172# cost 1.35419) #s(costed-arc plist nil from #1209# to #1168# cost 1.16502) #s(costed-arc plist nil from #1209# to #1023# cost 1.18745) #s(costed-arc plist nil from #1209# to #1006# cost 1.29877) #s(costed-arc plist nil from #1209# to #1018# cost 1.25309) #s(costed-arc plist nil from #1209# to #994# cost 1.24956) #s(costed-arc plist nil from #1209# to #1164# cost 1.32198) #s(costed-arc plist nil from #1209# to #1160# cost 1.17978) #s(costed-arc plist nil from #1209# to #1156# cost 1.1247) #s(costed-arc plist nil from #1209# to #971# cost 1.57808) #s(costed-arc plist nil from #1209# to #952# cost 1.2655) #s(costed-arc plist nil from #1209# to #948# cost 1.22851) #s(costed-arc plist nil from #1209# to #964# cost 1.11315) #s(costed-arc plist nil from #1209# to #956# cost 1.05314) #s(costed-arc plist nil from #1209# to #960# cost 0.99712)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(178.313 19.7871 18.1261 -14.7151 -121.535 -61.2188 -42.8981 177.383 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(187.384 -16.6177 -20.2598 -34.6156 -121.542 -116.396 -92.5733 177.396 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.99951 0.031302 0.0) (-0.031302 0.99951 0.0) (0.0 0.0 1.0)) pos #f(-206.124 -32.0892 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.914108 -0.40547 0.0) (0.40547 0.914108 0.0) (0.0 0.0 1.0)) pos #f(-176.962 -59.3167 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1208# to #1207# cost 0)) arm :arms islands (#1223# #1212#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(176.822 -19.2782 16.5389 27.8053 -77.1603 -87.5533 -63.4902 194.347 -36.4528 44.9542 -76.2952 -75.4091 -15.7669 -40.4903 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1207# to #1222# cost 0) #s(costed-arc plist nil from #1207# to #1232# cost 0) #s(costed-arc plist nil from #1207# to #1243# cost 0) #s(costed-arc plist nil from #1207# to #1375# cost 0) #s(costed-arc plist nil from #1207# to #1376=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-7")) arc-list (#s(costed-arc plist nil from #1376# to #1377=#s(extended-node plist ((:name . #1379="l-0-3-7")) arc-list (#s(costed-arc plist nil from #1377# to #1378=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-7")) arc-list (#s(costed-arc plist nil from #1378# to #1377# cost 0) #s(costed-arc plist nil from #1378# to #1203# cost 0)) arm :arms islands (#1211# #1379#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(137.314 -28.427 -4.99913 12.62 -33.9621 -108.784 -45.656 199.917 -32.8525 37.5577 -61.3246 -88.2622 -11.6806 -37.4995 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1377# to #1376# cost 0) #s(costed-arc plist nil from #1377# to #1224# cost 0.835252) #s(costed-arc plist nil from #1377# to #1225# cost 1.60513) #s(costed-arc plist nil from #1377# to #1113# cost 1.28654) #s(costed-arc plist nil from #1377# to #1226# cost 1.33586) #s(costed-arc plist nil from #1377# to #1227# cost 1.26609) #s(costed-arc plist nil from #1377# to #1135# cost 1.19297) #s(costed-arc plist nil from #1377# to #1228# cost 1.16598) #s(costed-arc plist nil from #1377# to #944# cost 1.02278) #s(costed-arc plist nil from #1377# to #1034# cost 1.25723) #s(costed-arc plist nil from #1377# to #1194# cost 1.22267) #s(costed-arc plist nil from #1377# to #1229# cost 1.39346) #s(costed-arc plist nil from #1377# to #1172# cost 1.31154) #s(costed-arc plist nil from #1377# to #1168# cost 1.13118) #s(costed-arc plist nil from #1377# to #1023# cost 1.15059) #s(costed-arc plist nil from #1377# to #1006# cost 1.2386) #s(costed-arc plist nil from #1377# to #1018# cost 1.19244) #s(costed-arc plist nil from #1377# to #994# cost 1.17791) #s(costed-arc plist nil from #1377# to #1164# cost 1.27307) #s(costed-arc plist nil from #1377# to #1160# cost 1.13052) #s(costed-arc plist nil from #1377# to #1156# cost 1.0825) #s(costed-arc plist nil from #1377# to #971# cost 1.51974) #s(costed-arc plist nil from #1377# to #952# cost 1.21331) #s(costed-arc plist nil from #1377# to #948# cost 1.17968) #s(costed-arc plist nil from #1377# to #964# cost 1.05741) #s(costed-arc plist nil from #1377# to #956# cost 1.00175) #s(costed-arc plist nil from #1377# to #960# cost 0.955434)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(186.336 17.7637 28.8572 -11.6551 -121.53 -67.2326 -31.2769 177.666 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998158 0.060674 0.0) (-0.060674 0.998158 0.0) (0.0 0.0 1.0)) pos #f(-113.996 29.0307 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1376# to #1207# cost 0)) arm :arms islands (#1223# #1379#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(159.586 -28.6634 -3.14613 7.49958 -30.223 -90.9589 -43.6237 194.347 -36.2426 45.9447 -74.1327 -77.4639 -15.2211 -38.8179 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1207# to #1380=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-8")) arc-list (#s(costed-arc plist nil from #1380# to #1381=#s(extended-node plist ((:name . #1383="l-0-3-8")) arc-list (#s(costed-arc plist nil from #1381# to #1382=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-8")) arc-list (#s(costed-arc plist nil from #1382# to #1381# cost 0) #s(costed-arc plist nil from #1382# to #1203# cost 0)) arm :arms islands (#1211# #1383#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(134.431 -31.7594 5.40691 8.84542 -35.8245 -106.573 -65.3504 199.917 -32.754 37.4422 -61.0771 -88.438 -11.6375 -37.2254 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1381# to #1380# cost 0) #s(costed-arc plist nil from #1381# to #1224# cost 0.772463) #s(costed-arc plist nil from #1381# to #1225# cost 1.61107) #s(costed-arc plist nil from #1381# to #1113# cost 1.33016) #s(costed-arc plist nil from #1381# to #1226# cost 1.39746) #s(costed-arc plist nil from #1381# to #1227# cost 1.3386) #s(costed-arc plist nil from #1381# to #1135# cost 1.26379) #s(costed-arc plist nil from #1381# to #1228# cost 1.15893) #s(costed-arc plist nil from #1381# to #944# cost 1.09415) #s(costed-arc plist nil from #1381# to #1034# cost 1.30494) #s(costed-arc plist nil from #1381# to #1194# cost 1.27162) #s(costed-arc plist nil from #1381# to #1229# cost 1.47035) #s(costed-arc plist nil from #1381# to #1172# cost 1.3926) #s(costed-arc plist nil from #1381# to #1168# cost 1.21249) #s(costed-arc plist nil from #1381# to #1023# cost 1.15697) #s(costed-arc plist nil from #1381# to #1006# cost 1.29348) #s(costed-arc plist nil from #1381# to #1018# cost 1.25236) #s(costed-arc plist nil from #1381# to #994# cost 1.23945) #s(costed-arc plist nil from #1381# to #1164# cost 1.35827) #s(costed-arc plist nil from #1381# to #1160# cost 1.22198) #s(costed-arc plist nil from #1381# to #1156# cost 1.17638) #s(costed-arc plist nil from #1381# to #971# cost 1.59244) #s(costed-arc plist nil from #1381# to #952# cost 1.28358) #s(costed-arc plist nil from #1381# to #948# cost 1.25557) #s(costed-arc plist nil from #1381# to #964# cost 1.14304) #s(costed-arc plist nil from #1381# to #956# cost 1.09806) #s(costed-arc plist nil from #1381# to #960# cost 1.06114)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(168.781 16.3197 45.7252 -11.8731 -121.522 -68.1683 -56.718 177.448 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998011 0.063035 0.0) (-0.063035 0.998011 0.0) (0.0 0.0 1.0)) pos #f(-133.999 -7.84047 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1380# to #1207# cost 0)) arm :arms islands (#1223# #1383#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(156.876 -31.8769 7.98029 3.06137 -32.1251 -89.304 -60.3767 194.347 -36.2099 45.9198 -73.9266 -77.7149 -15.1657 -38.6762 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1207# to #1384=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-9")) arc-list (#s(costed-arc plist nil from #1384# to #1385=#s(extended-node plist ((:name . #1386="l-0-3-9")) arc-list (#s(costed-arc plist nil from #1385# to #1384# cost 0) #s(costed-arc plist nil from #1385# to #1224# cost 0.764465) #s(costed-arc plist nil from #1385# to #1225# cost 1.61714) #s(costed-arc plist nil from #1385# to #1113# cost 1.46059) #s(costed-arc plist nil from #1385# to #1226# cost 1.50586) #s(costed-arc plist nil from #1385# to #1227# cost 1.49877) #s(costed-arc plist nil from #1385# to #1135# cost 1.38577) #s(costed-arc plist nil from #1385# to #1228# cost 1.16816) #s(costed-arc plist nil from #1385# to #944# cost 1.19184) #s(costed-arc plist nil from #1385# to #1034# cost 1.43743) #s(costed-arc plist nil from #1385# to #1194# cost 1.41959) #s(costed-arc plist nil from #1385# to #1229# cost 1.61336) #s(costed-arc plist nil from #1385# to #1172# cost 1.54334) #s(costed-arc plist nil from #1385# to #1168# cost 1.35045) #s(costed-arc plist nil from #1385# to #1023# cost 1.17765) #s(costed-arc plist nil from #1385# to #1006# cost 1.43683) #s(costed-arc plist nil from #1385# to #1018# cost 1.40616) #s(costed-arc plist nil from #1385# to #994# cost 1.40612) #s(costed-arc plist nil from #1385# to #1164# cost 1.50912) #s(costed-arc plist nil from #1385# to #1160# cost 1.38519) #s(costed-arc plist nil from #1385# to #1156# cost 1.3218) #s(costed-arc plist nil from #1385# to #971# cost 1.73987) #s(costed-arc plist nil from #1385# to #952# cost 1.43384) #s(costed-arc plist nil from #1385# to #948# cost 1.41352) #s(costed-arc plist nil from #1385# to #964# cost 1.30774) #s(costed-arc plist nil from #1385# to #956# cost 1.26325) #s(costed-arc plist nil from #1385# to #960# cost 1.22524)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(159.649 14.7473 47.9329 -17.3868 -100.42 -76.2905 -84.3383 168.654 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(157.169 9.94645 49.591 16.0637 -117.621 -138.956 -89.783 168.605 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998762 0.049743 0.0) (-0.049743 0.998762 0.0) (0.0 0.0 1.0)) pos #f(-209.995 -78.4239 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.889834 -0.456285 0.0) (0.456285 0.889834 0.0) (0.0 0.0 1.0)) pos #f(-179.123 -61.6586 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1384# to #1207# cost 0)) arm :arms islands (#1223# #1386#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(155.913 -32.347 18.6012 3.52276 -29.6552 -90.1386 -65.9912 194.347 -36.2023 45.9925 -73.8038 -77.8623 -15.1359 -38.51 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1207# to #1285# cost 0) #s(costed-arc plist nil from #1207# to #5# cost 1.31599) #s(costed-arc plist nil from #1207# to #942# cost 0.570082) #s(costed-arc plist nil from #1207# to #1130# cost 0.527153) #s(costed-arc plist nil from #1207# to #1127# cost 0.562687) #s(costed-arc plist nil from #1207# to #1124# cost 0.60713) #s(costed-arc plist nil from #1207# to #1121# cost 0.622783) #s(costed-arc plist nil from #1207# to #1111# cost 0.736188) #s(costed-arc plist nil from #1207# to #1108# cost 0.501608) #s(costed-arc plist nil from #1207# to #1105# cost 0.452484) #s(costed-arc plist nil from #1207# to #1102# cost 0.512938) #s(costed-arc plist nil from #1207# to #1098# cost 0.562155) #s(costed-arc plist nil from #1207# to #1095# cost 0.62871) #s(costed-arc plist nil from #1207# to #1092# cost 0.680021) #s(costed-arc plist nil from #1207# to #1028# cost 0.43222) #s(costed-arc plist nil from #1207# to #1000# cost 0.37675) #s(costed-arc plist nil from #1207# to #1012# cost 0.404463) #s(costed-arc plist nil from #1207# to #1088# cost 0.520886) #s(costed-arc plist nil from #1207# to #979# cost 0.594896) #s(costed-arc plist nil from #1207# to #1082# cost 0.682135) #s(costed-arc plist nil from #1207# to #988# cost 0.458675) #s(costed-arc plist nil from #1207# to #958# cost 0.349344) #s(costed-arc plist nil from #1207# to #962# cost 0.389332) #s(costed-arc plist nil from #1207# to #954# cost 0.484143) #s(costed-arc plist nil from #1207# to #950# cost 0.589211) #s(costed-arc plist nil from #1207# to #1197# cost 0.777458)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(205.16 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.8646 51.3533 -74.0859 -76.4695 -15.5366 -34.2404 188.044 0.0 0.0) robot-pose-optimized #f(203.089 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.6858 61.619 -77.0453 -84.1024 -20.0226 -47.0267 188.168 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.477834 -0.87845 0.0) (0.87845 0.477834 0.0) (0.0 0.0 1.0)) pos #f(-547.162 185.343 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1223# #1217#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(179.841 -18.5602 -1.65387 26.196 -64.3366 -92.4547 -49.8684 194.347 -36.4754 44.9921 -76.513 -75.1437 -15.8311 -40.5878 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1205# to #1215# cost 0) #s(costed-arc plist nil from #1205# to #1224# cost 0.918363) #s(costed-arc plist nil from #1205# to #1225# cost 1.62955) #s(costed-arc plist nil from #1205# to #1113# cost 1.33664) #s(costed-arc plist nil from #1205# to #1226# cost 1.3223) #s(costed-arc plist nil from #1205# to #1227# cost 1.25994) #s(costed-arc plist nil from #1205# to #1135# cost 1.17757) #s(costed-arc plist nil from #1205# to #1228# cost 1.22286) #s(costed-arc plist nil from #1205# to #944# cost 1.01087) #s(costed-arc plist nil from #1205# to #1034# cost 1.2952) #s(costed-arc plist nil from #1205# to #1194# cost 1.26938) #s(costed-arc plist nil from #1205# to #1229# cost 1.36881) #s(costed-arc plist nil from #1205# to #1172# cost 1.28971) #s(costed-arc plist nil from #1205# to #1168# cost 1.10851) #s(costed-arc plist nil from #1205# to #1023# cost 1.189) #s(costed-arc plist nil from #1205# to #1006# cost 1.27135) #s(costed-arc plist nil from #1205# to #1018# cost 1.22056) #s(costed-arc plist nil from #1205# to #994# cost 1.21044) #s(costed-arc plist nil from #1205# to #1164# cost 1.24888) #s(costed-arc plist nil from #1205# to #1160# cost 1.10371) #s(costed-arc plist nil from #1205# to #1156# cost 1.04389) #s(costed-arc plist nil from #1205# to #971# cost 1.50663) #s(costed-arc plist nil from #1205# to #952# cost 1.20463) #s(costed-arc plist nil from #1205# to #948# cost 1.16401) #s(costed-arc plist nil from #1205# to #964# cost 1.04261) #s(costed-arc plist nil from #1205# to #956# cost 0.969636) #s(costed-arc plist nil from #1205# to #960# cost 0.905379)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(201.186 19.7766 -3.87517 -15.6171 -121.193 -67.6514 -8.29494 178.507 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998916 0.046545 0.0) (-0.046545 0.998916 0.0) (0.0 0.0 1.0)) pos #f(-134.806 54.6449 0.0)) base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1204# to #1203# cost 0)) arm :arms islands (#1211# #1217#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.479 -19.1142 -3.19763 27.1721 -68.3971 -106.968 -51.4002 199.917 -34.1235 38.3107 -64.5549 -86.2785 -12.2937 -40.1404 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1203# to #1210# cost 0) #s(costed-arc plist nil from #1203# to #1220# cost 0) #s(costed-arc plist nil from #1203# to #1202# cost 0) #s(costed-arc plist nil from #1203# to #1241# cost 0) #s(costed-arc plist nil from #1203# to #1373# cost 0) #s(costed-arc plist nil from #1203# to #1378# cost 0) #s(costed-arc plist nil from #1203# to #1382# cost 0) #s(costed-arc plist nil from #1203# to #1257# cost 0) #s(costed-arc plist nil from #1203# to #1283# cost 0) #s(costed-arc plist nil from #1203# to #1330# cost 0) #s(costed-arc plist nil from #1203# to #5# cost 1.2979) #s(costed-arc plist nil from #1203# to #942# cost 0.617417) #s(costed-arc plist nil from #1203# to #1130# cost 0.554609) #s(costed-arc plist nil from #1203# to #1127# cost 0.557144) #s(costed-arc plist nil from #1203# to #1124# cost 0.591284) #s(costed-arc plist nil from #1203# to #1121# cost 0.612315) #s(costed-arc plist nil from #1203# to #1111# cost 0.718578) #s(costed-arc plist nil from #1203# to #1108# cost 0.558279) #s(costed-arc plist nil from #1203# to #1105# cost 0.487167) #s(costed-arc plist nil from #1203# to #1102# cost 0.50246) #s(costed-arc plist nil from #1203# to #1098# cost 0.515112) #s(costed-arc plist nil from #1203# to #1095# cost 0.581192) #s(costed-arc plist nil from #1203# to #1092# cost 0.648998) #s(costed-arc plist nil from #1203# to #1028# cost 0.493984) #s(costed-arc plist nil from #1203# to #1000# cost 0.407193) #s(costed-arc plist nil from #1203# to #1012# cost 0.380716) #s(costed-arc plist nil from #1203# to #1088# cost 0.474881) #s(costed-arc plist nil from #1203# to #979# cost 0.529577) #s(costed-arc plist nil from #1203# to #1082# cost 0.624881) #s(costed-arc plist nil from #1203# to #988# cost 0.48721) #s(costed-arc plist nil from #1203# to #958# cost 0.370997) #s(costed-arc plist nil from #1203# to #962# cost 0.350165) #s(costed-arc plist nil from #1203# to #954# cost 0.417156) #s(costed-arc plist nil from #1203# to #950# cost 0.517764) #s(costed-arc plist nil from #1203# to #1197# cost 0.699686)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(208.576 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.5115 47.2368 -63.1843 -89.5596 -12.7721 -31.4629 188.168 0.0 0.0) robot-pose-optimized #f(200.838 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.9273 48.2164 -73.6656 -104.83 -23.8585 -31.0598 188.188 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.472703 -0.881222 0.0) (0.881222 0.472703 0.0) (0.0 0.0 1.0)) pos #f(-534.721 203.983 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1211# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(160.477 -21.5246 59.8893 30.352 -84.5569 -103.04 -78.4701 199.917 -33.8565 38.0166 -63.7857 -86.9093 -12.1524 -39.2817 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1201# to #1370# cost 0) #s(costed-arc plist nil from #1201# to #1236# cost 0) #s(costed-arc plist nil from #1201# to #1246# cost 0) #s(costed-arc plist nil from #1201# to #1250# cost 0) #s(costed-arc plist nil from #1201# to #1200# cost 0) #s(costed-arc plist nil from #1201# to #1315# cost 0) #s(costed-arc plist nil from #1201# to #1325# cost 0) #s(costed-arc plist nil from #1201# to #1224# cost 0.787474) #s(costed-arc plist nil from #1201# to #1225# cost 1.72527) #s(costed-arc plist nil from #1201# to #1113# cost 1.59979) #s(costed-arc plist nil from #1201# to #1226# cost 1.64931) #s(costed-arc plist nil from #1201# to #1227# cost 1.69071) #s(costed-arc plist nil from #1201# to #1135# cost 1.53187) #s(costed-arc plist nil from #1201# to #1228# cost 1.19513) #s(costed-arc plist nil from #1201# to #944# cost 1.36437) #s(costed-arc plist nil from #1201# to #1034# cost 1.58289) #s(costed-arc plist nil from #1201# to #1194# cost 1.55729) #s(costed-arc plist nil from #1201# to #1229# cost 1.765) #s(costed-arc plist nil from #1201# to #1172# cost 1.69295) #s(costed-arc plist nil from #1201# to #1168# cost 1.50398) #s(costed-arc plist nil from #1201# to #1023# cost 1.21911) #s(costed-arc plist nil from #1201# to #1006# cost 1.58063) #s(costed-arc plist nil from #1201# to #1018# cost 1.55052) #s(costed-arc plist nil from #1201# to #994# cost 1.54029) #s(costed-arc plist nil from #1201# to #1164# cost 1.6582) #s(costed-arc plist nil from #1201# to #1160# cost 1.54029) #s(costed-arc plist nil from #1201# to #1156# cost 1.47712) #s(costed-arc plist nil from #1201# to #971# cost 1.85823) #s(costed-arc plist nil from #1201# to #952# cost 1.56784) #s(costed-arc plist nil from #1201# to #948# cost 1.54439) #s(costed-arc plist nil from #1201# to #964# cost 1.44823) #s(costed-arc plist nil from #1201# to #956# cost 1.40803) #s(costed-arc plist nil from #1201# to #960# cost 1.37183)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(149.883 17.7482 62.6753 -17.5893 -100.974 -92.9172 -94.1439 170.906 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(148.921 13.028 74.2725 14.6186 -112.323 -126.071 -61.3311 171.133 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999833 0.018298 0.0) (-0.018298 0.999833 0.0) (0.0 0.0 1.0)) pos #f(-347.764 -139.366 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.875036 -0.484058 0.0) (0.484058 0.875036 0.0) (0.0 0.0 1.0)) pos #f(-321.084 -122.953 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1200# to #1199# cost 0)) arm :arms islands (#1369# #1238#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(170.159 18.6847 49.8904 110.624 -87.6961 -58.1152 -92.0768 180.0 -28.0317 23.1334 -54.3349 -24.9537 -43.5044 -23.49 175.575 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1199# to #1368# cost 0) #s(costed-arc plist nil from #1199# to #5# cost 1.57739) #s(costed-arc plist nil from #1199# to #942# cost 0.515353) #s(costed-arc plist nil from #1199# to #1130# cost 0.530288) #s(costed-arc plist nil from #1199# to #1127# cost 0.615562) #s(costed-arc plist nil from #1199# to #1124# cost 0.648161) #s(costed-arc plist nil from #1199# to #1121# cost 0.601512) #s(costed-arc plist nil from #1199# to #1111# cost 0.585092) #s(costed-arc plist nil from #1199# to #1108# cost 0.696737) #s(costed-arc plist nil from #1199# to #1105# cost 0.711388) #s(costed-arc plist nil from #1199# to #1102# cost 0.74335) #s(costed-arc plist nil from #1199# to #1098# cost 0.787373) #s(costed-arc plist nil from #1199# to #1095# cost 0.793884) #s(costed-arc plist nil from #1199# to #1092# cost 0.740666) #s(costed-arc plist nil from #1199# to #1028# cost 0.76336) #s(costed-arc plist nil from #1199# to #1000# cost 0.779395) #s(costed-arc plist nil from #1199# to #1012# cost 0.799996) #s(costed-arc plist nil from #1199# to #1088# cost 0.820523) #s(costed-arc plist nil from #1199# to #979# cost 0.856814) #s(costed-arc plist nil from #1199# to #1082# cost 0.858428) #s(costed-arc plist nil from #1199# to #988# cost 0.850092) #s(costed-arc plist nil from #1199# to #958# cost 0.843722) #s(costed-arc plist nil from #1199# to #962# cost 0.872609) #s(costed-arc plist nil from #1199# to #954# cost 0.907401) #s(costed-arc plist nil from #1199# to #950# cost 0.911969) #s(costed-arc plist nil from #1199# to #1197# cost 1.00114)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(198.32 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.8142 25.1039 -54.1913 -23.2358 -35.1059 -19.7865 175.575 0.0 0.0) robot-pose-optimized #f(197.997 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -65.7473 32.9701 -51.888 -36.312 -35.6533 -42.5555 175.174 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.21619 -0.976351 0.0) (0.976351 0.21619 0.0) (0.0 0.0 1.0)) pos #f(-305.576 158.582 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.40973) #s(costed-arc plist nil from #3# to #1249# cost 1.42642) #s(costed-arc plist nil from #3# to #1245# cost 1.42921) #s(costed-arc plist nil from #3# to #1299# cost 1.4677) #s(costed-arc plist nil from #3# to #1387=#s(extended-node plist ((:name . "r-0-3-18")) arc-list (#s(costed-arc plist nil from #1387# to #5# cost 1.75397) #s(costed-arc plist nil from #1387# to #942# cost 0.755107) #s(costed-arc plist nil from #1387# to #1130# cost 0.82656) #s(costed-arc plist nil from #1387# to #1127# cost 0.80636) #s(costed-arc plist nil from #1387# to #1124# cost 0.773505) #s(costed-arc plist nil from #1387# to #1121# cost 0.63371) #s(costed-arc plist nil from #1387# to #1111# cost 0.466619) #s(costed-arc plist nil from #1387# to #1108# cost 0.984321) #s(costed-arc plist nil from #1387# to #1105# cost 0.967756) #s(costed-arc plist nil from #1387# to #1102# cost 0.988579) #s(costed-arc plist nil from #1387# to #1098# cost 0.957371) #s(costed-arc plist nil from #1387# to #1095# cost 0.903955) #s(costed-arc plist nil from #1387# to #1092# cost 0.755318) #s(costed-arc plist nil from #1387# to #1028# cost 1.05573) #s(costed-arc plist nil from #1387# to #1000# cost 1.03947) #s(costed-arc plist nil from #1387# to #1012# cost 1.02184) #s(costed-arc plist nil from #1387# to #1088# cost 1.02481) #s(costed-arc plist nil from #1387# to #979# cost 0.990321) #s(costed-arc plist nil from #1387# to #1082# cost 0.923715) #s(costed-arc plist nil from #1387# to #988# cost 1.13983) #s(costed-arc plist nil from #1387# to #958# cost 1.10694) #s(costed-arc plist nil from #1387# to #962# cost 1.09615) #s(costed-arc plist nil from #1387# to #954# cost 1.08505) #s(costed-arc plist nil from #1387# to #950# cost 1.05047) #s(costed-arc plist nil from #1387# to #1197# cost 1.0685)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(214.657 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.628 -13.2558 -26.5251 -22.2579 -5.35593 -16.9715 188.139 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.598707 -0.800968 0.0) (0.800968 0.598707 0.0) (0.0 0.0 1.0)) pos #f(-245.241 156.29 0.0)) base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.53182) #s(costed-arc plist nil from #3# to #1235# cost 1.37735) #s(costed-arc plist nil from #3# to #1388=#s(extended-node plist ((:name . "r-0-3-16")) arc-list (#s(costed-arc plist nil from #1388# to #5# cost 1.2867) #s(costed-arc plist nil from #1388# to #942# cost 0.36645) #s(costed-arc plist nil from #1388# to #1130# cost 0.324902) #s(costed-arc plist nil from #1388# to #1127# cost 0.359083) #s(costed-arc plist nil from #1388# to #1124# cost 0.407199) #s(costed-arc plist nil from #1388# to #1121# cost 0.407893) #s(costed-arc plist nil from #1388# to #1111# cost 0.489385) #s(costed-arc plist nil from #1388# to #1108# cost 0.342247) #s(costed-arc plist nil from #1388# to #1105# cost 0.307629) #s(costed-arc plist nil from #1388# to #1102# cost 0.416423) #s(costed-arc plist nil from #1388# to #1098# cost 0.451182) #s(costed-arc plist nil from #1388# to #1095# cost 0.493735) #s(costed-arc plist nil from #1388# to #1092# cost 0.505462) #s(costed-arc plist nil from #1388# to #1028# cost 0.36584) #s(costed-arc plist nil from #1388# to #1000# cost 0.349487) #s(costed-arc plist nil from #1388# to #1012# cost 0.383033) #s(costed-arc plist nil from #1388# to #1088# cost 0.47203) #s(costed-arc plist nil from #1388# to #979# cost 0.519582) #s(costed-arc plist nil from #1388# to #1082# cost 0.567485) #s(costed-arc plist nil from #1388# to #988# cost 0.470388) #s(costed-arc plist nil from #1388# to #958# cost 0.420375) #s(costed-arc plist nil from #1388# to #962# cost 0.454728) #s(costed-arc plist nil from #1388# to #954# cost 0.514109) #s(costed-arc plist nil from #1388# to #950# cost 0.55906) #s(costed-arc plist nil from #1388# to #1197# cost 0.700567)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(208.219 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -33.7216 38.9372 -60.907 -50.7162 -17.0315 -27.1201 188.525 0.0 0.0) robot-pose-optimized #f(208.054 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -66.2864 45.8839 -59.3547 -55.8551 -14.9995 -43.2747 188.691 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.820546 -0.57158 0.0) (0.57158 0.820546 0.0) (0.0 0.0 1.0)) pos #f(-404.82 293.102 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.424846 -0.905266 0.0) (0.905266 0.424846 0.0) (0.0 0.0 1.0)) pos #f(-412.289 251.338 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.31521) #s(costed-arc plist nil from #3# to #1389=#s(extended-node plist ((:name . "r-0-3-15")) arc-list (#s(costed-arc plist nil from #1389# to #5# cost 1.28711) #s(costed-arc plist nil from #1389# to #942# cost 0.440052) #s(costed-arc plist nil from #1389# to #1130# cost 0.353561) #s(costed-arc plist nil from #1389# to #1127# cost 0.392365) #s(costed-arc plist nil from #1389# to #1124# cost 0.426255) #s(costed-arc plist nil from #1389# to #1121# cost 0.409829) #s(costed-arc plist nil from #1389# to #1111# cost 0.491131) #s(costed-arc plist nil from #1389# to #1108# cost 0.442936) #s(costed-arc plist nil from #1389# to #1105# cost 0.393956) #s(costed-arc plist nil from #1389# to #1102# cost 0.407676) #s(costed-arc plist nil from #1389# to #1098# cost 0.454228) #s(costed-arc plist nil from #1389# to #1095# cost 0.486666) #s(costed-arc plist nil from #1389# to #1092# cost 0.488657) #s(costed-arc plist nil from #1389# to #1028# cost 0.454396) #s(costed-arc plist nil from #1389# to #1000# cost 0.418313) #s(costed-arc plist nil from #1389# to #1012# cost 0.417281) #s(costed-arc plist nil from #1389# to #1088# cost 0.448445) #s(costed-arc plist nil from #1389# to #979# cost 0.506058) #s(costed-arc plist nil from #1389# to #1082# cost 0.54807) #s(costed-arc plist nil from #1389# to #988# cost 0.520912) #s(costed-arc plist nil from #1389# to #958# cost 0.470562) #s(costed-arc plist nil from #1389# to #962# cost 0.483322) #s(costed-arc plist nil from #1389# to #954# cost 0.525412) #s(costed-arc plist nil from #1389# to #950# cost 0.545073) #s(costed-arc plist nil from #1389# to #1197# cost 0.678425)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(213.128 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.561 29.5774 -56.4207 -58.9185 -28.9226 -31.3168 175.579 0.0 0.0) robot-pose-optimized #f(212.807 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -67.9108 30.8088 -58.8194 -63.8667 -29.5077 -48.3022 175.528 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.816691 -0.577076 0.0) (0.577076 0.816691 0.0) (0.0 0.0 1.0)) pos #f(-396.237 280.015 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.418753 -0.9081 0.0) (0.9081 0.418753 0.0) (0.0 0.0 1.0)) pos #f(-405.747 241.488 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.29081) #s(costed-arc plist nil from #3# to #1390=#s(extended-node plist ((:name . "r-0-3-14")) arc-list (#s(costed-arc plist nil from #1390# to #5# cost 1.32306) #s(costed-arc plist nil from #1390# to #942# cost 0.490742) #s(costed-arc plist nil from #1390# to #1130# cost 0.406407) #s(costed-arc plist nil from #1390# to #1127# cost 0.343632) #s(costed-arc plist nil from #1390# to #1124# cost 0.355859) #s(costed-arc plist nil from #1390# to #1121# cost 0.36527) #s(costed-arc plist nil from #1390# to #1111# cost 0.449726) #s(costed-arc plist nil from #1390# to #1108# cost 0.504895) #s(costed-arc plist nil from #1390# to #1105# cost 0.436282) #s(costed-arc plist nil from #1390# to #1102# cost 0.4362) #s(costed-arc plist nil from #1390# to #1098# cost 0.370386) #s(costed-arc plist nil from #1390# to #1095# cost 0.387711) #s(costed-arc plist nil from #1390# to #1092# cost 0.421916) #s(costed-arc plist nil from #1390# to #1028# cost 0.516784) #s(costed-arc plist nil from #1390# to #1000# cost 0.45123) #s(costed-arc plist nil from #1390# to #1012# cost 0.411635) #s(costed-arc plist nil from #1390# to #1088# cost 0.439361) #s(costed-arc plist nil from #1390# to #979# cost 0.419497) #s(costed-arc plist nil from #1390# to #1082# cost 0.455983) #s(costed-arc plist nil from #1390# to #988# cost 0.563797) #s(costed-arc plist nil from #1390# to #958# cost 0.503589) #s(costed-arc plist nil from #1390# to #962# cost 0.472838) #s(costed-arc plist nil from #1390# to #954# cost 0.470126) #s(costed-arc plist nil from #1390# to #950# cost 0.475739) #s(costed-arc plist nil from #1390# to #1197# cost 0.575829)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(220.445 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -27.6608 29.4446 -36.2083 -65.5538 -12.5688 -22.3204 180.792 0.0 0.0) robot-pose-optimized #f(218.849 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.7323 32.3771 -40.0637 -72.5095 -11.15 -34.4425 181.134 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.808974 -0.587844 0.0) (0.587844 0.808974 0.0) (0.0 0.0 1.0)) pos #f(-403.172 289.735 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.406697 -0.913563 0.0) (0.913563 0.406697 0.0) (0.0 0.0 1.0)) pos #f(-409.806 247.831 0.0)) object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.32962) #s(costed-arc plist nil from #3# to #1391=#s(extended-node plist ((:name . "r-0-3-13")) arc-list (#s(costed-arc plist nil from #1391# to #5# cost 1.33684) #s(costed-arc plist nil from #1391# to #942# cost 0.525253) #s(costed-arc plist nil from #1391# to #1130# cost 0.404413) #s(costed-arc plist nil from #1391# to #1127# cost 0.340304) #s(costed-arc plist nil from #1391# to #1124# cost 0.31742) #s(costed-arc plist nil from #1391# to #1121# cost 0.339796) #s(costed-arc plist nil from #1391# to #1111# cost 0.41288) #s(costed-arc plist nil from #1391# to #1108# cost 0.555029) #s(costed-arc plist nil from #1391# to #1105# cost 0.487207) #s(costed-arc plist nil from #1391# to #1102# cost 0.432286) #s(costed-arc plist nil from #1391# to #1098# cost 0.36552) #s(costed-arc plist nil from #1391# to #1095# cost 0.323762) #s(costed-arc plist nil from #1391# to #1092# cost 0.360967) #s(costed-arc plist nil from #1391# to #1028# cost 0.57285) #s(costed-arc plist nil from #1391# to #1000# cost 0.507189) #s(costed-arc plist nil from #1391# to #1012# cost 0.448746) #s(costed-arc plist nil from #1391# to #1088# cost 0.422421) #s(costed-arc plist nil from #1391# to #979# cost 0.39038) #s(costed-arc plist nil from #1391# to #1082# cost 0.386314) #s(costed-arc plist nil from #1391# to #988# cost 0.586683) #s(costed-arc plist nil from #1391# to #958# cost 0.5569) #s(costed-arc plist nil from #1391# to #962# cost 0.513572) #s(costed-arc plist nil from #1391# to #954# cost 0.479288) #s(costed-arc plist nil from #1391# to #950# cost 0.451393) #s(costed-arc plist nil from #1391# to #1197# cost 0.554145)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(225.027 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -27.1324 13.4206 -37.6958 -65.8459 -12.073 -6.5041 180.313 0.0 0.0) robot-pose-optimized #f(223.119 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -61.4913 14.2641 -42.1874 -71.5334 -8.01956 -22.9902 180.907 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.8089 -0.587947 0.0) (0.587947 0.8089 0.0) (0.0 0.0 1.0)) pos #f(-401.121 286.177 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.406554 -0.913627 0.0) (0.913627 0.406554 0.0) (0.0 0.0 1.0)) pos #f(-408.3 245.029 0.0)) object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.3496) #s(costed-arc plist nil from #3# to #1392=#s(extended-node plist ((:name . "r-0-3-12")) arc-list (#s(costed-arc plist nil from #1392# to #5# cost 1.42776) #s(costed-arc plist nil from #1392# to #942# cost 0.575507) #s(costed-arc plist nil from #1392# to #1130# cost 0.510149) #s(costed-arc plist nil from #1392# to #1127# cost 0.477325) #s(costed-arc plist nil from #1392# to #1124# cost 0.439268) #s(costed-arc plist nil from #1392# to #1121# cost 0.292512) #s(costed-arc plist nil from #1392# to #1111# cost 0.294751) #s(costed-arc plist nil from #1392# to #1108# cost 0.659038) #s(costed-arc plist nil from #1392# to #1105# cost 0.620192) #s(costed-arc plist nil from #1392# to #1102# cost 0.621137) #s(costed-arc plist nil from #1392# to #1098# cost 0.585815) #s(costed-arc plist nil from #1392# to #1095# cost 0.532968) #s(costed-arc plist nil from #1392# to #1092# cost 0.376012) #s(costed-arc plist nil from #1392# to #1028# cost 0.697313) #s(costed-arc plist nil from #1392# to #1000# cost 0.662122) #s(costed-arc plist nil from #1392# to #1012# cost 0.633189) #s(costed-arc plist nil from #1392# to #1088# cost 0.627099) #s(costed-arc plist nil from #1392# to #979# cost 0.598323) #s(costed-arc plist nil from #1392# to #1082# cost 0.541811) #s(costed-arc plist nil from #1392# to #988# cost 0.765407) #s(costed-arc plist nil from #1392# to #958# cost 0.720239) #s(costed-arc plist nil from #1392# to #962# cost 0.700563) #s(costed-arc plist nil from #1392# to #954# cost 0.685923) #s(costed-arc plist nil from #1392# to #950# cost 0.649661) #s(costed-arc plist nil from #1392# to #1197# cost 0.697746)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(199.708 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.8726 -7.66171 -29.9579 -41.4468 -12.148 -23.4177 178.332 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.782095 -0.623159 0.0) (0.623159 0.782095 0.0) (0.0 0.0 1.0)) pos #f(-387.208 270.807 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.41537) #s(costed-arc plist nil from #3# to #1296# cost 1.33105) #s(costed-arc plist nil from #3# to #1280# cost 1.30596) #s(costed-arc plist nil from #3# to #1291# cost 1.26804) #s(costed-arc plist nil from #3# to #1393=#s(extended-node plist ((:name . "r-0-3-8")) arc-list (#s(costed-arc plist nil from #1393# to #5# cost 1.24279) #s(costed-arc plist nil from #1393# to #942# cost 0.551048) #s(costed-arc plist nil from #1393# to #1130# cost 0.45816) #s(costed-arc plist nil from #1393# to #1127# cost 0.463874) #s(costed-arc plist nil from #1393# to #1124# cost 0.483961) #s(costed-arc plist nil from #1393# to #1121# cost 0.479157) #s(costed-arc plist nil from #1393# to #1111# cost 0.550729) #s(costed-arc plist nil from #1393# to #1108# cost 0.533311) #s(costed-arc plist nil from #1393# to #1105# cost 0.456424) #s(costed-arc plist nil from #1393# to #1102# cost 0.410481) #s(costed-arc plist nil from #1393# to #1098# cost 0.430065) #s(costed-arc plist nil from #1393# to #1095# cost 0.469243) #s(costed-arc plist nil from #1393# to #1092# cost 0.509077) #s(costed-arc plist nil from #1393# to #1028# cost 0.510925) #s(costed-arc plist nil from #1393# to #1000# cost 0.433128) #s(costed-arc plist nil from #1393# to #1012# cost 0.38248) #s(costed-arc plist nil from #1393# to #1088# cost 0.37832) #s(costed-arc plist nil from #1393# to #979# cost 0.437212) #s(costed-arc plist nil from #1393# to #1082# cost 0.505111) #s(costed-arc plist nil from #1393# to #988# cost 0.516689) #s(costed-arc plist nil from #1393# to #958# cost 0.446304) #s(costed-arc plist nil from #1393# to #962# cost 0.413458) #s(costed-arc plist nil from #1393# to #954# cost 0.431227) #s(costed-arc plist nil from #1393# to #950# cost 0.44964) #s(costed-arc plist nil from #1393# to #1197# cost 0.598805)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(214.437 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.9405 27.4114 -53.8126 -86.9331 -25.8887 -32.863 175.831 0.0 0.0) robot-pose-optimized #f(214.221 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -71.0269 28.3075 -57.0701 -101.002 -34.2861 -33.283 175.317 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.834731 -0.550658 0.0) (0.550658 0.834731 0.0) (0.0 0.0 1.0)) pos #f(-416.978 268.642 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.44757 -0.894249 0.0) (0.894249 0.44757 0.0) (0.0 0.0 1.0)) pos #f(-415.481 248.51 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.25016) #s(costed-arc plist nil from #3# to #1394=#s(extended-node plist ((:name . "r-0-3-7")) arc-list (#s(costed-arc plist nil from #1394# to #5# cost 1.27553) #s(costed-arc plist nil from #1394# to #942# cost 0.605729) #s(costed-arc plist nil from #1394# to #1130# cost 0.495197) #s(costed-arc plist nil from #1394# to #1127# cost 0.438386) #s(costed-arc plist nil from #1394# to #1124# cost 0.439772) #s(costed-arc plist nil from #1394# to #1121# cost 0.454887) #s(costed-arc plist nil from #1394# to #1111# cost 0.530952) #s(costed-arc plist nil from #1394# to #1108# cost 0.591424) #s(costed-arc plist nil from #1394# to #1105# cost 0.507566) #s(costed-arc plist nil from #1394# to #1102# cost 0.447166) #s(costed-arc plist nil from #1394# to #1098# cost 0.361732) #s(costed-arc plist nil from #1394# to #1095# cost 0.38177) #s(costed-arc plist nil from #1394# to #1092# cost 0.459426) #s(costed-arc plist nil from #1394# to #1028# cost 0.579046) #s(costed-arc plist nil from #1394# to #1000# cost 0.489547) #s(costed-arc plist nil from #1394# to #1012# cost 0.410739) #s(costed-arc plist nil from #1394# to #1088# cost 0.381305) #s(costed-arc plist nil from #1394# to #979# cost 0.331804) #s(costed-arc plist nil from #1394# to #1082# cost 0.402048) #s(costed-arc plist nil from #1394# to #988# cost 0.569018) #s(costed-arc plist nil from #1394# to #958# cost 0.513217) #s(costed-arc plist nil from #1394# to #962# cost 0.441367) #s(costed-arc plist nil from #1394# to #954# cost 0.386987) #s(costed-arc plist nil from #1394# to #950# cost 0.362312) #s(costed-arc plist nil from #1394# to #1197# cost 0.462458)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(220.931 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.4045 26.2068 -32.4347 -92.8369 -11.9439 -18.0298 180.374 0.0 0.0) robot-pose-optimized #f(222.53 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.2712 25.9161 -37.9047 -103.739 -17.0728 -15.6578 180.988 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.822104 -0.569338 0.0) (0.569338 0.822104 0.0) (0.0 0.0 1.0)) pos #f(-412.799 302.602 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.437616 -0.899162 0.0) (0.899162 0.437616 0.0) (0.0 0.0 1.0)) pos #f(-422.19 267.563 0.0)) object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.3101) #s(costed-arc plist nil from #3# to #1395=#s(extended-node plist ((:name . "r-0-3-6")) arc-list (#s(costed-arc plist nil from #1395# to #5# cost 1.30507) #s(costed-arc plist nil from #1395# to #942# cost 0.630341) #s(costed-arc plist nil from #1395# to #1130# cost 0.499651) #s(costed-arc plist nil from #1395# to #1127# cost 0.430623) #s(costed-arc plist nil from #1395# to #1124# cost 0.404252) #s(costed-arc plist nil from #1395# to #1121# cost 0.405845) #s(costed-arc plist nil from #1395# to #1111# cost 0.470022) #s(costed-arc plist nil from #1395# to #1108# cost 0.632663) #s(costed-arc plist nil from #1395# to #1105# cost 0.554806) #s(costed-arc plist nil from #1395# to #1102# cost 0.482832) #s(costed-arc plist nil from #1395# to #1098# cost 0.390034) #s(costed-arc plist nil from #1395# to #1095# cost 0.342226) #s(costed-arc plist nil from #1395# to #1092# cost 0.385347) #s(costed-arc plist nil from #1395# to #1028# cost 0.632795) #s(costed-arc plist nil from #1395# to #1000# cost 0.551391) #s(costed-arc plist nil from #1395# to #1012# cost 0.472818) #s(costed-arc plist nil from #1395# to #1088# cost 0.418811) #s(costed-arc plist nil from #1395# to #979# cost 0.339908) #s(costed-arc plist nil from #1395# to #1082# cost 0.317625) #s(costed-arc plist nil from #1395# to #988# cost 0.624356) #s(costed-arc plist nil from #1395# to #958# cost 0.585813) #s(costed-arc plist nil from #1395# to #962# cost 0.517781) #s(costed-arc plist nil from #1395# to #954# cost 0.448462) #s(costed-arc plist nil from #1395# to #950# cost 0.383187) #s(costed-arc plist nil from #1395# to #1197# cost 0.449033)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(225.47 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.5866 7.23183 -27.2865 -83.8653 -9.89726 -6.68096 181.293 0.0 0.0) robot-pose-optimized #f(224.315 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.8502 -13.8712 -52.0584 -87.0812 -8.03411 -13.0904 181.82 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.815846 -0.57827 0.0) (0.57827 0.815846 0.0) (0.0 0.0 1.0)) pos #f(-417.831 306.385 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.471659 -0.881781 0.0) (0.881781 0.471659 0.0) (0.0 0.0 1.0)) pos #f(-424.749 274.69 0.0)) object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.35295) #s(costed-arc plist nil from #3# to #1214# cost 1.29325) #s(costed-arc plist nil from #3# to #1207# cost 1.29809) #s(costed-arc plist nil from #3# to #1203# cost 1.28747) #s(costed-arc plist nil from #3# to #1274# cost 1.28798) #s(costed-arc plist nil from #3# to #1270# cost 1.29451) #s(costed-arc plist nil from #3# to #1396=#s(extended-node plist ((:name . "r-0-3-0")) arc-list (#s(costed-arc plist nil from #1396# to #5# cost 1.28996) #s(costed-arc plist nil from #1396# to #942# cost 0.752328) #s(costed-arc plist nil from #1396# to #1130# cost 0.612912) #s(costed-arc plist nil from #1396# to #1127# cost 0.541868) #s(costed-arc plist nil from #1396# to #1124# cost 0.52458) #s(costed-arc plist nil from #1396# to #1121# cost 0.532051) #s(costed-arc plist nil from #1396# to #1111# cost 0.605683) #s(costed-arc plist nil from #1396# to #1108# cost 0.722983) #s(costed-arc plist nil from #1396# to #1105# cost 0.64) #s(costed-arc plist nil from #1396# to #1102# cost 0.560762) #s(costed-arc plist nil from #1396# to #1098# cost 0.462968) #s(costed-arc plist nil from #1396# to #1095# cost 0.449048) #s(costed-arc plist nil from #1396# to #1092# cost 0.506163) #s(costed-arc plist nil from #1396# to #1028# cost 0.705276) #s(costed-arc plist nil from #1396# to #1000# cost 0.614744) #s(costed-arc plist nil from #1396# to #1012# cost 0.527134) #s(costed-arc plist nil from #1396# to #1088# cost 0.461135) #s(costed-arc plist nil from #1396# to #979# cost 0.37727) #s(costed-arc plist nil from #1396# to #1082# cost 0.401562) #s(costed-arc plist nil from #1396# to #988# cost 0.673119) #s(costed-arc plist nil from #1396# to #958# cost 0.636704) #s(costed-arc plist nil from #1396# to #962# cost 0.552049) #s(costed-arc plist nil from #1396# to #954# cost 0.459762) #s(costed-arc plist nil from #1396# to #950# cost 0.371) #s(costed-arc plist nil from #1396# to #1197# cost 0.355234)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(223.984 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.342 13.2875 -16.7529 -108.727 -9.06721 -7.88218 180.0 0.0 0.0) robot-pose-optimized #f(225.456 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.5902 -13.5239 -42.8224 -100.35 -13.9577 -20.8079 179.8 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.813705 -0.581277 0.0) (0.581277 0.813705 0.0) (0.0 0.0 1.0)) pos #f(-423.857 336.891 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.694302 -0.719684 0.0) (0.719684 0.694302 0.0) (0.0 0.0 1.0)) pos #f(-432.151 315.3 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.37247)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 2 door-angle -60 solved t robot-pose #f(202.07 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 15.3293 28.3722 -50.4972 -98.5886 -96.0502 -40.6622 251.712 0.0 0.0) robot-pose-optimized #f(202.531 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 32.3301 40.9591 24.7156 -105.594 -123.25 -91.1654 236.926 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.978584 -0.205847 0.0) (0.205847 0.978584 0.0) (0.0 0.0 1.0)) pos #f(-60.7175 -137.767 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.744582 -0.667531 0.0) (0.667531 0.744582 0.0) (0.0 0.0 1.0)) pos #f(-78.3269 -172.128 0.0)) object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.763835) #s(costed-arc plist nil from #2# to #1397=#s(extended-node plist ((:name . "r-0-2-fk")) arc-list (#s(costed-arc plist nil from #1397# to #4# cost 1.71455) #s(costed-arc plist nil from #1397# to #1198# cost 2.38824) #s(costed-arc plist nil from #1397# to #1199# cost 2.25074) #s(costed-arc plist nil from #1397# to #1249# cost 2.24579) #s(costed-arc plist nil from #1397# to #1245# cost 2.24214) #s(costed-arc plist nil from #1397# to #1299# cost 2.32755) #s(costed-arc plist nil from #1397# to #1387# cost 2.46664) #s(costed-arc plist nil from #1397# to #1235# cost 2.07143) #s(costed-arc plist nil from #1397# to #1388# cost 2.01791) #s(costed-arc plist nil from #1397# to #1389# cost 1.99565) #s(costed-arc plist nil from #1397# to #1390# cost 2.03649) #s(costed-arc plist nil from #1397# to #1391# cost 2.07211) #s(costed-arc plist nil from #1397# to #1392# cost 2.13758) #s(costed-arc plist nil from #1397# to #1296# cost 2.031) #s(costed-arc plist nil from #1397# to #1280# cost 2.02256) #s(costed-arc plist nil from #1397# to #1291# cost 2.00554) #s(costed-arc plist nil from #1397# to #1393# cost 1.9694) #s(costed-arc plist nil from #1397# to #1394# cost 2.00023) #s(costed-arc plist nil from #1397# to #1395# cost 2.04045) #s(costed-arc plist nil from #1397# to #1214# cost 2.06677) #s(costed-arc plist nil from #1397# to #1207# cost 2.05758) #s(costed-arc plist nil from #1397# to #1203# cost 2.04248) #s(costed-arc plist nil from #1397# to #1274# cost 2.02517) #s(costed-arc plist nil from #1397# to #1270# cost 1.99778) #s(costed-arc plist nil from #1397# to #1396# cost 2.00317)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 2 door-angle -60 solved t robot-pose #f(273.778 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 11.3065 59.0183 2.55636 -116.711 -260.318 -81.6799 301.98 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.983065 -0.183255 0.0) (0.183255 0.983065 0.0) (0.0 0.0 1.0)) pos #f(-404.497 560.044 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.22378) #s(costed-arc plist nil from #2# to #1398=#s(extended-node plist ((:name . "r-0-2-23")) arc-list (#s(costed-arc plist nil from #1398# to #4# cost 1.5478) #s(costed-arc plist nil from #1398# to #1198# cost 0.987678) #s(costed-arc plist nil from #1398# to #1199# cost 1.00505) #s(costed-arc plist nil from #1398# to #1249# cost 1.16919) #s(costed-arc plist nil from #1398# to #1245# cost 1.20101) #s(costed-arc plist nil from #1398# to #1299# cost 1.13985) #s(costed-arc plist nil from #1398# to #1387# cost 1.12965) #s(costed-arc plist nil from #1398# to #1235# cost 1.32405) #s(costed-arc plist nil from #1398# to #1388# cost 1.35954) #s(costed-arc plist nil from #1398# to #1389# cost 1.31485) #s(costed-arc plist nil from #1398# to #1390# cost 1.4044) #s(costed-arc plist nil from #1398# to #1391# cost 1.40278) #s(costed-arc plist nil from #1398# to #1392# cost 1.34796) #s(costed-arc plist nil from #1398# to #1296# cost 1.40756) #s(costed-arc plist nil from #1398# to #1280# cost 1.44832) #s(costed-arc plist nil from #1398# to #1291# cost 1.45233) #s(costed-arc plist nil from #1398# to #1393# cost 1.43427) #s(costed-arc plist nil from #1398# to #1394# cost 1.51997) #s(costed-arc plist nil from #1398# to #1395# cost 1.50685) #s(costed-arc plist nil from #1398# to #1214# cost 1.44075) #s(costed-arc plist nil from #1398# to #1207# cost 1.50261) #s(costed-arc plist nil from #1398# to #1203# cost 1.54012) #s(costed-arc plist nil from #1398# to #1274# cost 1.56898) #s(costed-arc plist nil from #1398# to #1270# cost 1.56207) #s(costed-arc plist nil from #1398# to #1396# cost 1.63686)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(115.09 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -61.1495 23.1972 -52.5411 -9.20108 -97.9852 -10.6563 185.999 0.0 0.0) robot-pose-optimized #f(113.558 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -83.0573 24.225 -35.1441 -12.8552 -95.4503 -32.0435 195.333 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.014503 -0.999895 0.0) (0.999895 0.014503 0.0) (0.0 0.0 1.0)) pos #f(-349.574 38.5043 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.279821 -0.960052 0.0) (0.960052 -0.279821 0.0) (0.0 0.0 1.0)) pos #f(-347.042 20.884 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.79573) #s(costed-arc plist nil from #2# to #1399=#s(extended-node plist ((:name . "r-0-2-22")) arc-list (#s(costed-arc plist nil from #1399# to #4# cost 1.31857) #s(costed-arc plist nil from #1399# to #1198# cost 0.804546) #s(costed-arc plist nil from #1399# to #1199# cost 0.795179) #s(costed-arc plist nil from #1399# to #1249# cost 0.945289) #s(costed-arc plist nil from #1399# to #1245# cost 0.969629) #s(costed-arc plist nil from #1399# to #1299# cost 0.919275) #s(costed-arc plist nil from #1399# to #1387# cost 0.932716) #s(costed-arc plist nil from #1399# to #1235# cost 1.10134) #s(costed-arc plist nil from #1399# to #1388# cost 1.13187) #s(costed-arc plist nil from #1399# to #1389# cost 1.07858) #s(costed-arc plist nil from #1399# to #1390# cost 1.1642) #s(costed-arc plist nil from #1399# to #1391# cost 1.15841) #s(costed-arc plist nil from #1399# to #1392# cost 1.09913) #s(costed-arc plist nil from #1399# to #1296# cost 1.18332) #s(costed-arc plist nil from #1399# to #1280# cost 1.21878) #s(costed-arc plist nil from #1399# to #1291# cost 1.21671) #s(costed-arc plist nil from #1399# to #1393# cost 1.19221) #s(costed-arc plist nil from #1399# to #1394# cost 1.27499) #s(costed-arc plist nil from #1399# to #1395# cost 1.2566) #s(costed-arc plist nil from #1399# to #1214# cost 1.22041) #s(costed-arc plist nil from #1399# to #1207# cost 1.27977) #s(costed-arc plist nil from #1399# to #1203# cost 1.30995) #s(costed-arc plist nil from #1399# to #1274# cost 1.32994) #s(costed-arc plist nil from #1399# to #1270# cost 1.31289) #s(costed-arc plist nil from #1399# to #1396# cost 1.38448)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(149.117 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -53.3553 16.6283 -48.9663 -14.7274 -97.2428 -11.9275 184.057 0.0 0.0) robot-pose-optimized #f(145.658 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -78.5449 22.3712 -42.34 -31.9906 -93.7271 -32.5929 193.351 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.239791 -0.970825 0.0) (0.970825 0.239791 0.0) (0.0 0.0 1.0)) pos #f(-389.389 106.831 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.052284 -0.998632 0.0) (0.998632 -0.052284 0.0) (0.0 0.0 1.0)) pos #f(-370.997 90.9235 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.64792) #s(costed-arc plist nil from #2# to #1400=#s(extended-node plist ((:name . "r-0-2-21")) arc-list (#s(costed-arc plist nil from #1400# to #4# cost 1.2807) #s(costed-arc plist nil from #1400# to #1198# cost 0.565497) #s(costed-arc plist nil from #1400# to #1199# cost 0.58505) #s(costed-arc plist nil from #1400# to #1249# cost 0.722175) #s(costed-arc plist nil from #1400# to #1245# cost 0.747484) #s(costed-arc plist nil from #1400# to #1299# cost 0.659823) #s(costed-arc plist nil from #1400# to #1387# cost 0.621882) #s(costed-arc plist nil from #1400# to #1235# cost 0.966146) #s(costed-arc plist nil from #1400# to #1388# cost 1.00408) #s(costed-arc plist nil from #1400# to #1389# cost 0.952987) #s(costed-arc plist nil from #1400# to #1390# cost 0.99794) #s(costed-arc plist nil from #1400# to #1391# cost 0.979524) #s(costed-arc plist nil from #1400# to #1392# cost 0.888035) #s(costed-arc plist nil from #1400# to #1296# cost 1.09344) #s(costed-arc plist nil from #1400# to #1280# cost 1.12085) #s(costed-arc plist nil from #1400# to #1291# cost 1.11389) #s(costed-arc plist nil from #1400# to #1393# cost 1.08004) #s(costed-arc plist nil from #1400# to #1394# cost 1.11815) #s(costed-arc plist nil from #1400# to #1395# cost 1.0773) #s(costed-arc plist nil from #1400# to #1214# cost 1.14535) #s(costed-arc plist nil from #1400# to #1207# cost 1.19563) #s(costed-arc plist nil from #1400# to #1203# cost 1.21367) #s(costed-arc plist nil from #1400# to #1274# cost 1.21762) #s(costed-arc plist nil from #1400# to #1270# cost 1.1792) #s(costed-arc plist nil from #1400# to #1396# cost 1.20562)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(183.444 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.4549 10.074 -32.5729 -12.7034 -78.1384 -6.41462 181.117 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.493017 -0.87002 0.0) (0.87002 0.493017 0.0) (0.0 0.0 1.0)) pos #f(-261.09 -19.3852 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.24361) #s(costed-arc plist nil from #2# to #1401=#s(extended-node plist ((:name . "r-0-2-20")) arc-list (#s(costed-arc plist nil from #1401# to #4# cost 1.30957) #s(costed-arc plist nil from #1401# to #1198# cost 0.684008) #s(costed-arc plist nil from #1401# to #1199# cost 0.69381) #s(costed-arc plist nil from #1401# to #1249# cost 0.845423) #s(costed-arc plist nil from #1401# to #1245# cost 0.867062) #s(costed-arc plist nil from #1401# to #1299# cost 0.772951) #s(costed-arc plist nil from #1401# to #1387# cost 0.734873) #s(costed-arc plist nil from #1401# to #1235# cost 1.07088) #s(costed-arc plist nil from #1401# to #1388# cost 1.10137) #s(costed-arc plist nil from #1401# to #1389# cost 1.03884) #s(costed-arc plist nil from #1401# to #1390# cost 1.10337) #s(costed-arc plist nil from #1401# to #1391# cost 1.08374) #s(costed-arc plist nil from #1401# to #1392# cost 0.990435) #s(costed-arc plist nil from #1401# to #1296# cost 1.18221) #s(costed-arc plist nil from #1401# to #1280# cost 1.21092) #s(costed-arc plist nil from #1401# to #1291# cost 1.20005) #s(costed-arc plist nil from #1401# to #1393# cost 1.1569) #s(costed-arc plist nil from #1401# to #1394# cost 1.21419) #s(costed-arc plist nil from #1401# to #1395# cost 1.17614) #s(costed-arc plist nil from #1401# to #1214# cost 1.22749) #s(costed-arc plist nil from #1401# to #1207# cost 1.2758) #s(costed-arc plist nil from #1401# to #1203# cost 1.29619) #s(costed-arc plist nil from #1401# to #1274# cost 1.30325) #s(costed-arc plist nil from #1401# to #1270# cost 1.26528) #s(costed-arc plist nil from #1401# to #1396# cost 1.30233)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(228.173 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -29.8198 1.85123 -39.1332 -15.2851 -90.6688 -11.6286 181.253 0.0 0.0) robot-pose-optimized #f(226.587 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.9562 8.02347 -35.7809 -35.6126 -97.8381 -30.424 184.412 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.425827 -0.904805 0.0) (0.904805 0.425827 0.0) (0.0 0.0 1.0)) pos #f(-269.951 -27.4838 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.083625 -0.996497 0.0) (0.996497 -0.083625 0.0) (0.0 0.0 1.0)) pos #f(-309.87 -41.8531 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.31051) #s(costed-arc plist nil from #2# to #1402=#s(extended-node plist ((:name . "r-0-2-19")) arc-list (#s(costed-arc plist nil from #1402# to #4# cost 1.38387) #s(costed-arc plist nil from #1402# to #1198# cost 0.851206) #s(costed-arc plist nil from #1402# to #1199# cost 0.854097) #s(costed-arc plist nil from #1402# to #1249# cost 0.990667) #s(costed-arc plist nil from #1402# to #1245# cost 0.997464) #s(costed-arc plist nil from #1402# to #1299# cost 0.913801) #s(costed-arc plist nil from #1402# to #1387# cost 0.893229) #s(costed-arc plist nil from #1402# to #1235# cost 1.19397) #s(costed-arc plist nil from #1402# to #1388# cost 1.22377) #s(costed-arc plist nil from #1402# to #1389# cost 1.16909) #s(costed-arc plist nil from #1402# to #1390# cost 1.23839) #s(costed-arc plist nil from #1402# to #1391# cost 1.20632) #s(costed-arc plist nil from #1402# to #1392# cost 1.10825) #s(costed-arc plist nil from #1402# to #1296# cost 1.29173) #s(costed-arc plist nil from #1402# to #1280# cost 1.32326) #s(costed-arc plist nil from #1402# to #1291# cost 1.31263) #s(costed-arc plist nil from #1402# to #1393# cost 1.28147) #s(costed-arc plist nil from #1402# to #1394# cost 1.3484) #s(costed-arc plist nil from #1402# to #1395# cost 1.3003) #s(costed-arc plist nil from #1402# to #1214# cost 1.34019) #s(costed-arc plist nil from #1402# to #1207# cost 1.38396) #s(costed-arc plist nil from #1402# to #1203# cost 1.40823) #s(costed-arc plist nil from #1402# to #1274# cost 1.41846) #s(costed-arc plist nil from #1402# to #1270# cost 1.38993) #s(costed-arc plist nil from #1402# to #1396# cost 1.44053)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(224.949 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -50.4854 -11.575 -46.4184 -9.63102 -87.7313 -7.65498 187.085 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.201778 -0.979431 0.0) (0.979431 0.201778 0.0) (0.0 0.0 1.0)) pos #f(-371.472 58.5119 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.6416) #s(costed-arc plist nil from #2# to #1403=#s(extended-node plist ((:name . "r-0-2-18")) arc-list (#s(costed-arc plist nil from #1403# to #4# cost 1.75853) #s(costed-arc plist nil from #1403# to #1198# cost 1.28624) #s(costed-arc plist nil from #1403# to #1199# cost 1.30891) #s(costed-arc plist nil from #1403# to #1249# cost 1.43239) #s(costed-arc plist nil from #1403# to #1245# cost 1.45021) #s(costed-arc plist nil from #1403# to #1299# cost 1.33866) #s(costed-arc plist nil from #1403# to #1387# cost 1.27009) #s(costed-arc plist nil from #1403# to #1235# cost 1.67389) #s(costed-arc plist nil from #1403# to #1388# cost 1.69322) #s(costed-arc plist nil from #1403# to #1389# cost 1.62587) #s(costed-arc plist nil from #1403# to #1390# cost 1.67437) #s(costed-arc plist nil from #1403# to #1391# cost 1.64709) #s(costed-arc plist nil from #1403# to #1392# cost 1.54379) #s(costed-arc plist nil from #1403# to #1296# cost 1.77852) #s(costed-arc plist nil from #1403# to #1280# cost 1.79447) #s(costed-arc plist nil from #1403# to #1291# cost 1.77344) #s(costed-arc plist nil from #1403# to #1393# cost 1.71955) #s(costed-arc plist nil from #1403# to #1394# cost 1.76589) #s(costed-arc plist nil from #1403# to #1395# cost 1.71789) #s(costed-arc plist nil from #1403# to #1214# cost 1.81922) #s(costed-arc plist nil from #1403# to #1207# cost 1.8533) #s(costed-arc plist nil from #1403# to #1203# cost 1.86355) #s(costed-arc plist nil from #1403# to #1274# cost 1.86028) #s(costed-arc plist nil from #1403# to #1270# cost 1.81231) #s(costed-arc plist nil from #1403# to #1396# cost 1.83405)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(250.196 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.5611 -17.9623 -17.0071 -13.3636 -111.251 -10.6205 190.848 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.07683 -0.997044 0.0) (0.997044 -0.07683 0.0) (0.0 0.0 1.0)) pos #f(-242.171 -103.931 0.0)) base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.77476) #s(costed-arc plist nil from #2# to #1404=#s(extended-node plist ((:name . "r-0-2-17")) arc-list (#s(costed-arc plist nil from #1404# to #4# cost 0.882154) #s(costed-arc plist nil from #1404# to #1198# cost 0.631634) #s(costed-arc plist nil from #1404# to #1199# cost 0.479172) #s(costed-arc plist nil from #1404# to #1249# cost 0.54778) #s(costed-arc plist nil from #1404# to #1245# cost 0.561808) #s(costed-arc plist nil from #1404# to #1299# cost 0.613108) #s(costed-arc plist nil from #1404# to #1387# cost 0.784203) #s(costed-arc plist nil from #1404# to #1235# cost 0.603889) #s(costed-arc plist nil from #1404# to #1388# cost 0.630545) #s(costed-arc plist nil from #1404# to #1389# cost 0.573006) #s(costed-arc plist nil from #1404# to #1390# cost 0.647978) #s(costed-arc plist nil from #1404# to #1391# cost 0.672889) #s(costed-arc plist nil from #1404# to #1392# cost 0.625305) #s(costed-arc plist nil from #1404# to #1296# cost 0.689765) #s(costed-arc plist nil from #1404# to #1280# cost 0.716442) #s(costed-arc plist nil from #1404# to #1291# cost 0.715162) #s(costed-arc plist nil from #1404# to #1393# cost 0.682339) #s(costed-arc plist nil from #1404# to #1394# cost 0.755206) #s(costed-arc plist nil from #1404# to #1395# cost 0.762037) #s(costed-arc plist nil from #1404# to #1214# cost 0.723371) #s(costed-arc plist nil from #1404# to #1207# cost 0.784057) #s(costed-arc plist nil from #1404# to #1203# cost 0.806021) #s(costed-arc plist nil from #1404# to #1274# cost 0.821498) #s(costed-arc plist nil from #1404# to #1270# cost 0.796615) #s(costed-arc plist nil from #1404# to #1396# cost 0.862484)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(179.588 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.6449 36.6601 -40.3363 -28.4717 -93.877 -27.2694 183.763 0.0 0.0) robot-pose-optimized #f(180.878 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -41.2806 41.1567 -35.3389 -36.32 -99.7273 -33.9723 185.484 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.764139 -0.645051 0.0) (0.645051 0.764139 0.0) (0.0 0.0 1.0)) pos #f(-357.869 116.812 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.52142 -0.8533 0.0) (0.8533 0.52142 0.0) (0.0 0.0 1.0)) pos #f(-371.471 86.4185 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.06446) #s(costed-arc plist nil from #2# to #1405=#s(extended-node plist ((:name . "r-0-2-16")) arc-list (#s(costed-arc plist nil from #1405# to #4# cost 0.8495) #s(costed-arc plist nil from #1405# to #1198# cost 0.663481) #s(costed-arc plist nil from #1405# to #1199# cost 0.516562) #s(costed-arc plist nil from #1405# to #1249# cost 0.582645) #s(costed-arc plist nil from #1405# to #1245# cost 0.598888) #s(costed-arc plist nil from #1405# to #1299# cost 0.640709) #s(costed-arc plist nil from #1405# to #1387# cost 0.795641) #s(costed-arc plist nil from #1405# to #1235# cost 0.591082) #s(costed-arc plist nil from #1405# to #1388# cost 0.599763) #s(costed-arc plist nil from #1405# to #1389# cost 0.523608) #s(costed-arc plist nil from #1405# to #1390# cost 0.601197) #s(costed-arc plist nil from #1405# to #1391# cost 0.633184) #s(costed-arc plist nil from #1405# to #1392# cost 0.609867) #s(costed-arc plist nil from #1405# to #1296# cost 0.662671) #s(costed-arc plist nil from #1405# to #1280# cost 0.674985) #s(costed-arc plist nil from #1405# to #1291# cost 0.663472) #s(costed-arc plist nil from #1405# to #1393# cost 0.613405) #s(costed-arc plist nil from #1405# to #1394# cost 0.692819) #s(costed-arc plist nil from #1405# to #1395# cost 0.711151) #s(costed-arc plist nil from #1405# to #1214# cost 0.680817) #s(costed-arc plist nil from #1405# to #1207# cost 0.732467) #s(costed-arc plist nil from #1405# to #1203# cost 0.745816) #s(costed-arc plist nil from #1405# to #1274# cost 0.757573) #s(costed-arc plist nil from #1405# to #1270# cost 0.727883) #s(costed-arc plist nil from #1405# to #1396# cost 0.799642)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(203.214 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.3903 34.5949 -39.9346 -45.1599 -88.8551 -34.0011 179.758 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.78686 -0.617132 0.0) (0.617132 0.78686 0.0) (0.0 0.0 1.0)) pos #f(-328.858 80.7242 0.0)) base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.960547) #s(costed-arc plist nil from #2# to #1406=#s(extended-node plist ((:name . "r-0-2-15")) arc-list (#s(costed-arc plist nil from #1406# to #4# cost 0.83608) #s(costed-arc plist nil from #1406# to #1198# cost 0.666791) #s(costed-arc plist nil from #1406# to #1199# cost 0.522009) #s(costed-arc plist nil from #1406# to #1249# cost 0.566886) #s(costed-arc plist nil from #1406# to #1245# cost 0.580615) #s(costed-arc plist nil from #1406# to #1299# cost 0.620914) #s(costed-arc plist nil from #1406# to #1387# cost 0.769189) #s(costed-arc plist nil from #1406# to #1235# cost 0.585806) #s(costed-arc plist nil from #1406# to #1388# cost 0.582645) #s(costed-arc plist nil from #1406# to #1389# cost 0.496572) #s(costed-arc plist nil from #1406# to #1390# cost 0.557443) #s(costed-arc plist nil from #1406# to #1391# cost 0.58894) #s(costed-arc plist nil from #1406# to #1392# cost 0.578956) #s(costed-arc plist nil from #1406# to #1296# cost 0.65644) #s(costed-arc plist nil from #1406# to #1280# cost 0.65367) #s(costed-arc plist nil from #1406# to #1291# cost 0.631366) #s(costed-arc plist nil from #1406# to #1393# cost 0.569463) #s(costed-arc plist nil from #1406# to #1394# cost 0.637078) #s(costed-arc plist nil from #1406# to #1395# cost 0.655491) #s(costed-arc plist nil from #1406# to #1214# cost 0.670799) #s(costed-arc plist nil from #1406# to #1207# cost 0.711579) #s(costed-arc plist nil from #1406# to #1203# cost 0.71186) #s(costed-arc plist nil from #1406# to #1274# cost 0.711948) #s(costed-arc plist nil from #1406# to #1270# cost 0.671276) #s(costed-arc plist nil from #1406# to #1396# cost 0.736415)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(212.2 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.7918 30.5359 -33.1733 -54.5606 -81.6014 -33.6293 178.998 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.789568 -0.613663 0.0) (0.613663 0.789568 0.0) (0.0 0.0 1.0)) pos #f(-322.36 72.4284 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.925317) #s(costed-arc plist nil from #2# to #1407=#s(extended-node plist ((:name . "r-0-2-14")) arc-list (#s(costed-arc plist nil from #1407# to #4# cost 0.821505) #s(costed-arc plist nil from #1407# to #1198# cost 0.667766) #s(costed-arc plist nil from #1407# to #1199# cost 0.523394) #s(costed-arc plist nil from #1407# to #1249# cost 0.537351) #s(costed-arc plist nil from #1407# to #1245# cost 0.539864) #s(costed-arc plist nil from #1407# to #1299# cost 0.586743) #s(costed-arc plist nil from #1407# to #1387# cost 0.73507) #s(costed-arc plist nil from #1407# to #1235# cost 0.583991) #s(costed-arc plist nil from #1407# to #1388# cost 0.576716) #s(costed-arc plist nil from #1407# to #1389# cost 0.491952) #s(costed-arc plist nil from #1407# to #1390# cost 0.516309) #s(costed-arc plist nil from #1407# to #1391# cost 0.532707) #s(costed-arc plist nil from #1407# to #1392# cost 0.533215) #s(costed-arc plist nil from #1407# to #1296# cost 0.665377) #s(costed-arc plist nil from #1407# to #1280# cost 0.650218) #s(costed-arc plist nil from #1407# to #1291# cost 0.617179) #s(costed-arc plist nil from #1407# to #1393# cost 0.551195) #s(costed-arc plist nil from #1407# to #1394# cost 0.583358) #s(costed-arc plist nil from #1407# to #1395# cost 0.586484) #s(costed-arc plist nil from #1407# to #1214# cost 0.681962) #s(costed-arc plist nil from #1407# to #1207# cost 0.715363) #s(costed-arc plist nil from #1407# to #1203# cost 0.70034) #s(costed-arc plist nil from #1407# to #1274# cost 0.681255) #s(costed-arc plist nil from #1407# to #1270# cost 0.623226) #s(costed-arc plist nil from #1407# to #1396# cost 0.661827)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(219.602 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.0165 25.4247 -22.5582 -58.9949 -75.9631 -23.0548 179.781 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.790795 -0.612082 0.0) (0.612082 0.790795 0.0) (0.0 0.0 1.0)) pos #f(-333.791 87.8853 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.948185) #s(costed-arc plist nil from #2# to #1408=#s(extended-node plist ((:name . "r-0-2-13")) arc-list (#s(costed-arc plist nil from #1408# to #4# cost 0.836254) #s(costed-arc plist nil from #1408# to #1198# cost 0.666059) #s(costed-arc plist nil from #1408# to #1199# cost 0.516394) #s(costed-arc plist nil from #1408# to #1249# cost 0.526707) #s(costed-arc plist nil from #1408# to #1245# cost 0.518001) #s(costed-arc plist nil from #1408# to #1299# cost 0.547299) #s(costed-arc plist nil from #1408# to #1387# cost 0.688567) #s(costed-arc plist nil from #1408# to #1235# cost 0.612329) #s(costed-arc plist nil from #1408# to #1388# cost 0.609734) #s(costed-arc plist nil from #1408# to #1389# cost 0.523772) #s(costed-arc plist nil from #1408# to #1390# cost 0.543758) #s(costed-arc plist nil from #1408# to #1391# cost 0.53975) #s(costed-arc plist nil from #1408# to #1392# cost 0.495009) #s(costed-arc plist nil from #1408# to #1296# cost 0.70658) #s(costed-arc plist nil from #1408# to #1280# cost 0.695966) #s(costed-arc plist nil from #1408# to #1291# cost 0.660954) #s(costed-arc plist nil from #1408# to #1393# cost 0.590954) #s(costed-arc plist nil from #1408# to #1394# cost 0.616073) #s(costed-arc plist nil from #1408# to #1395# cost 0.593144) #s(costed-arc plist nil from #1408# to #1214# cost 0.736772) #s(costed-arc plist nil from #1408# to #1207# cost 0.766342) #s(costed-arc plist nil from #1408# to #1203# cost 0.751782) #s(costed-arc plist nil from #1408# to #1274# cost 0.727736) #s(costed-arc plist nil from #1408# to #1270# cost 0.659502) #s(costed-arc plist nil from #1408# to #1396# cost 0.681282)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(224.116 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -16.4182 10.5329 -20.2107 -52.4189 -76.0182 -21.0951 179.865 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.785998 -0.618229 0.0) (0.618229 0.785998 0.0) (0.0 0.0 1.0)) pos #f(-334.289 88.2521 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.954459) #s(costed-arc plist nil from #2# to #1409=#s(extended-node plist ((:name . "r-0-2-12")) arc-list (#s(costed-arc plist nil from #1409# to #4# cost 0.921505) #s(costed-arc plist nil from #1409# to #1198# cost 0.654738) #s(costed-arc plist nil from #1409# to #1199# cost 0.505194) #s(costed-arc plist nil from #1409# to #1249# cost 0.509139) #s(costed-arc plist nil from #1409# to #1245# cost 0.490129) #s(costed-arc plist nil from #1409# to #1299# cost 0.484743) #s(costed-arc plist nil from #1409# to #1387# cost 0.610363) #s(costed-arc plist nil from #1409# to #1235# cost 0.709535) #s(costed-arc plist nil from #1409# to #1388# cost 0.720861) #s(costed-arc plist nil from #1409# to #1389# cost 0.644686) #s(costed-arc plist nil from #1409# to #1390# cost 0.66158) #s(costed-arc plist nil from #1409# to #1391# cost 0.636932) #s(costed-arc plist nil from #1409# to #1392# cost 0.518188) #s(costed-arc plist nil from #1409# to #1296# cost 0.82428) #s(costed-arc plist nil from #1409# to #1280# cost 0.825547) #s(costed-arc plist nil from #1409# to #1291# cost 0.795351) #s(costed-arc plist nil from #1409# to #1393# cost 0.729822) #s(costed-arc plist nil from #1409# to #1394# cost 0.74917) #s(costed-arc plist nil from #1409# to #1395# cost 0.695249) #s(costed-arc plist nil from #1409# to #1214# cost 0.878568) #s(costed-arc plist nil from #1409# to #1207# cost 0.906246) #s(costed-arc plist nil from #1409# to #1203# cost 0.897678) #s(costed-arc plist nil from #1409# to #1274# cost 0.873004) #s(costed-arc plist nil from #1409# to #1270# cost 0.799177) #s(costed-arc plist nil from #1409# to #1396# cost 0.802054)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(203.029 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -16.2703 -11.1477 -14.6443 -33.4746 -77.7279 -20.7488 182.975 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.748496 -0.66314 0.0) (0.66314 0.748496 0.0) (0.0 0.0 1.0)) pos #f(-338.762 100.752 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.05359) #s(costed-arc plist nil from #2# to #1410=#s(extended-node plist ((:name . "r-0-2-11")) arc-list (#s(costed-arc plist nil from #1410# to #4# cost 0.847127) #s(costed-arc plist nil from #1410# to #1198# cost 0.760424) #s(costed-arc plist nil from #1410# to #1199# cost 0.621846) #s(costed-arc plist nil from #1410# to #1249# cost 0.690988) #s(costed-arc plist nil from #1410# to #1245# cost 0.712375) #s(costed-arc plist nil from #1410# to #1299# cost 0.774659) #s(costed-arc plist nil from #1410# to #1387# cost 0.937918) #s(costed-arc plist nil from #1410# to #1235# cost 0.600148) #s(costed-arc plist nil from #1410# to #1388# cost 0.556924) #s(costed-arc plist nil from #1410# to #1389# cost 0.492876) #s(costed-arc plist nil from #1410# to #1390# cost 0.613871) #s(costed-arc plist nil from #1410# to #1391# cost 0.665773) #s(costed-arc plist nil from #1410# to #1392# cost 0.726379) #s(costed-arc plist nil from #1410# to #1296# cost 0.582166) #s(costed-arc plist nil from #1410# to #1280# cost 0.594623) #s(costed-arc plist nil from #1410# to #1291# cost 0.590581) #s(costed-arc plist nil from #1410# to #1393# cost 0.555856) #s(costed-arc plist nil from #1410# to #1394# cost 0.669205) #s(costed-arc plist nil from #1410# to #1395# cost 0.726522) #s(costed-arc plist nil from #1410# to #1214# cost 0.564516) #s(costed-arc plist nil from #1410# to #1207# cost 0.621306) #s(costed-arc plist nil from #1410# to #1203# cost 0.646787) #s(costed-arc plist nil from #1410# to #1274# cost 0.681366) #s(costed-arc plist nil from #1410# to #1270# cost 0.683315) #s(costed-arc plist nil from #1410# to #1396# cost 0.810043)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(197.675 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.2747 49.48 -55.8525 -56.5803 -87.0091 -43.0999 179.82 0.0 0.0) robot-pose-optimized #f(199.219 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.0656 73.7303 -33.2697 -71.7019 -80.5911 -44.0616 180.157 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.819459 -0.573137 0.0) (0.573137 0.819459 0.0) (0.0 0.0 1.0)) pos #f(-359.875 53.8017 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.423104 -0.906081 0.0) (0.906081 0.423104 0.0) (0.0 0.0 1.0)) pos #f(-363.454 33.5574 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.94739) #s(costed-arc plist nil from #2# to #1411=#s(extended-node plist ((:name . "r-0-2-10")) arc-list (#s(costed-arc plist nil from #1411# to #4# cost 0.831223) #s(costed-arc plist nil from #1411# to #1198# cost 0.795652) #s(costed-arc plist nil from #1411# to #1199# cost 0.657776) #s(costed-arc plist nil from #1411# to #1249# cost 0.702042) #s(costed-arc plist nil from #1411# to #1245# cost 0.719501) #s(costed-arc plist nil from #1411# to #1299# cost 0.786825) #s(costed-arc plist nil from #1411# to #1387# cost 0.946951) #s(costed-arc plist nil from #1411# to #1235# cost 0.620773) #s(costed-arc plist nil from #1411# to #1388# cost 0.558689) #s(costed-arc plist nil from #1411# to #1389# cost 0.486932) #s(costed-arc plist nil from #1411# to #1390# cost 0.588142) #s(costed-arc plist nil from #1411# to #1391# cost 0.641955) #s(costed-arc plist nil from #1411# to #1392# cost 0.720643) #s(costed-arc plist nil from #1411# to #1296# cost 0.584782) #s(costed-arc plist nil from #1411# to #1280# cost 0.574582) #s(costed-arc plist nil from #1411# to #1291# cost 0.555624) #s(costed-arc plist nil from #1411# to #1393# cost 0.508516) #s(costed-arc plist nil from #1411# to #1394# cost 0.614182) #s(costed-arc plist nil from #1411# to #1395# cost 0.685833) #s(costed-arc plist nil from #1411# to #1214# cost 0.551609) #s(costed-arc plist nil from #1411# to #1207# cost 0.593567) #s(costed-arc plist nil from #1411# to #1203# cost 0.600594) #s(costed-arc plist nil from #1411# to #1274# cost 0.622473) #s(costed-arc plist nil from #1411# to #1270# cost 0.617567) #s(costed-arc plist nil from #1411# to #1396# cost 0.75292)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(202.945 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.4113 47.7919 -47.3299 -70.8381 -82.2801 -41.7146 179.829 0.0 0.0) robot-pose-optimized #f(203.341 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -63.9398 57.5976 -43.8017 -81.8634 -79.4545 -55.7473 180.338 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.822984 -0.568064 0.0) (0.568064 0.822984 0.0) (0.0 0.0 1.0)) pos #f(-370.426 42.2639 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.428693 -0.90345 0.0) (0.90345 0.428693 0.0) (0.0 0.0 1.0)) pos #f(-370.12 25.7851 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.931903) #s(costed-arc plist nil from #2# to #1412=#s(extended-node plist ((:name . "r-0-2-9")) arc-list (#s(costed-arc plist nil from #1412# to #4# cost 0.814498) #s(costed-arc plist nil from #1412# to #1198# cost 0.81251) #s(costed-arc plist nil from #1412# to #1199# cost 0.678305) #s(costed-arc plist nil from #1412# to #1249# cost 0.705316) #s(costed-arc plist nil from #1412# to #1245# cost 0.718681) #s(costed-arc plist nil from #1412# to #1299# cost 0.780617) #s(costed-arc plist nil from #1412# to #1387# cost 0.930345) #s(costed-arc plist nil from #1412# to #1235# cost 0.644921) #s(costed-arc plist nil from #1412# to #1388# cost 0.573255) #s(costed-arc plist nil from #1412# to #1389# cost 0.489747) #s(costed-arc plist nil from #1412# to #1390# cost 0.570492) #s(costed-arc plist nil from #1412# to #1391# cost 0.621278) #s(costed-arc plist nil from #1412# to #1392# cost 0.707678) #s(costed-arc plist nil from #1412# to #1296# cost 0.619151) #s(costed-arc plist nil from #1412# to #1280# cost 0.592094) #s(costed-arc plist nil from #1412# to #1291# cost 0.557373) #s(costed-arc plist nil from #1412# to #1393# cost 0.489621) #s(costed-arc plist nil from #1412# to #1394# cost 0.57938) #s(costed-arc plist nil from #1412# to #1395# cost 0.64801) #s(costed-arc plist nil from #1412# to #1214# cost 0.583547) #s(costed-arc plist nil from #1412# to #1207# cost 0.612293) #s(costed-arc plist nil from #1412# to #1203# cost 0.600159) #s(costed-arc plist nil from #1412# to #1274# cost 0.603955) #s(costed-arc plist nil from #1412# to #1270# cost 0.581196) #s(costed-arc plist nil from #1412# to #1396# cost 0.698967)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(207.891 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -28.7341 42.4079 -40.3718 -82.344 -78.7436 -41.6092 179.457 0.0 0.0) robot-pose-optimized #f(203.973 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -63.6511 43.784 -43.564 -96.4112 -86.8519 -54.9272 179.889 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.819675 -0.572829 0.0) (0.572829 0.819675 0.0) (0.0 0.0 1.0)) pos #f(-349.997 39.2641 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.423444 -0.905922 0.0) (0.905922 0.423444 0.0) (0.0 0.0 1.0)) pos #f(-351.891 19.4033 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.917169) #s(costed-arc plist nil from #2# to #1413=#s(extended-node plist ((:name . "r-0-2-8")) arc-list (#s(costed-arc plist nil from #1413# to #4# cost 0.799586) #s(costed-arc plist nil from #1413# to #1198# cost 0.805162) #s(costed-arc plist nil from #1413# to #1199# cost 0.675641) #s(costed-arc plist nil from #1413# to #1249# cost 0.686331) #s(costed-arc plist nil from #1413# to #1245# cost 0.69332) #s(costed-arc plist nil from #1413# to #1299# cost 0.748569) #s(costed-arc plist nil from #1413# to #1387# cost 0.885565) #s(costed-arc plist nil from #1413# to #1235# cost 0.655963) #s(costed-arc plist nil from #1413# to #1388# cost 0.590884) #s(costed-arc plist nil from #1413# to #1389# cost 0.493538) #s(costed-arc plist nil from #1413# to #1390# cost 0.541259) #s(costed-arc plist nil from #1413# to #1391# cost 0.582215) #s(costed-arc plist nil from #1413# to #1392# cost 0.673137) #s(costed-arc plist nil from #1413# to #1296# cost 0.656596) #s(costed-arc plist nil from #1413# to #1280# cost 0.617252) #s(costed-arc plist nil from #1413# to #1291# cost 0.567936) #s(costed-arc plist nil from #1413# to #1393# cost 0.479649) #s(costed-arc plist nil from #1413# to #1394# cost 0.542082) #s(costed-arc plist nil from #1413# to #1395# cost 0.595877) #s(costed-arc plist nil from #1413# to #1214# cost 0.628245) #s(costed-arc plist nil from #1413# to #1207# cost 0.647558) #s(costed-arc plist nil from #1413# to #1203# cost 0.61657) #s(costed-arc plist nil from #1413# to #1274# cost 0.596724) #s(costed-arc plist nil from #1413# to #1270# cost 0.546733) #s(costed-arc plist nil from #1413# to #1396# cost 0.628176)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(212.681 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.4139 34.9399 -31.9715 -90.0543 -74.2904 -37.2327 178.398 0.0 0.0) robot-pose-optimized #f(212.583 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -57.0737 34.7709 -36.2155 -105.139 -93.5782 -43.2632 179.303 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.814117 -0.580701 0.0) (0.580701 0.814117 0.0) (0.0 0.0 1.0)) pos #f(-320.67 51.5087 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.452803 -0.89161 0.0) (0.89161 0.452803 0.0) (0.0 0.0 1.0)) pos #f(-325.097 24.2164 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.915691) #s(costed-arc plist nil from #2# to #1414=#s(extended-node plist ((:name . "r-0-2-7")) arc-list (#s(costed-arc plist nil from #1414# to #4# cost 0.772881) #s(costed-arc plist nil from #1414# to #1198# cost 0.789351) #s(costed-arc plist nil from #1414# to #1199# cost 0.656714) #s(costed-arc plist nil from #1414# to #1249# cost 0.64362) #s(costed-arc plist nil from #1414# to #1245# cost 0.635281) #s(costed-arc plist nil from #1414# to #1299# cost 0.697281) #s(costed-arc plist nil from #1414# to #1387# cost 0.835305) #s(costed-arc plist nil from #1414# to #1235# cost 0.65064) #s(costed-arc plist nil from #1414# to #1388# cost 0.60985) #s(costed-arc plist nil from #1414# to #1389# cost 0.51829) #s(costed-arc plist nil from #1414# to #1390# cost 0.512726) #s(costed-arc plist nil from #1414# to #1391# cost 0.526465) #s(costed-arc plist nil from #1414# to #1392# cost 0.614933) #s(costed-arc plist nil from #1414# to #1296# cost 0.694879) #s(costed-arc plist nil from #1414# to #1280# cost 0.650518) #s(costed-arc plist nil from #1414# to #1291# cost 0.592462) #s(costed-arc plist nil from #1414# to #1393# cost 0.504517) #s(costed-arc plist nil from #1414# to #1394# cost 0.510499) #s(costed-arc plist nil from #1414# to #1395# cost 0.535548) #s(costed-arc plist nil from #1414# to #1214# cost 0.678913) #s(costed-arc plist nil from #1414# to #1207# cost 0.69665) #s(costed-arc plist nil from #1414# to #1203# cost 0.651897) #s(costed-arc plist nil from #1414# to #1274# cost 0.606123) #s(costed-arc plist nil from #1414# to #1270# cost 0.527656) #s(costed-arc plist nil from #1414# to #1396# cost 0.556215)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(219.505 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.4209 27.3409 -18.9059 -91.1256 -72.5986 -19.681 179.43 0.0 0.0) robot-pose-optimized #f(220.72 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -46.0418 20.6867 -29.2124 -96.4105 -84.6946 -31.0529 179.562 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.805213 -0.592985 0.0) (0.592985 0.805213 0.0) (0.0 0.0 1.0)) pos #f(-332.492 85.9136 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.574942 -0.818194 0.0) (0.818194 0.574942 0.0) (0.0 0.0 1.0)) pos #f(-339.182 61.0076 0.0)) object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.978537) #s(costed-arc plist nil from #2# to #1415=#s(extended-node plist ((:name . "r-0-2-6")) arc-list (#s(costed-arc plist nil from #1415# to #4# cost 0.776817) #s(costed-arc plist nil from #1415# to #1198# cost 0.759696) #s(costed-arc plist nil from #1415# to #1199# cost 0.617158) #s(costed-arc plist nil from #1415# to #1249# cost 0.603054) #s(costed-arc plist nil from #1415# to #1245# cost 0.582722) #s(costed-arc plist nil from #1415# to #1299# cost 0.625035) #s(costed-arc plist nil from #1415# to #1387# cost 0.75715) #s(costed-arc plist nil from #1415# to #1235# cost 0.650384) #s(costed-arc plist nil from #1415# to #1388# cost 0.626922) #s(costed-arc plist nil from #1415# to #1389# cost 0.531405) #s(costed-arc plist nil from #1415# to #1390# cost 0.526175) #s(costed-arc plist nil from #1415# to #1391# cost 0.513636) #s(costed-arc plist nil from #1415# to #1392# cost 0.543766) #s(costed-arc plist nil from #1415# to #1296# cost 0.725041) #s(costed-arc plist nil from #1415# to #1280# cost 0.691321) #s(costed-arc plist nil from #1415# to #1291# cost 0.634928) #s(costed-arc plist nil from #1415# to #1393# cost 0.543841) #s(costed-arc plist nil from #1415# to #1394# cost 0.545741) #s(costed-arc plist nil from #1415# to #1395# cost 0.528012) #s(costed-arc plist nil from #1415# to #1214# cost 0.733694) #s(costed-arc plist nil from #1415# to #1207# cost 0.749974) #s(costed-arc plist nil from #1415# to #1203# cost 0.712073) #s(costed-arc plist nil from #1415# to #1274# cost 0.66498) #s(costed-arc plist nil from #1415# to #1270# cost 0.574626) #s(costed-arc plist nil from #1415# to #1396# cost 0.57886)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(223.751 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -16.5613 7.48257 -15.924 -78.1122 -73.4842 -17.2338 179.442 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.799516 -0.600644 0.0) (0.600644 0.799516 0.0) (0.0 0.0 1.0)) pos #f(-333.989 89.9067 0.0)) base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.967741) #s(costed-arc plist nil from #2# to #1416=#s(extended-node plist ((:name . "r-0-2-5")) arc-list (#s(costed-arc plist nil from #1416# to #4# cost 0.934459) #s(costed-arc plist nil from #1416# to #1198# cost 0.901022) #s(costed-arc plist nil from #1416# to #1199# cost 0.775424) #s(costed-arc plist nil from #1416# to #1249# cost 0.827316) #s(costed-arc plist nil from #1416# to #1245# cost 0.847473) #s(costed-arc plist nil from #1416# to #1299# cost 0.928261) #s(costed-arc plist nil from #1416# to #1387# cost 1.08894) #s(costed-arc plist nil from #1416# to #1235# cost 0.703491) #s(costed-arc plist nil from #1416# to #1388# cost 0.646949) #s(costed-arc plist nil from #1416# to #1389# cost 0.593014) #s(costed-arc plist nil from #1416# to #1390# cost 0.704395) #s(costed-arc plist nil from #1416# to #1391# cost 0.765984) #s(costed-arc plist nil from #1416# to #1392# cost 0.860645) #s(costed-arc plist nil from #1416# to #1296# cost 0.598678) #s(costed-arc plist nil from #1416# to #1280# cost 0.589398) #s(costed-arc plist nil from #1416# to #1291# cost 0.587272) #s(costed-arc plist nil from #1416# to #1393# cost 0.585543) #s(costed-arc plist nil from #1416# to #1394# cost 0.732621) #s(costed-arc plist nil from #1416# to #1395# cost 0.816031) #s(costed-arc plist nil from #1416# to #1214# cost 0.529511) #s(costed-arc plist nil from #1416# to #1207# cost 0.576693) #s(costed-arc plist nil from #1416# to #1203# cost 0.600764) #s(costed-arc plist nil from #1416# to #1274# cost 0.646729) #s(costed-arc plist nil from #1416# to #1270# cost 0.702348) #s(costed-arc plist nil from #1416# to #1396# cost 0.882121)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(188.153 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -32.3525 61.1199 -58.8053 -70.7355 -81.3809 -41.8262 180.168 0.0 0.0) robot-pose-optimized #f(188.569 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -65.7269 74.2707 -51.6074 -77.0011 -78.137 -62.8478 180.544 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.841777 -0.539826 0.0) (0.539826 0.841777 0.0) (0.0 0.0 1.0)) pos #f(-417.527 -46.7836 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.459087 -0.888391 0.0) (0.888391 0.459087 0.0) (0.0 0.0 1.0)) pos #f(-405.179 -56.6733 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.933683) #s(costed-arc plist nil from #2# to #1417=#s(extended-node plist ((:name . "r-0-2-4")) arc-list (#s(costed-arc plist nil from #1417# to #4# cost 0.89964) #s(costed-arc plist nil from #1417# to #1198# cost 0.935241) #s(costed-arc plist nil from #1417# to #1199# cost 0.801586) #s(costed-arc plist nil from #1417# to #1249# cost 0.836809) #s(costed-arc plist nil from #1417# to #1245# cost 0.852399) #s(costed-arc plist nil from #1417# to #1299# cost 0.930141) #s(costed-arc plist nil from #1417# to #1387# cost 1.09144) #s(costed-arc plist nil from #1417# to #1235# cost 0.719705) #s(costed-arc plist nil from #1417# to #1388# cost 0.649023) #s(costed-arc plist nil from #1417# to #1389# cost 0.580596) #s(costed-arc plist nil from #1417# to #1390# cost 0.684385) #s(costed-arc plist nil from #1417# to #1391# cost 0.745538) #s(costed-arc plist nil from #1417# to #1392# cost 0.841214) #s(costed-arc plist nil from #1417# to #1296# cost 0.604463) #s(costed-arc plist nil from #1417# to #1280# cost 0.584408) #s(costed-arc plist nil from #1417# to #1291# cost 0.565502) #s(costed-arc plist nil from #1417# to #1393# cost 0.542126) #s(costed-arc plist nil from #1417# to #1394# cost 0.692472) #s(costed-arc plist nil from #1417# to #1395# cost 0.7795) #s(costed-arc plist nil from #1417# to #1214# cost 0.535124) #s(costed-arc plist nil from #1417# to #1207# cost 0.561681) #s(costed-arc plist nil from #1417# to #1203# cost 0.570795) #s(costed-arc plist nil from #1417# to #1274# cost 0.606616) #s(costed-arc plist nil from #1417# to #1270# cost 0.648573) #s(costed-arc plist nil from #1417# to #1396# cost 0.83365)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(202.163 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -33.9815 52.4885 -54.6005 -82.2163 -79.4299 -48.0533 179.74 0.0 0.0) robot-pose-optimized #f(198.406 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -68.2461 62.4056 -53.1918 -95.2971 -81.8251 -64.4564 179.885 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.839459 -0.543423 0.0) (0.543423 0.839459 0.0) (0.0 0.0 1.0)) pos #f(-445.079 -36.7233 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.455281 -0.890348 0.0) (0.890348 0.455281 0.0) (0.0 0.0 1.0)) pos #f(-428.956 -43.0609 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.938357) #s(costed-arc plist nil from #2# to #1418=#s(extended-node plist ((:name . "r-0-2-3")) arc-list (#s(costed-arc plist nil from #1418# to #4# cost 0.871433) #s(costed-arc plist nil from #1418# to #1198# cost 0.953363) #s(costed-arc plist nil from #1418# to #1199# cost 0.819474) #s(costed-arc plist nil from #1418# to #1249# cost 0.83356) #s(costed-arc plist nil from #1418# to #1245# cost 0.842392) #s(costed-arc plist nil from #1418# to #1299# cost 0.921979) #s(costed-arc plist nil from #1418# to #1387# cost 1.07856) #s(costed-arc plist nil from #1418# to #1235# cost 0.737512) #s(costed-arc plist nil from #1418# to #1388# cost 0.656273) #s(costed-arc plist nil from #1418# to #1389# cost 0.580425) #s(costed-arc plist nil from #1418# to #1390# cost 0.656361) #s(costed-arc plist nil from #1418# to #1391# cost 0.711699) #s(costed-arc plist nil from #1418# to #1392# cost 0.820581) #s(costed-arc plist nil from #1418# to #1296# cost 0.632762) #s(costed-arc plist nil from #1418# to #1280# cost 0.593976) #s(costed-arc plist nil from #1418# to #1291# cost 0.557383) #s(costed-arc plist nil from #1418# to #1393# cost 0.50892) #s(costed-arc plist nil from #1418# to #1394# cost 0.636574) #s(costed-arc plist nil from #1418# to #1395# cost 0.725939) #s(costed-arc plist nil from #1418# to #1214# cost 0.558955) #s(costed-arc plist nil from #1418# to #1207# cost 0.572785) #s(costed-arc plist nil from #1418# to #1203# cost 0.557955) #s(costed-arc plist nil from #1418# to #1274# cost 0.570526) #s(costed-arc plist nil from #1418# to #1270# cost 0.586417) #s(costed-arc plist nil from #1418# to #1396# cost 0.759806)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(205.383 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -31.654 48.0864 -44.8286 -94.8205 -76.6133 -43.5204 179.437 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.836672 -0.547704 0.0) (0.547704 0.836672 0.0) (0.0 0.0 1.0)) pos #f(-440.161 -25.0071 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.949375) #s(costed-arc plist nil from #2# to #1419=#s(extended-node plist ((:name . "r-0-2-2")) arc-list (#s(costed-arc plist nil from #1419# to #4# cost 0.835327) #s(costed-arc plist nil from #1419# to #1198# cost 0.953548) #s(costed-arc plist nil from #1419# to #1199# cost 0.81803) #s(costed-arc plist nil from #1419# to #1249# cost 0.814258) #s(costed-arc plist nil from #1419# to #1245# cost 0.813919) #s(costed-arc plist nil from #1419# to #1299# cost 0.892526) #s(costed-arc plist nil from #1419# to #1387# cost 1.04327) #s(costed-arc plist nil from #1419# to #1235# cost 0.748141) #s(costed-arc plist nil from #1419# to #1388# cost 0.66164) #s(costed-arc plist nil from #1419# to #1389# cost 0.580218) #s(costed-arc plist nil from #1419# to #1390# cost 0.626468) #s(costed-arc plist nil from #1419# to #1391# cost 0.667839) #s(costed-arc plist nil from #1419# to #1392# cost 0.783153) #s(costed-arc plist nil from #1419# to #1296# cost 0.67283) #s(costed-arc plist nil from #1419# to #1280# cost 0.62227) #s(costed-arc plist nil from #1419# to #1291# cost 0.570203) #s(costed-arc plist nil from #1419# to #1393# cost 0.499071) #s(costed-arc plist nil from #1419# to #1394# cost 0.580719) #s(costed-arc plist nil from #1419# to #1395# cost 0.661792) #s(costed-arc plist nil from #1419# to #1214# cost 0.604528) #s(costed-arc plist nil from #1419# to #1207# cost 0.612376) #s(costed-arc plist nil from #1419# to #1203# cost 0.576744) #s(costed-arc plist nil from #1419# to #1274# cost 0.560872) #s(costed-arc plist nil from #1419# to #1270# cost 0.533323) #s(costed-arc plist nil from #1419# to #1396# cost 0.675737)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(209.148 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -27.7671 40.5221 -33.8108 -104.188 -75.923 -35.9786 178.872 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.830342 -0.557254 0.0) (0.557254 0.830342 0.0) (0.0 0.0 1.0)) pos #f(-421.291 3.55656 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.973724) #s(costed-arc plist nil from #2# to #1420=#s(extended-node plist ((:name . "r-0-2-1")) arc-list (#s(costed-arc plist nil from #1420# to #4# cost 0.803534) #s(costed-arc plist nil from #1420# to #1198# cost 0.912596) #s(costed-arc plist nil from #1420# to #1199# cost 0.781818) #s(costed-arc plist nil from #1420# to #1249# cost 0.756778) #s(costed-arc plist nil from #1420# to #1245# cost 0.746159) #s(costed-arc plist nil from #1420# to #1299# cost 0.820318) #s(costed-arc plist nil from #1420# to #1387# cost 0.958954) #s(costed-arc plist nil from #1420# to #1235# cost 0.734705) #s(costed-arc plist nil from #1420# to #1388# cost 0.656471) #s(costed-arc plist nil from #1420# to #1389# cost 0.566603) #s(costed-arc plist nil from #1420# to #1390# cost 0.573755) #s(costed-arc plist nil from #1420# to #1391# cost 0.594144) #s(costed-arc plist nil from #1420# to #1392# cost 0.71247) #s(costed-arc plist nil from #1420# to #1296# cost 0.719669) #s(costed-arc plist nil from #1420# to #1280# cost 0.661511) #s(costed-arc plist nil from #1420# to #1291# cost 0.596602) #s(costed-arc plist nil from #1420# to #1393# cost 0.512447) #s(costed-arc plist nil from #1420# to #1394# cost 0.518419) #s(costed-arc plist nil from #1420# to #1395# cost 0.566331) #s(costed-arc plist nil from #1420# to #1214# cost 0.67031) #s(costed-arc plist nil from #1420# to #1207# cost 0.676442) #s(costed-arc plist nil from #1420# to #1203# cost 0.621924) #s(costed-arc plist nil from #1420# to #1274# cost 0.573262) #s(costed-arc plist nil from #1420# to #1270# cost 0.50418) #s(costed-arc plist nil from #1420# to #1396# cost 0.558906)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(214.457 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -19.6864 30.9635 -20.5808 -108.908 -70.2375 -23.6569 179.423 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.816812 -0.576904 0.0) (0.576904 0.816812 0.0) (0.0 0.0 1.0)) pos #f(-377.872 40.5151 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.998025) #s(costed-arc plist nil from #2# to #1421=#s(extended-node plist ((:name . "r-0-2-0")) arc-list (#s(costed-arc plist nil from #1421# to #4# cost 0.767784) #s(costed-arc plist nil from #1421# to #1198# cost 0.869684) #s(costed-arc plist nil from #1421# to #1199# cost 0.74035) #s(costed-arc plist nil from #1421# to #1249# cost 0.709356) #s(costed-arc plist nil from #1421# to #1245# cost 0.684511) #s(costed-arc plist nil from #1421# to #1299# cost 0.744701) #s(costed-arc plist nil from #1421# to #1387# cost 0.869771) #s(costed-arc plist nil from #1421# to #1235# cost 0.735516) #s(costed-arc plist nil from #1421# to #1388# cost 0.692457) #s(costed-arc plist nil from #1421# to #1389# cost 0.602312) #s(costed-arc plist nil from #1421# to #1390# cost 0.57094) #s(costed-arc plist nil from #1421# to #1391# cost 0.558246) #s(costed-arc plist nil from #1421# to #1392# cost 0.6501) #s(costed-arc plist nil from #1421# to #1296# cost 0.785412) #s(costed-arc plist nil from #1421# to #1280# cost 0.732124) #s(costed-arc plist nil from #1421# to #1291# cost 0.660749) #s(costed-arc plist nil from #1421# to #1393# cost 0.563451) #s(costed-arc plist nil from #1421# to #1394# cost 0.531726) #s(costed-arc plist nil from #1421# to #1395# cost 0.53449) #s(costed-arc plist nil from #1421# to #1214# cost 0.768433) #s(costed-arc plist nil from #1421# to #1207# cost 0.777137) #s(costed-arc plist nil from #1421# to #1203# cost 0.71643) #s(costed-arc plist nil from #1421# to #1274# cost 0.646861) #s(costed-arc plist nil from #1421# to #1270# cost 0.541441) #s(costed-arc plist nil from #1421# to #1396# cost 0.519462)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(221.574 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.0402 14.3642 -11.2158 -107.508 -71.2142 -9.22309 180.0 0.0 0.0) robot-pose-optimized #f(232.841 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -31.3016 7.11851 -19.2917 -113.435 -113.324 -24.1107 179.853 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.804113 -0.594477 0.0) (0.594477 0.804113 0.0) (0.0 0.0 1.0)) pos #f(-329.207 96.1236 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.736643 -0.676282 0.0) (0.676282 0.736643 0.0) (0.0 0.0 1.0)) pos #f(-317.261 91.1201 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.04802)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 1 door-angle -40 solved t robot-pose #f(141.198 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 12.2419 10.3441 -51.7748 -59.7565 -48.759 -57.4165 211.087 0.0 0.0) robot-pose-optimized #f(141.385 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.547 13.4436 -54.627 -77.9 -58.3198 -45.3603 224.769 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.904327 -0.426841 0.0) (0.426841 0.904327 0.0) (0.0 0.0 1.0)) pos #f(45.3166 -394.283 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.56975 -0.821818 0.0) (0.821818 0.56975 0.0) (0.0 0.0 1.0)) pos #f(38.9306 -410.261 0.0)) object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.05828) #s(costed-arc plist nil from #1# to #1422=#s(extended-node plist ((:name . "r-0-1-fk")) arc-list (#s(costed-arc plist nil from #1422# to #3# cost 1.36448) #s(costed-arc plist nil from #1422# to #1397# cost 0.399555) #s(costed-arc plist nil from #1422# to #1398# cost 2.53282) #s(costed-arc plist nil from #1422# to #1399# cost 2.31397) #s(costed-arc plist nil from #1422# to #1400# cost 2.25602) #s(costed-arc plist nil from #1422# to #1401# cost 2.27792) #s(costed-arc plist nil from #1422# to #1402# cost 2.44298) #s(costed-arc plist nil from #1422# to #1403# cost 2.65853) #s(costed-arc plist nil from #1422# to #1404# cost 1.7716) #s(costed-arc plist nil from #1422# to #1405# cost 1.7576) #s(costed-arc plist nil from #1422# to #1406# cost 1.76897) #s(costed-arc plist nil from #1422# to #1407# cost 1.77591) #s(costed-arc plist nil from #1422# to #1408# cost 1.80726) #s(costed-arc plist nil from #1422# to #1409# cost 1.89003) #s(costed-arc plist nil from #1422# to #1410# cost 1.73479) #s(costed-arc plist nil from #1422# to #1411# cost 1.72698) #s(costed-arc plist nil from #1422# to #1412# cost 1.7267) #s(costed-arc plist nil from #1422# to #1413# cost 1.73589) #s(costed-arc plist nil from #1422# to #1414# cost 1.73902) #s(costed-arc plist nil from #1422# to #1415# cost 1.77369) #s(costed-arc plist nil from #1422# to #1416# cost 1.78713) #s(costed-arc plist nil from #1422# to #1417# cost 1.77563) #s(costed-arc plist nil from #1422# to #1418# cost 1.76223) #s(costed-arc plist nil from #1422# to #1419# cost 1.74296) #s(costed-arc plist nil from #1422# to #1420# cost 1.75404) #s(costed-arc plist nil from #1422# to #1421# cost 1.75171)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 1 door-angle -40 solved t robot-pose #f(264.331 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -2.14895 59.2136 -4.64214 -119.752 -225.616 -69.154 293.773 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998685 -0.051259 0.0) (0.051259 0.998685 0.0) (0.0 0.0 1.0)) pos #f(-310.684 467.122 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.77114) #s(costed-arc plist nil from #1# to #1423=#s(extended-node plist ((:name . "r-0-1-22")) arc-list (#s(costed-arc plist nil from #1423# to #3# cost 1.94147) #s(costed-arc plist nil from #1423# to #1397# cost 3.33889) #s(costed-arc plist nil from #1423# to #1398# cost 0.821695) #s(costed-arc plist nil from #1423# to #1399# cost 1.03133) #s(costed-arc plist nil from #1423# to #1400# cost 1.063) #s(costed-arc plist nil from #1423# to #1401# cost 1.03978) #s(costed-arc plist nil from #1423# to #1402# cost 0.938585) #s(costed-arc plist nil from #1423# to #1403# cost 0.8973) #s(costed-arc plist nil from #1423# to #1404# cost 1.51391) #s(costed-arc plist nil from #1423# to #1405# cost 1.51111) #s(costed-arc plist nil from #1423# to #1406# cost 1.50891) #s(costed-arc plist nil from #1423# to #1407# cost 1.53306) #s(costed-arc plist nil from #1423# to #1408# cost 1.51613) #s(costed-arc plist nil from #1423# to #1409# cost 1.48895) #s(costed-arc plist nil from #1423# to #1410# cost 1.55873) #s(costed-arc plist nil from #1423# to #1411# cost 1.58761) #s(costed-arc plist nil from #1423# to #1412# cost 1.59948) #s(costed-arc plist nil from #1423# to #1413# cost 1.60353) #s(costed-arc plist nil from #1423# to #1414# cost 1.63425) #s(costed-arc plist nil from #1423# to #1415# cost 1.59665) #s(costed-arc plist nil from #1423# to #1416# cost 1.59853) #s(costed-arc plist nil from #1423# to #1417# cost 1.63898) #s(costed-arc plist nil from #1423# to #1418# cost 1.67072) #s(costed-arc plist nil from #1423# to #1419# cost 1.69783) #s(costed-arc plist nil from #1423# to #1420# cost 1.69557) #s(costed-arc plist nil from #1423# to #1421# cost 1.70668)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(77.7832 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -45.0539 8.21399 -92.0112 -9.05278 -0.648018 -5.8744 175.193 0.0 0.0) robot-pose-optimized #f(78.3223 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -85.253 11.9629 -83.9894 -24.128 2.4675 -32.2614 175.316 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.00118 -0.999999 0.0) (0.999999 0.00118 0.0) (0.0 0.0 1.0)) pos #f(-125.776 -234.457 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.44557 -0.895247 0.0) (0.895247 -0.44557 0.0) (0.0 0.0 1.0)) pos #f(-116.626 -250.185 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.7694) #s(costed-arc plist nil from #1# to #1424=#s(extended-node plist ((:name . "r-0-1-21")) arc-list (#s(costed-arc plist nil from #1424# to #3# cost 1.89729) #s(costed-arc plist nil from #1424# to #1397# cost 3.29006) #s(costed-arc plist nil from #1424# to #1398# cost 0.829114) #s(costed-arc plist nil from #1424# to #1399# cost 0.984194) #s(costed-arc plist nil from #1424# to #1400# cost 1.00886) #s(costed-arc plist nil from #1424# to #1401# cost 0.982749) #s(costed-arc plist nil from #1424# to #1402# cost 0.876713) #s(costed-arc plist nil from #1424# to #1403# cost 0.903871) #s(costed-arc plist nil from #1424# to #1404# cost 1.47187) #s(costed-arc plist nil from #1424# to #1405# cost 1.46901) #s(costed-arc plist nil from #1424# to #1406# cost 1.46497) #s(costed-arc plist nil from #1424# to #1407# cost 1.48591) #s(costed-arc plist nil from #1424# to #1408# cost 1.46216) #s(costed-arc plist nil from #1424# to #1409# cost 1.42495) #s(costed-arc plist nil from #1424# to #1410# cost 1.52469) #s(costed-arc plist nil from #1424# to #1411# cost 1.55199) #s(costed-arc plist nil from #1424# to #1412# cost 1.56115) #s(costed-arc plist nil from #1424# to #1413# cost 1.56197) #s(costed-arc plist nil from #1424# to #1414# cost 1.58828) #s(costed-arc plist nil from #1424# to #1415# cost 1.54241) #s(costed-arc plist nil from #1424# to #1416# cost 1.56883) #s(costed-arc plist nil from #1424# to #1417# cost 1.60556) #s(costed-arc plist nil from #1424# to #1418# cost 1.63445) #s(costed-arc plist nil from #1424# to #1419# cost 1.65763) #s(costed-arc plist nil from #1424# to #1420# cost 1.6509) #s(costed-arc plist nil from #1424# to #1421# cost 1.65575)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(92.7317 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -42.5893 -1.18554 -89.9821 -9.19729 -2.20652 -5.79969 177.731 0.0 0.0) robot-pose-optimized #f(92.1028 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -82.3462 1.27859 -82.9035 -27.8777 -0.05808 -31.7859 177.397 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.050589 -0.99872 0.0) (0.99872 0.050589 0.0) (0.0 0.0 1.0)) pos #f(-135.443 -228.809 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.366411 -0.930453 0.0) (0.930453 -0.366411 0.0) (0.0 0.0 1.0)) pos #f(-125.992 -228.77 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.72439) #s(costed-arc plist nil from #1# to #1425=#s(extended-node plist ((:name . "r-0-1-20")) arc-list (#s(costed-arc plist nil from #1425# to #3# cost 1.98218) #s(costed-arc plist nil from #1425# to #1397# cost 3.40045) #s(costed-arc plist nil from #1425# to #1398# cost 0.933232) #s(costed-arc plist nil from #1425# to #1399# cost 1.14256) #s(costed-arc plist nil from #1425# to #1400# cost 1.19526) #s(costed-arc plist nil from #1425# to #1401# cost 1.15403) #s(costed-arc plist nil from #1425# to #1402# cost 1.03498) #s(costed-arc plist nil from #1425# to #1403# cost 0.979253) #s(costed-arc plist nil from #1425# to #1404# cost 1.63928) #s(costed-arc plist nil from #1425# to #1405# cost 1.63219) #s(costed-arc plist nil from #1425# to #1406# cost 1.63132) #s(costed-arc plist nil from #1425# to #1407# cost 1.65973) #s(costed-arc plist nil from #1425# to #1408# cost 1.63884) #s(costed-arc plist nil from #1425# to #1409# cost 1.60597) #s(costed-arc plist nil from #1425# to #1410# cost 1.6688) #s(costed-arc plist nil from #1425# to #1411# cost 1.69813) #s(costed-arc plist nil from #1425# to #1412# cost 1.70764) #s(costed-arc plist nil from #1425# to #1413# cost 1.71171) #s(costed-arc plist nil from #1425# to #1414# cost 1.74744) #s(costed-arc plist nil from #1425# to #1415# cost 1.70759) #s(costed-arc plist nil from #1425# to #1416# cost 1.70494) #s(costed-arc plist nil from #1425# to #1417# cost 1.73881) #s(costed-arc plist nil from #1425# to #1418# cost 1.771) #s(costed-arc plist nil from #1425# to #1419# cost 1.79901) #s(costed-arc plist nil from #1425# to #1420# cost 1.80011) #s(costed-arc plist nil from #1425# to #1421# cost 1.80891)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(217.642 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -46.5688 -8.60341 -117.883 -15.4522 1.26987 -5.72958 186.479 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.012661 -0.99992 0.0) (0.99992 -0.012661 0.0) (0.0 0.0 1.0)) pos #f(-110.314 -253.521 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.84819) #s(costed-arc plist nil from #1# to #1426=#s(extended-node plist ((:name . "r-0-1-19")) arc-list (#s(costed-arc plist nil from #1426# to #3# cost 1.93976) #s(costed-arc plist nil from #1426# to #1397# cost 3.30081) #s(costed-arc plist nil from #1426# to #1398# cost 0.784624) #s(costed-arc plist nil from #1426# to #1399# cost 0.988605) #s(costed-arc plist nil from #1426# to #1400# cost 1.0421) #s(costed-arc plist nil from #1426# to #1401# cost 0.993393) #s(costed-arc plist nil from #1426# to #1402# cost 0.860631) #s(costed-arc plist nil from #1426# to #1403# cost 0.713015) #s(costed-arc plist nil from #1426# to #1404# cost 1.51547) #s(costed-arc plist nil from #1426# to #1405# cost 1.5194) #s(costed-arc plist nil from #1426# to #1406# cost 1.52188) #s(costed-arc plist nil from #1426# to #1407# cost 1.5477) #s(costed-arc plist nil from #1426# to #1408# cost 1.51331) #s(costed-arc plist nil from #1426# to #1409# cost 1.457) #s(costed-arc plist nil from #1426# to #1410# cost 1.58666) #s(costed-arc plist nil from #1426# to #1411# cost 1.6198) #s(costed-arc plist nil from #1426# to #1412# cost 1.63162) #s(costed-arc plist nil from #1426# to #1413# cost 1.63474) #s(costed-arc plist nil from #1426# to #1414# cost 1.66091) #s(costed-arc plist nil from #1426# to #1415# cost 1.60098) #s(costed-arc plist nil from #1426# to #1416# cost 1.64546) #s(costed-arc plist nil from #1426# to #1417# cost 1.67994) #s(costed-arc plist nil from #1426# to #1418# cost 1.7115) #s(costed-arc plist nil from #1426# to #1419# cost 1.73404) #s(costed-arc plist nil from #1426# to #1420# cost 1.73035) #s(costed-arc plist nil from #1426# to #1421# cost 1.72796)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(238.059 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -49.9754 -13.7834 -88.3149 -8.62123 -26.9654 -6.66801 185.885 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.085901 -0.996304 0.0) (0.996304 -0.085901 0.0) (0.0 0.0 1.0)) pos #f(-123.398 -239.52 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.78072) #s(costed-arc plist nil from #1# to #1427=#s(extended-node plist ((:name . "r-0-1-17")) arc-list (#s(costed-arc plist nil from #1427# to #3# cost 0.929854) #s(costed-arc plist nil from #1427# to #1397# cost 2.20165) #s(costed-arc plist nil from #1427# to #1398# cost 1.45587) #s(costed-arc plist nil from #1427# to #1399# cost 1.3206) #s(costed-arc plist nil from #1427# to #1400# cost 0.929858) #s(costed-arc plist nil from #1427# to #1401# cost 1.02528) #s(costed-arc plist nil from #1427# to #1402# cost 1.32125) #s(costed-arc plist nil from #1427# to #1403# cost 1.59645) #s(costed-arc plist nil from #1427# to #1404# cost 0.818186) #s(costed-arc plist nil from #1427# to #1405# cost 0.754994) #s(costed-arc plist nil from #1427# to #1406# cost 0.746821) #s(costed-arc plist nil from #1427# to #1407# cost 0.769014) #s(costed-arc plist nil from #1427# to #1408# cost 0.776134) #s(costed-arc plist nil from #1427# to #1409# cost 0.867864) #s(costed-arc plist nil from #1427# to #1410# cost 0.737794) #s(costed-arc plist nil from #1427# to #1411# cost 0.760398) #s(costed-arc plist nil from #1427# to #1412# cost 0.776127) #s(costed-arc plist nil from #1427# to #1413# cost 0.785115) #s(costed-arc plist nil from #1427# to #1414# cost 0.831159) #s(costed-arc plist nil from #1427# to #1415# cost 0.820241) #s(costed-arc plist nil from #1427# to #1416# cost 0.759746) #s(costed-arc plist nil from #1427# to #1417# cost 0.809743) #s(costed-arc plist nil from #1427# to #1418# cost 0.841052) #s(costed-arc plist nil from #1427# to #1419# cost 0.870192) #s(costed-arc plist nil from #1427# to #1420# cost 0.881962) #s(costed-arc plist nil from #1427# to #1421# cost 0.907809)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(88.4384 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.66475 22.3426 -86.8977 -31.7425 -27.6618 -11.0156 180.479 0.0 0.0) robot-pose-optimized #f(86.7846 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -10.2422 23.7379 -77.5852 -30.3841 -42.1325 -24.9725 181.801 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.910511 -0.413485 0.0) (0.413485 0.910511 0.0) (0.0 0.0 1.0)) pos #f(-164.595 -44.9528 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.865913 -0.500195 0.0) (0.500195 0.865913 0.0) (0.0 0.0 1.0)) pos #f(-172.046 -39.5162 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.948617) #s(costed-arc plist nil from #1# to #1428=#s(extended-node plist ((:name . "r-0-1-16")) arc-list (#s(costed-arc plist nil from #1428# to #3# cost 0.86024) #s(costed-arc plist nil from #1428# to #1397# cost 2.01873) #s(costed-arc plist nil from #1428# to #1398# cost 1.47404) #s(costed-arc plist nil from #1428# to #1399# cost 1.32057) #s(costed-arc plist nil from #1428# to #1400# cost 0.966245) #s(costed-arc plist nil from #1428# to #1401# cost 1.05355) #s(costed-arc plist nil from #1428# to #1402# cost 1.32351) #s(costed-arc plist nil from #1428# to #1403# cost 1.6556) #s(costed-arc plist nil from #1428# to #1404# cost 0.806181) #s(costed-arc plist nil from #1428# to #1405# cost 0.727734) #s(costed-arc plist nil from #1428# to #1406# cost 0.71203) #s(costed-arc plist nil from #1428# to #1407# cost 0.737061) #s(costed-arc plist nil from #1428# to #1408# cost 0.740612) #s(costed-arc plist nil from #1428# to #1409# cost 0.833649) #s(costed-arc plist nil from #1428# to #1410# cost 0.720305) #s(costed-arc plist nil from #1428# to #1411# cost 0.739018) #s(costed-arc plist nil from #1428# to #1412# cost 0.747304) #s(costed-arc plist nil from #1428# to #1413# cost 0.747613) #s(costed-arc plist nil from #1428# to #1414# cost 0.796997) #s(costed-arc plist nil from #1428# to #1415# cost 0.780003) #s(costed-arc plist nil from #1428# to #1416# cost 0.773085) #s(costed-arc plist nil from #1428# to #1417# cost 0.80535) #s(costed-arc plist nil from #1428# to #1418# cost 0.831009) #s(costed-arc plist nil from #1428# to #1419# cost 0.852982) #s(costed-arc plist nil from #1428# to #1420# cost 0.858921) #s(costed-arc plist nil from #1428# to #1421# cost 0.873901)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(92.9609 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.48784 13.6978 -79.1941 -40.5055 -33.3366 -25.2773 177.793 0.0 0.0) robot-pose-optimized #f(91.8701 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -1.32124 12.2371 -78.795 -41.1772 -47.7008 -27.7999 181.117 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.9501 -0.311944 0.0) (0.311944 0.9501 0.0) (0.0 0.0 1.0)) pos #f(-193.2 31.2852 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.986552 -0.163446 0.0) (0.163446 0.986552 0.0) (0.0 0.0 1.0)) pos #f(-174.564 51.7017 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.920204) #s(costed-arc plist nil from #1# to #1429=#s(extended-node plist ((:name . "r-0-1-15")) arc-list (#s(costed-arc plist nil from #1429# to #3# cost 0.861335) #s(costed-arc plist nil from #1429# to #1397# cost 1.9981) #s(costed-arc plist nil from #1429# to #1398# cost 1.46153) #s(costed-arc plist nil from #1429# to #1399# cost 1.29995) #s(costed-arc plist nil from #1429# to #1400# cost 0.929352) #s(costed-arc plist nil from #1429# to #1401# cost 1.01219) #s(costed-arc plist nil from #1429# to #1402# cost 1.29398) #s(costed-arc plist nil from #1429# to #1403# cost 1.60763) #s(costed-arc plist nil from #1429# to #1404# cost 0.778832) #s(costed-arc plist nil from #1429# to #1405# cost 0.691842) #s(costed-arc plist nil from #1429# to #1406# cost 0.668951) #s(costed-arc plist nil from #1429# to #1407# cost 0.691089) #s(costed-arc plist nil from #1429# to #1408# cost 0.683851) #s(costed-arc plist nil from #1429# to #1409# cost 0.769341) #s(costed-arc plist nil from #1429# to #1410# cost 0.704711) #s(costed-arc plist nil from #1429# to #1411# cost 0.718016) #s(costed-arc plist nil from #1429# to #1412# cost 0.719586) #s(costed-arc plist nil from #1429# to #1413# cost 0.713004) #s(costed-arc plist nil from #1429# to #1414# cost 0.759028) #s(costed-arc plist nil from #1429# to #1415# cost 0.727496) #s(costed-arc plist nil from #1429# to #1416# cost 0.768855) #s(costed-arc plist nil from #1429# to #1417# cost 0.791517) #s(costed-arc plist nil from #1429# to #1418# cost 0.810979) #s(costed-arc plist nil from #1429# to #1419# cost 0.825627) #s(costed-arc plist nil from #1429# to #1420# cost 0.826219) #s(costed-arc plist nil from #1429# to #1421# cost 0.834982)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(98.6497 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.02895 5.85121 -67.2589 -41.2599 -39.7552 -31.4725 168.481 0.0 0.0) robot-pose-optimized #f(101.341 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 2.19715 3.04627 -71.2965 -42.5186 -51.9926 -30.1288 174.173 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.950749 -0.309963 0.0) (0.309963 0.950749 0.0) (0.0 0.0 1.0)) pos #f(-192.635 28.9962 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.995691 -0.092729 0.0) (0.092729 0.995691 0.0) (0.0 0.0 1.0)) pos #f(-170.494 53.4384 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.905119) #s(costed-arc plist nil from #1# to #1430=#s(extended-node plist ((:name . "r-0-1-14")) arc-list (#s(costed-arc plist nil from #1430# to #3# cost 0.907197) #s(costed-arc plist nil from #1430# to #1397# cost 2.16491) #s(costed-arc plist nil from #1430# to #1398# cost 1.49857) #s(costed-arc plist nil from #1430# to #1399# cost 1.34593) #s(costed-arc plist nil from #1430# to #1400# cost 0.909378) #s(costed-arc plist nil from #1430# to #1401# cost 1.01601) #s(costed-arc plist nil from #1430# to #1402# cost 1.31255) #s(costed-arc plist nil from #1430# to #1403# cost 1.56471) #s(costed-arc plist nil from #1430# to #1404# cost 0.836394) #s(costed-arc plist nil from #1430# to #1405# cost 0.752842) #s(costed-arc plist nil from #1430# to #1406# cost 0.713156) #s(costed-arc plist nil from #1430# to #1407# cost 0.701336) #s(costed-arc plist nil from #1430# to #1408# cost 0.687416) #s(costed-arc plist nil from #1430# to #1409# cost 0.763513) #s(costed-arc plist nil from #1430# to #1410# cost 0.775174) #s(costed-arc plist nil from #1430# to #1411# cost 0.768012) #s(costed-arc plist nil from #1430# to #1412# cost 0.755286) #s(costed-arc plist nil from #1430# to #1413# cost 0.73304) #s(costed-arc plist nil from #1430# to #1414# cost 0.748874) #s(costed-arc plist nil from #1430# to #1415# cost 0.711815) #s(costed-arc plist nil from #1430# to #1416# cost 0.807577) #s(costed-arc plist nil from #1430# to #1417# cost 0.829639) #s(costed-arc plist nil from #1430# to #1418# cost 0.831028) #s(costed-arc plist nil from #1430# to #1419# cost 0.82965) #s(costed-arc plist nil from #1430# to #1420# cost 0.805573) #s(costed-arc plist nil from #1430# to #1421# cost 0.802706)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(99.2297 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -4.6264 2.57123 -52.993 -43.2208 -18.6812 -16.0605 177.989 0.0 0.0) robot-pose-optimized #f(103.97 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -9.00706 3.98109 -51.0671 -39.4625 -8.21403 -30.006 176.954 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921434 -0.388535 0.0) (0.388535 0.921434 0.0) (0.0 0.0 1.0)) pos #f(-168.122 -28.3034 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.88154 -0.47211 0.0) (0.47211 0.88154 0.0) (0.0 0.0 1.0)) pos #f(-169.597 -30.0918 0.0)) object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.849608) #s(costed-arc plist nil from #1# to #1431=#s(extended-node plist ((:name . "r-0-1-13")) arc-list (#s(costed-arc plist nil from #1431# to #3# cost 0.986375) #s(costed-arc plist nil from #1431# to #1397# cost 2.28219) #s(costed-arc plist nil from #1431# to #1398# cost 1.54028) #s(costed-arc plist nil from #1431# to #1399# cost 1.39427) #s(costed-arc plist nil from #1431# to #1400# cost 0.967877) #s(costed-arc plist nil from #1431# to #1401# cost 1.05894) #s(costed-arc plist nil from #1431# to #1402# cost 1.33148) #s(costed-arc plist nil from #1431# to #1403# cost 1.58857) #s(costed-arc plist nil from #1431# to #1404# cost 0.929606) #s(costed-arc plist nil from #1431# to #1405# cost 0.858885) #s(costed-arc plist nil from #1431# to #1406# cost 0.831376) #s(costed-arc plist nil from #1431# to #1407# cost 0.827341) #s(costed-arc plist nil from #1431# to #1408# cost 0.802397) #s(costed-arc plist nil from #1431# to #1409# cost 0.848836) #s(costed-arc plist nil from #1431# to #1410# cost 0.874055) #s(costed-arc plist nil from #1431# to #1411# cost 0.878206) #s(costed-arc plist nil from #1431# to #1412# cost 0.872657) #s(costed-arc plist nil from #1431# to #1413# cost 0.857566) #s(costed-arc plist nil from #1431# to #1414# cost 0.876265) #s(costed-arc plist nil from #1431# to #1415# cost 0.829076) #s(costed-arc plist nil from #1431# to #1416# cost 0.902414) #s(costed-arc plist nil from #1431# to #1417# cost 0.929468) #s(costed-arc plist nil from #1431# to #1418# cost 0.939194) #s(costed-arc plist nil from #1431# to #1419# cost 0.9438) #s(costed-arc plist nil from #1431# to #1420# cost 0.926035) #s(costed-arc plist nil from #1431# to #1421# cost 0.918348)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(167.343 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -2.78803 -14.7319 -74.641 -34.5535 -13.3754 -5.80367 179.521 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.913241 -0.407419 0.0) (0.407419 0.913241 0.0) (0.0 0.0 1.0)) pos #f(-167.609 -54.4769 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.946879) #s(costed-arc plist nil from #1# to #1432=#s(extended-node plist ((:name . "r-0-1-12")) arc-list (#s(costed-arc plist nil from #1432# to #3# cost 1.04578) #s(costed-arc plist nil from #1432# to #1397# cost 2.44376) #s(costed-arc plist nil from #1432# to #1398# cost 1.4736) #s(costed-arc plist nil from #1432# to #1399# cost 1.32102) #s(costed-arc plist nil from #1432# to #1400# cost 0.826819) #s(costed-arc plist nil from #1432# to #1401# cost 0.934992) #s(costed-arc plist nil from #1432# to #1402# cost 1.24097) #s(costed-arc plist nil from #1432# to #1403# cost 1.41397) #s(costed-arc plist nil from #1432# to #1404# cost 0.838419) #s(costed-arc plist nil from #1432# to #1405# cost 0.782138) #s(costed-arc plist nil from #1432# to #1406# cost 0.750566) #s(costed-arc plist nil from #1432# to #1407# cost 0.72573) #s(costed-arc plist nil from #1432# to #1408# cost 0.677979) #s(costed-arc plist nil from #1432# to #1409# cost 0.679882) #s(costed-arc plist nil from #1432# to #1410# cost 0.842232) #s(costed-arc plist nil from #1432# to #1411# cost 0.842475) #s(costed-arc plist nil from #1432# to #1412# cost 0.833729) #s(costed-arc plist nil from #1432# to #1413# cost 0.81199) #s(costed-arc plist nil from #1432# to #1414# cost 0.804185) #s(costed-arc plist nil from #1432# to #1415# cost 0.728625) #s(costed-arc plist nil from #1432# to #1416# cost 0.918207) #s(costed-arc plist nil from #1432# to #1417# cost 0.941093) #s(costed-arc plist nil from #1432# to #1418# cost 0.937986) #s(costed-arc plist nil from #1432# to #1419# cost 0.918139) #s(costed-arc plist nil from #1432# to #1420# cost 0.868785) #s(costed-arc plist nil from #1432# to #1421# cost 0.843284)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(201.884 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 7.51998 -17.8937 -36.6941 -19.8443 -26.9205 -5.73354 177.745 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.822791 -0.568343 0.0) (0.568343 0.822791 0.0) (0.0 0.0 1.0)) pos #f(-83.0211 -167.69 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.00751) #s(costed-arc plist nil from #1# to #1433=#s(extended-node plist ((:name . "r-0-1-11")) arc-list (#s(costed-arc plist nil from #1433# to #3# cost 0.767224) #s(costed-arc plist nil from #1433# to #1397# cost 1.8945) #s(costed-arc plist nil from #1433# to #1398# cost 1.55797) #s(costed-arc plist nil from #1433# to #1399# cost 1.41494) #s(costed-arc plist nil from #1433# to #1400# cost 1.08947) #s(costed-arc plist nil from #1433# to #1401# cost 1.18076) #s(costed-arc plist nil from #1433# to #1402# cost 1.46263) #s(costed-arc plist nil from #1433# to #1403# cost 1.77687) #s(costed-arc plist nil from #1433# to #1404# cost 0.860377) #s(costed-arc plist nil from #1433# to #1405# cost 0.756914) #s(costed-arc plist nil from #1433# to #1406# cost 0.732914) #s(costed-arc plist nil from #1433# to #1407# cost 0.77218) #s(costed-arc plist nil from #1433# to #1408# cost 0.812494) #s(costed-arc plist nil from #1433# to #1409# cost 0.953175) #s(costed-arc plist nil from #1433# to #1410# cost 0.69869) #s(costed-arc plist nil from #1433# to #1411# cost 0.702251) #s(costed-arc plist nil from #1433# to #1412# cost 0.7103) #s(costed-arc plist nil from #1433# to #1413# cost 0.72264) #s(costed-arc plist nil from #1433# to #1414# cost 0.805306) #s(costed-arc plist nil from #1433# to #1415# cost 0.834102) #s(costed-arc plist nil from #1433# to #1416# cost 0.717435) #s(costed-arc plist nil from #1433# to #1417# cost 0.747869) #s(costed-arc plist nil from #1433# to #1418# cost 0.777485) #s(costed-arc plist nil from #1433# to #1419# cost 0.816157) #s(costed-arc plist nil from #1433# to #1420# cost 0.846889) #s(costed-arc plist nil from #1433# to #1421# cost 0.904653)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(91.2319 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.6895 40.0076 -70.4092 -54.7152 -31.6773 -38.6285 176.315 0.0 0.0) robot-pose-optimized #f(90.7651 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -9.73519 40.3661 -62.5336 -45.477 -32.5089 -56.5192 175.377 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.979268 -0.202569 0.0) (0.202569 0.979268 0.0) (0.0 0.0 1.0)) pos #f(-215.342 26.1041 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.996158 -0.087569 0.0) (0.087569 0.996158 0.0) (0.0 0.0 1.0)) pos #f(-196.571 44.196 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.957761) #s(costed-arc plist nil from #1# to #1434=#s(extended-node plist ((:name . "r-0-1-10")) arc-list (#s(costed-arc plist nil from #1434# to #3# cost 0.753923) #s(costed-arc plist nil from #1434# to #1397# cost 1.89214) #s(costed-arc plist nil from #1434# to #1398# cost 1.58085) #s(costed-arc plist nil from #1434# to #1399# cost 1.43478) #s(costed-arc plist nil from #1434# to #1400# cost 1.09098) #s(costed-arc plist nil from #1434# to #1401# cost 1.18298) #s(costed-arc plist nil from #1434# to #1402# cost 1.4688) #s(costed-arc plist nil from #1434# to #1403# cost 1.77026) #s(costed-arc plist nil from #1434# to #1404# cost 0.880215) #s(costed-arc plist nil from #1434# to #1405# cost 0.764771) #s(costed-arc plist nil from #1434# to #1406# cost 0.72526) #s(costed-arc plist nil from #1434# to #1407# cost 0.751578) #s(costed-arc plist nil from #1434# to #1408# cost 0.78906) #s(costed-arc plist nil from #1434# to #1409# cost 0.933471) #s(costed-arc plist nil from #1434# to #1410# cost 0.715866) #s(costed-arc plist nil from #1434# to #1411# cost 0.700095) #s(costed-arc plist nil from #1434# to #1412# cost 0.690652) #s(costed-arc plist nil from #1434# to #1413# cost 0.688686) #s(costed-arc plist nil from #1434# to #1414# cost 0.765407) #s(costed-arc plist nil from #1434# to #1415# cost 0.7933) #s(costed-arc plist nil from #1434# to #1416# cost 0.72833) #s(costed-arc plist nil from #1434# to #1417# cost 0.741943) #s(costed-arc plist nil from #1434# to #1418# cost 0.753626) #s(costed-arc plist nil from #1434# to #1419# cost 0.778823) #s(costed-arc plist nil from #1434# to #1420# cost 0.79857) #s(costed-arc plist nil from #1434# to #1421# cost 0.856003)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(92.6643 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -17.851 33.1697 -62.4802 -63.4066 -28.1262 -38.9243 176.841 0.0 0.0) robot-pose-optimized #f(92.4383 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -9.96413 26.5535 -63.6326 -54.4117 -33.9851 -56.5962 175.977 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.979989 -0.19905 0.0) (0.19905 0.979989 0.0) (0.0 0.0 1.0)) pos #f(-225.317 17.4243 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.997834 -0.065788 0.0) (0.065788 0.997834 0.0) (0.0 0.0 1.0)) pos #f(-207.748 34.696 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.925753) #s(costed-arc plist nil from #1# to #1435=#s(extended-node plist ((:name . "r-0-1-9")) arc-list (#s(costed-arc plist nil from #1435# to #3# cost 0.722958) #s(costed-arc plist nil from #1435# to #1397# cost 1.90293) #s(costed-arc plist nil from #1435# to #1398# cost 1.61401) #s(costed-arc plist nil from #1435# to #1399# cost 1.46229) #s(costed-arc plist nil from #1435# to #1400# cost 1.10114) #s(costed-arc plist nil from #1435# to #1401# cost 1.18832) #s(costed-arc plist nil from #1435# to #1402# cost 1.47911) #s(costed-arc plist nil from #1435# to #1403# cost 1.75192) #s(costed-arc plist nil from #1435# to #1404# cost 0.913675) #s(costed-arc plist nil from #1435# to #1405# cost 0.792052) #s(costed-arc plist nil from #1435# to #1406# cost 0.74265) #s(costed-arc plist nil from #1435# to #1407# cost 0.758954) #s(costed-arc plist nil from #1435# to #1408# cost 0.78533) #s(costed-arc plist nil from #1435# to #1409# cost 0.921841) #s(costed-arc plist nil from #1435# to #1410# cost 0.758182) #s(costed-arc plist nil from #1435# to #1411# cost 0.732558) #s(costed-arc plist nil from #1435# to #1412# cost 0.709496) #s(costed-arc plist nil from #1435# to #1413# cost 0.693581) #s(costed-arc plist nil from #1435# to #1414# cost 0.761516) #s(costed-arc plist nil from #1435# to #1415# cost 0.776745) #s(costed-arc plist nil from #1435# to #1416# cost 0.773249) #s(costed-arc plist nil from #1435# to #1417# cost 0.772743) #s(costed-arc plist nil from #1435# to #1418# cost 0.771562) #s(costed-arc plist nil from #1435# to #1419# cost 0.783819) #s(costed-arc plist nil from #1435# to #1420# cost 0.792057) #s(costed-arc plist nil from #1435# to #1421# cost 0.838967)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(93.7342 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -16.5799 21.1319 -57.779 -68.6319 -27.3332 -41.2072 177.623 0.0 0.0) robot-pose-optimized #f(95.1086 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.83 14.2432 -60.4231 -61.3792 -31.2801 -59.4261 177.783 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.979117 -0.203298 0.0) (0.203298 0.979117 0.0) (0.0 0.0 1.0)) pos #f(-202.354 7.51379 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.986109 -0.166101 0.0) (0.166101 0.986109 0.0) (0.0 0.0 1.0)) pos #f(-188.499 22.0929 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.888386) #s(costed-arc plist nil from #1# to #1436=#s(extended-node plist ((:name . "r-0-1-8")) arc-list (#s(costed-arc plist nil from #1436# to #3# cost 0.75894) #s(costed-arc plist nil from #1436# to #1397# cost 1.9228) #s(costed-arc plist nil from #1436# to #1398# cost 1.60716) #s(costed-arc plist nil from #1436# to #1399# cost 1.44662) #s(costed-arc plist nil from #1436# to #1400# cost 1.07408) #s(costed-arc plist nil from #1436# to #1401# cost 1.15448) #s(costed-arc plist nil from #1436# to #1402# cost 1.44599) #s(costed-arc plist nil from #1436# to #1403# cost 1.70303) #s(costed-arc plist nil from #1436# to #1404# cost 0.905542) #s(costed-arc plist nil from #1436# to #1405# cost 0.782473) #s(costed-arc plist nil from #1436# to #1406# cost 0.728222) #s(costed-arc plist nil from #1436# to #1407# cost 0.738569) #s(costed-arc plist nil from #1436# to #1408# cost 0.745051) #s(costed-arc plist nil from #1436# to #1409# cost 0.86147) #s(costed-arc plist nil from #1436# to #1410# cost 0.776543) #s(costed-arc plist nil from #1436# to #1411# cost 0.751634) #s(costed-arc plist nil from #1436# to #1412# cost 0.72257) #s(costed-arc plist nil from #1436# to #1413# cost 0.695931) #s(costed-arc plist nil from #1436# to #1414# cost 0.752414) #s(costed-arc plist nil from #1436# to #1415# cost 0.739556) #s(costed-arc plist nil from #1436# to #1416# cost 0.811729) #s(costed-arc plist nil from #1436# to #1417# cost 0.803294) #s(costed-arc plist nil from #1436# to #1418# cost 0.796676) #s(costed-arc plist nil from #1436# to #1419# cost 0.797216) #s(costed-arc plist nil from #1436# to #1420# cost 0.79337) #s(costed-arc plist nil from #1436# to #1421# cost 0.820429)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(96.6386 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -15.0318 6.56438 -49.8402 -65.4391 -32.3185 -45.6451 167.924 0.0 0.0) robot-pose-optimized #f(100.682 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -16.9598 -3.04255 -53.71 -57.9464 -41.6094 -64.7468 167.01 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.975097 -0.221779 0.0) (0.221779 0.975097 0.0) (0.0 0.0 1.0)) pos #f(-188.722 9.95403 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.970818 -0.239819 0.0) (0.239819 0.970818 0.0) (0.0 0.0 1.0)) pos #f(-186.195 20.7781 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.878145) #s(costed-arc plist nil from #1# to #1437=#s(extended-node plist ((:name . "r-0-1-7")) arc-list (#s(costed-arc plist nil from #1437# to #3# cost 0.795116) #s(costed-arc plist nil from #1437# to #1397# cost 1.95545) #s(costed-arc plist nil from #1437# to #1398# cost 1.64378) #s(costed-arc plist nil from #1437# to #1399# cost 1.47811) #s(costed-arc plist nil from #1437# to #1400# cost 1.07798) #s(costed-arc plist nil from #1437# to #1401# cost 1.18177) #s(costed-arc plist nil from #1437# to #1402# cost 1.45812) #s(costed-arc plist nil from #1437# to #1403# cost 1.73082) #s(costed-arc plist nil from #1437# to #1404# cost 0.944649) #s(costed-arc plist nil from #1437# to #1405# cost 0.838755) #s(costed-arc plist nil from #1437# to #1406# cost 0.777826) #s(costed-arc plist nil from #1437# to #1407# cost 0.750311) #s(costed-arc plist nil from #1437# to #1408# cost 0.743837) #s(costed-arc plist nil from #1437# to #1409# cost 0.841966) #s(costed-arc plist nil from #1437# to #1410# cost 0.863266) #s(costed-arc plist nil from #1437# to #1411# cost 0.83269) #s(costed-arc plist nil from #1437# to #1412# cost 0.796847) #s(costed-arc plist nil from #1437# to #1413# cost 0.750742) #s(costed-arc plist nil from #1437# to #1414# cost 0.754873) #s(costed-arc plist nil from #1437# to #1415# cost 0.726603) #s(costed-arc plist nil from #1437# to #1416# cost 0.902904) #s(costed-arc plist nil from #1437# to #1417# cost 0.900621) #s(costed-arc plist nil from #1437# to #1418# cost 0.877917) #s(costed-arc plist nil from #1437# to #1419# cost 0.853986) #s(costed-arc plist nil from #1437# to #1420# cost 0.807173) #s(costed-arc plist nil from #1437# to #1421# cost 0.79315)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(98.9335 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.21567 2.17863 -35.5263 -63.7168 -17.1274 -26.4195 178.491 0.0 0.0) robot-pose-optimized #f(101.671 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.0165 0.867281 -35.5794 -57.5197 -8.81975 -46.3216 178.01 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.974622 -0.223855 0.0) (0.223855 0.974622 0.0) (0.0 0.0 1.0)) pos #f(-196.154 32.4833 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.909081 -0.41662 0.0) (0.41662 0.909081 0.0) (0.0 0.0 1.0)) pos #f(-203.283 26.6862 0.0)) object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.862108) #s(costed-arc plist nil from #1# to #1438=#s(extended-node plist ((:name . "r-0-1-6")) arc-list (#s(costed-arc plist nil from #1438# to #3# cost 0.866159) #s(costed-arc plist nil from #1438# to #1397# cost 2.02788) #s(costed-arc plist nil from #1438# to #1398# cost 1.60975) #s(costed-arc plist nil from #1438# to #1399# cost 1.44332) #s(costed-arc plist nil from #1438# to #1400# cost 1.01552) #s(costed-arc plist nil from #1438# to #1401# cost 1.1195) #s(costed-arc plist nil from #1438# to #1402# cost 1.39214) #s(costed-arc plist nil from #1438# to #1403# cost 1.65796) #s(costed-arc plist nil from #1438# to #1404# cost 0.938493) #s(costed-arc plist nil from #1438# to #1405# cost 0.848003) #s(costed-arc plist nil from #1438# to #1406# cost 0.7942) #s(costed-arc plist nil from #1438# to #1407# cost 0.762136) #s(costed-arc plist nil from #1438# to #1408# cost 0.730326) #s(costed-arc plist nil from #1438# to #1409# cost 0.783211) #s(costed-arc plist nil from #1438# to #1410# cost 0.894256) #s(costed-arc plist nil from #1438# to #1411# cost 0.874329) #s(costed-arc plist nil from #1438# to #1412# cost 0.844862) #s(costed-arc plist nil from #1438# to #1413# cost 0.800802) #s(costed-arc plist nil from #1438# to #1414# cost 0.792431) #s(costed-arc plist nil from #1438# to #1415# cost 0.732907) #s(costed-arc plist nil from #1438# to #1416# cost 0.946422) #s(costed-arc plist nil from #1438# to #1417# cost 0.950612) #s(costed-arc plist nil from #1438# to #1418# cost 0.933368) #s(costed-arc plist nil from #1438# to #1419# cost 0.908357) #s(costed-arc plist nil from #1438# to #1420# cost 0.855916) #s(costed-arc plist nil from #1438# to #1421# cost 0.820506)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(127.771 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.73306 -13.5657 -34.0484 -50.7619 -18.279 -18.4748 177.068 0.0 0.0) robot-pose-optimized #f(130.756 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -32.1072 -15.3399 -35.5729 -47.965 -11.5936 -40.3488 175.477 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.964881 -0.262688 0.0) (0.262688 0.964881 0.0) (0.0 0.0 1.0)) pos #f(-193.757 21.184 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.745428 -0.666586 0.0) (0.666586 0.745428 0.0) (0.0 0.0 1.0)) pos #f(-217.236 -6.78015 0.0)) object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.88932) #s(costed-arc plist nil from #1# to #1439=#s(extended-node plist ((:name . "r-0-1-5")) arc-list (#s(costed-arc plist nil from #1439# to #3# cost 0.8165) #s(costed-arc plist nil from #1439# to #1397# cost 1.96165) #s(costed-arc plist nil from #1439# to #1398# cost 1.63614) #s(costed-arc plist nil from #1439# to #1399# cost 1.51256) #s(costed-arc plist nil from #1439# to #1400# cost 1.18208) #s(costed-arc plist nil from #1439# to #1401# cost 1.26016) #s(costed-arc plist nil from #1439# to #1402# cost 1.55849) #s(costed-arc plist nil from #1439# to #1403# cost 1.80518) #s(costed-arc plist nil from #1439# to #1404# cost 0.963791) #s(costed-arc plist nil from #1439# to #1405# cost 0.853141) #s(costed-arc plist nil from #1439# to #1406# cost 0.822874) #s(costed-arc plist nil from #1439# to #1407# cost 0.860121) #s(costed-arc plist nil from #1439# to #1408# cost 0.912807) #s(costed-arc plist nil from #1439# to #1409# cost 1.06917) #s(costed-arc plist nil from #1439# to #1410# cost 0.751215) #s(costed-arc plist nil from #1439# to #1411# cost 0.731676) #s(costed-arc plist nil from #1439# to #1412# cost 0.737973) #s(costed-arc plist nil from #1439# to #1413# cost 0.768935) #s(costed-arc plist nil from #1439# to #1414# cost 0.868186) #s(costed-arc plist nil from #1439# to #1415# cost 0.919123) #s(costed-arc plist nil from #1439# to #1416# cost 0.686259) #s(costed-arc plist nil from #1439# to #1417# cost 0.715802) #s(costed-arc plist nil from #1439# to #1418# cost 0.743505) #s(costed-arc plist nil from #1439# to #1419# cost 0.797116) #s(costed-arc plist nil from #1439# to #1420# cost 0.858592) #s(costed-arc plist nil from #1439# to #1421# cost 0.972608)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(92.3219 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.0927 51.285 -66.7402 -63.7366 -25.8848 -41.8814 177.256 0.0 0.0) robot-pose-optimized #f(91.5641 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.8155 40.9173 -70.9736 -50.7081 -28.0943 -65.152 176.64 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.987429 -0.158063 0.0) (0.158063 0.987429 0.0) (0.0 0.0 1.0)) pos #f(-287.369 -77.8917 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999415 -0.034204 0.0) (0.034204 0.999415 0.0) (0.0 0.0 1.0)) pos #f(-270.242 -61.7227 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.06854) #s(costed-arc plist nil from #1# to #1440=#s(extended-node plist ((:name . "r-0-1-4")) arc-list (#s(costed-arc plist nil from #1440# to #3# cost 0.804398) #s(costed-arc plist nil from #1440# to #1397# cost 1.92386) #s(costed-arc plist nil from #1440# to #1398# cost 1.61956) #s(costed-arc plist nil from #1440# to #1399# cost 1.49005) #s(costed-arc plist nil from #1440# to #1400# cost 1.17407) #s(costed-arc plist nil from #1440# to #1401# cost 1.24193) #s(costed-arc plist nil from #1440# to #1402# cost 1.52313) #s(costed-arc plist nil from #1440# to #1403# cost 1.80244) #s(costed-arc plist nil from #1440# to #1404# cost 0.953019) #s(costed-arc plist nil from #1440# to #1405# cost 0.829414) #s(costed-arc plist nil from #1440# to #1406# cost 0.787889) #s(costed-arc plist nil from #1440# to #1407# cost 0.819452) #s(costed-arc plist nil from #1440# to #1408# cost 0.866358) #s(costed-arc plist nil from #1440# to #1409# cost 1.02275) #s(costed-arc plist nil from #1440# to #1410# cost 0.731375) #s(costed-arc plist nil from #1440# to #1411# cost 0.696773) #s(costed-arc plist nil from #1440# to #1412# cost 0.686102) #s(costed-arc plist nil from #1440# to #1413# cost 0.705363) #s(costed-arc plist nil from #1440# to #1414# cost 0.806303) #s(costed-arc plist nil from #1440# to #1415# cost 0.853649) #s(costed-arc plist nil from #1440# to #1416# cost 0.677012) #s(costed-arc plist nil from #1440# to #1417# cost 0.682549) #s(costed-arc plist nil from #1440# to #1418# cost 0.693882) #s(costed-arc plist nil from #1440# to #1419# cost 0.734113) #s(costed-arc plist nil from #1440# to #1420# cost 0.788202) #s(costed-arc plist nil from #1440# to #1421# cost 0.900296)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(91.885 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.5771 38.3115 -65.2197 -74.5594 -27.674 -43.9123 176.898 0.0 0.0) robot-pose-optimized #f(91.5773 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.6803 26.7954 -68.5664 -62.7978 -32.3554 -69.6671 176.091 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.986649 -0.162862 0.0) (0.162862 0.986649 0.0) (0.0 0.0 1.0)) pos #f(-300.151 -50.6748 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.99535 -0.096323 0.0) (0.096323 0.99535 0.0) (0.0 0.0 1.0)) pos #f(-284.551 -36.9556 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.999548) #s(costed-arc plist nil from #1# to #1441=#s(extended-node plist ((:name . "r-0-1-3")) arc-list (#s(costed-arc plist nil from #1441# to #3# cost 0.787447) #s(costed-arc plist nil from #1441# to #1397# cost 1.91886) #s(costed-arc plist nil from #1441# to #1398# cost 1.6423) #s(costed-arc plist nil from #1441# to #1399# cost 1.50658) #s(costed-arc plist nil from #1441# to #1400# cost 1.16546) #s(costed-arc plist nil from #1441# to #1401# cost 1.23547) #s(costed-arc plist nil from #1441# to #1402# cost 1.52527) #s(costed-arc plist nil from #1441# to #1403# cost 1.79054) #s(costed-arc plist nil from #1441# to #1404# cost 0.968365) #s(costed-arc plist nil from #1441# to #1405# cost 0.838428) #s(costed-arc plist nil from #1441# to #1406# cost 0.783336) #s(costed-arc plist nil from #1441# to #1407# cost 0.798052) #s(costed-arc plist nil from #1441# to #1408# cost 0.838064) #s(costed-arc plist nil from #1441# to #1409# cost 0.992361) #s(costed-arc plist nil from #1441# to #1410# cost 0.763843) #s(costed-arc plist nil from #1441# to #1411# cost 0.7159) #s(costed-arc plist nil from #1441# to #1412# cost 0.68635) #s(costed-arc plist nil from #1441# to #1413# cost 0.682439) #s(costed-arc plist nil from #1441# to #1414# cost 0.766429) #s(costed-arc plist nil from #1441# to #1415# cost 0.807633) #s(costed-arc plist nil from #1441# to #1416# cost 0.720265) #s(costed-arc plist nil from #1441# to #1417# cost 0.712072) #s(costed-arc plist nil from #1441# to #1418# cost 0.7014) #s(costed-arc plist nil from #1441# to #1419# cost 0.71826) #s(costed-arc plist nil from #1441# to #1420# cost 0.747968) #s(costed-arc plist nil from #1441# to #1421# cost 0.845396)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(92.8847 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.8656 29.2639 -55.1404 -80.9398 -24.2168 -42.2826 177.51 0.0 0.0) robot-pose-optimized #f(93.8444 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.5774 18.1947 -60.2538 -72.1309 -27.2261 -64.0823 176.745 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.985875 -0.16748 0.0) (0.16748 0.985875 0.0) (0.0 0.0 1.0)) pos #f(-291.165 -45.3453 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.989538 -0.144276 0.0) (0.144276 0.989538 0.0) (0.0 0.0 1.0)) pos #f(-276.157 -33.1957 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.951329) #s(costed-arc plist nil from #1# to #1442=#s(extended-node plist ((:name . "r-0-1-2")) arc-list (#s(costed-arc plist nil from #1442# to #3# cost 0.77673) #s(costed-arc plist nil from #1442# to #1397# cost 1.91812) #s(costed-arc plist nil from #1442# to #1398# cost 1.65616) #s(costed-arc plist nil from #1442# to #1399# cost 1.51332) #s(costed-arc plist nil from #1442# to #1400# cost 1.13443) #s(costed-arc plist nil from #1442# to #1401# cost 1.20784) #s(costed-arc plist nil from #1442# to #1402# cost 1.5145) #s(costed-arc plist nil from #1442# to #1403# cost 1.76501) #s(costed-arc plist nil from #1442# to #1404# cost 0.978371) #s(costed-arc plist nil from #1442# to #1405# cost 0.847729) #s(costed-arc plist nil from #1442# to #1406# cost 0.782607) #s(costed-arc plist nil from #1442# to #1407# cost 0.77855) #s(costed-arc plist nil from #1442# to #1408# cost 0.804873) #s(costed-arc plist nil from #1442# to #1409# cost 0.948407) #s(costed-arc plist nil from #1442# to #1410# cost 0.805252) #s(costed-arc plist nil from #1442# to #1411# cost 0.753107) #s(costed-arc plist nil from #1442# to #1412# cost 0.710786) #s(costed-arc plist nil from #1442# to #1413# cost 0.683086) #s(costed-arc plist nil from #1442# to #1414# cost 0.739139) #s(costed-arc plist nil from #1442# to #1415# cost 0.76178) #s(costed-arc plist nil from #1442# to #1416# cost 0.783546) #s(costed-arc plist nil from #1442# to #1417# cost 0.769333) #s(costed-arc plist nil from #1442# to #1418# cost 0.743545) #s(costed-arc plist nil from #1442# to #1419# cost 0.736032) #s(costed-arc plist nil from #1442# to #1420# cost 0.732242) #s(costed-arc plist nil from #1442# to #1421# cost 0.798277)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(93.9781 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.5325 17.5669 -44.785 -82.4593 -21.4183 -38.1377 178.083 0.0 0.0) robot-pose-optimized #f(99.7679 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -33.4297 8.83072 -51.9117 -85.775 -30.219 -44.8249 178.362 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.984645 -0.174566 0.0) (0.174566 0.984645 0.0) (0.0 0.0 1.0)) pos #f(-272.05 -34.9265 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.958805 -0.284065 0.0) (0.284065 0.958805 0.0) (0.0 0.0 1.0)) pos #f(-254.615 -24.0397 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.907274) #s(costed-arc plist nil from #1# to #1443=#s(extended-node plist ((:name . "r-0-1-1")) arc-list (#s(costed-arc plist nil from #1443# to #3# cost 0.780915) #s(costed-arc plist nil from #1443# to #1397# cost 1.9479) #s(costed-arc plist nil from #1443# to #1398# cost 1.70695) #s(costed-arc plist nil from #1443# to #1399# cost 1.55468) #s(costed-arc plist nil from #1443# to #1400# cost 1.13958) #s(costed-arc plist nil from #1443# to #1401# cost 1.23836) #s(costed-arc plist nil from #1443# to #1402# cost 1.54013) #s(costed-arc plist nil from #1443# to #1403# cost 1.77093) #s(costed-arc plist nil from #1443# to #1404# cost 1.01618) #s(costed-arc plist nil from #1443# to #1405# cost 0.892672) #s(costed-arc plist nil from #1443# to #1406# cost 0.821452) #s(costed-arc plist nil from #1443# to #1407# cost 0.794733) #s(costed-arc plist nil from #1443# to #1408# cost 0.804816) #s(costed-arc plist nil from #1443# to #1409# cost 0.927529) #s(costed-arc plist nil from #1443# to #1410# cost 0.88788) #s(costed-arc plist nil from #1443# to #1411# cost 0.837068) #s(costed-arc plist nil from #1443# to #1412# cost 0.787563) #s(costed-arc plist nil from #1443# to #1413# cost 0.738017) #s(costed-arc plist nil from #1443# to #1414# cost 0.754789) #s(costed-arc plist nil from #1443# to #1415# cost 0.754807) #s(costed-arc plist nil from #1443# to #1416# cost 0.890124) #s(costed-arc plist nil from #1443# to #1417# cost 0.876763) #s(costed-arc plist nil from #1443# to #1418# cost 0.840728) #s(costed-arc plist nil from #1443# to #1419# cost 0.811603) #s(costed-arc plist nil from #1443# to #1420# cost 0.768096) #s(costed-arc plist nil from #1443# to #1421# cost 0.78618)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(94.8027 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -12.7373 8.36331 -29.4454 -80.6415 -12.8162 -32.4846 178.967 0.0 0.0) robot-pose-optimized #f(101.977 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -24.2727 9.57421 -29.1872 -83.772 -1.5225 -43.9033 178.365 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.981291 -0.192532 0.0) (0.192532 0.981291 0.0) (0.0 0.0 1.0)) pos #f(-231.267 -16.2582 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.906705 -0.421766 0.0) (0.421766 0.906705 0.0) (0.0 0.0 1.0)) pos #f(-216.029 -12.5337 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.888662) #s(costed-arc plist nil from #1# to #1444=#s(extended-node plist ((:name . "r-0-1-0")) arc-list (#s(costed-arc plist nil from #1444# to #3# cost 0.799634) #s(costed-arc plist nil from #1444# to #1397# cost 1.97957) #s(costed-arc plist nil from #1444# to #1398# cost 1.72919) #s(costed-arc plist nil from #1444# to #1399# cost 1.56576) #s(costed-arc plist nil from #1444# to #1400# cost 1.14106) #s(costed-arc plist nil from #1444# to #1401# cost 1.24375) #s(costed-arc plist nil from #1444# to #1402# cost 1.52886) #s(costed-arc plist nil from #1444# to #1403# cost 1.75341) #s(costed-arc plist nil from #1444# to #1404# cost 1.04318) #s(costed-arc plist nil from #1444# to #1405# cost 0.933888) #s(costed-arc plist nil from #1444# to #1406# cost 0.864296) #s(costed-arc plist nil from #1444# to #1407# cost 0.820804) #s(costed-arc plist nil from #1444# to #1408# cost 0.805582) #s(costed-arc plist nil from #1444# to #1409# cost 0.891583) #s(costed-arc plist nil from #1444# to #1410# cost 0.96486) #s(costed-arc plist nil from #1444# to #1411# cost 0.922091) #s(costed-arc plist nil from #1444# to #1412# cost 0.873986) #s(costed-arc plist nil from #1444# to #1413# cost 0.814658) #s(costed-arc plist nil from #1444# to #1414# cost 0.798163) #s(costed-arc plist nil from #1444# to #1415# cost 0.760792) #s(costed-arc plist nil from #1444# to #1416# cost 0.99277) #s(costed-arc plist nil from #1444# to #1417# cost 0.983173) #s(costed-arc plist nil from #1444# to #1418# cost 0.946069) #s(costed-arc plist nil from #1444# to #1419# cost 0.905269) #s(costed-arc plist nil from #1444# to #1420# cost 0.837388) #s(costed-arc plist nil from #1444# to #1421# cost 0.805201)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(97.1726 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.14222 -8.11135 -20.9345 -72.7314 -12.4133 -21.5409 179.266 0.0 0.0) robot-pose-optimized #f(105.921 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.8321 -6.00532 -13.9642 -74.8785 -3.75516 -36.2163 172.962 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.97912 -0.203285 0.0) (0.203285 0.97912 0.0) (0.0 0.0 1.0)) pos #f(-189.598 5.3148 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.78321 -0.621757 0.0) (0.621757 0.78321 0.0) (0.0 0.0 1.0)) pos #f(-205.581 -13.6555 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.884458)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(216.367 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -74.3326 6.05656 -21.6745 -91.1949 -41.959 -28.7203 209.339 0.0 0.0) robot-pose-optimized #f(233.912 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.3082 -6.13873 -7.51372 -60.7329 -60.0296 -81.1997 242.128 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.868945 -0.494909 0.0) (0.494909 0.868945 0.0) (0.0 0.0 1.0)) pos #f(2.18675 281.018 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999983 0.005869 0.0) (-0.005869 0.999983 0.0) (0.0 0.0 1.0)) pos #f(34.0844 281.167 0.0)) object-coords-index 0 object-coords #187# ik-target-coords nil torque #f(0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.600955 15.5376 -6.83774 19.9323 -3.33522 3.94028 1.156576e-15 0.0 0.0) overload? nil transitable-nodes nil intransitable-nodes nil) #1445=#s(extended-node plist ((:name . "r-0-0-1")) arc-list (#s(costed-arc plist nil from #1445# to #2# cost 0.998474) #s(costed-arc plist nil from #1445# to #1422# cost 1.77877) #s(costed-arc plist nil from #1445# to #1423# cost 1.74577) #s(costed-arc plist nil from #1445# to #1424# cost 1.707) #s(costed-arc plist nil from #1445# to #1425# cost 1.82259) #s(costed-arc plist nil from #1445# to #1426# cost 1.78355) #s(costed-arc plist nil from #1445# to #1427# cost 0.90652) #s(costed-arc plist nil from #1445# to #1428# cost 0.877903) #s(costed-arc plist nil from #1445# to #1429# cost 0.873478) #s(costed-arc plist nil from #1445# to #1430# cost 0.825063) #s(costed-arc plist nil from #1445# to #1431# cost 0.92957) #s(costed-arc plist nil from #1445# to #1432# cost 1.02526) #s(costed-arc plist nil from #1445# to #1433# cost 0.881987) #s(costed-arc plist nil from #1445# to #1434# cost 0.851961) #s(costed-arc plist nil from #1445# to #1435# cost 0.82118) #s(costed-arc plist nil from #1445# to #1436# cost 0.831288) #s(costed-arc plist nil from #1445# to #1437# cost 0.833885) #s(costed-arc plist nil from #1445# to #1438# cost 0.88352) #s(costed-arc plist nil from #1445# to #1439# cost 0.974407) #s(costed-arc plist nil from #1445# to #1440# cost 0.909612) #s(costed-arc plist nil from #1445# to #1441# cost 0.869526) #s(costed-arc plist nil from #1445# to #1442# cost 0.844929) #s(costed-arc plist nil from #1445# to #1443# cost 0.844665) #s(costed-arc plist nil from #1445# to #1444# cost 0.872403)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(211.439 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.2203 20.7115 -29.4975 -94.1666 -30.4875 -47.2881 214.652 0.0 0.0) robot-pose-optimized #f(217.707 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.96 3.3588 -23.0949 -63.7682 -52.8455 -90.1412 228.239 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.872996 -0.487727 0.0) (0.487727 0.872996 0.0) (0.0 0.0 1.0)) pos #f(-22.6397 235.882 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.9999 0.014114 0.0) (-0.014114 0.9999 0.0) (0.0 0.0 1.0)) pos #f(-2.91411 240.766 0.0)) object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1446=#s(extended-node plist ((:name . "r-0-0-2")) arc-list (#s(costed-arc plist nil from #1446# to #2# cost 0.977702) #s(costed-arc plist nil from #1446# to #1422# cost 1.76266) #s(costed-arc plist nil from #1446# to #1423# cost 1.74307) #s(costed-arc plist nil from #1446# to #1424# cost 1.71045) #s(costed-arc plist nil from #1446# to #1425# cost 1.81843) #s(costed-arc plist nil from #1446# to #1426# cost 1.79296) #s(costed-arc plist nil from #1446# to #1427# cost 0.87684) #s(costed-arc plist nil from #1446# to #1428# cost 0.848297) #s(costed-arc plist nil from #1446# to #1429# cost 0.850108) #s(costed-arc plist nil from #1446# to #1430# cost 0.825241) #s(costed-arc plist nil from #1446# to #1431# cost 0.930269) #s(costed-arc plist nil from #1446# to #1432# cost 1.06315) #s(costed-arc plist nil from #1446# to #1433# cost 0.827299) #s(costed-arc plist nil from #1446# to #1434# cost 0.807752) #s(costed-arc plist nil from #1446# to #1435# cost 0.789407) #s(costed-arc plist nil from #1446# to #1436# cost 0.811607) #s(costed-arc plist nil from #1446# to #1437# cost 0.844386) #s(costed-arc plist nil from #1446# to #1438# cost 0.903823) #s(costed-arc plist nil from #1446# to #1439# cost 0.908984) #s(costed-arc plist nil from #1446# to #1440# cost 0.851453) #s(costed-arc plist nil from #1446# to #1441# cost 0.830774) #s(costed-arc plist nil from #1446# to #1442# cost 0.831791) #s(costed-arc plist nil from #1446# to #1443# cost 0.855421) #s(costed-arc plist nil from #1446# to #1444# cost 0.902098)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(206.362 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -74.1426 34.0001 -40.7116 -93.6661 -32.7784 -59.551 212.218 0.0 0.0) robot-pose-optimized #f(208.478 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.5655 10.461 -33.6289 -66.0707 -63.4771 -103.289 215.37 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.879623 -0.475671 0.0) (0.475671 0.879623 0.0) (0.0 0.0 1.0)) pos #f(-40.9513 210.401 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999738 0.02287 0.0) (-0.02287 0.999738 0.0) (0.0 0.0 1.0)) pos #f(-24.276 214.202 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1447=#s(extended-node plist ((:name . "r-0-0-3")) arc-list (#s(costed-arc plist nil from #1447# to #2# cost 0.955885) #s(costed-arc plist nil from #1447# to #1422# cost 1.75301) #s(costed-arc plist nil from #1447# to #1423# cost 1.72643) #s(costed-arc plist nil from #1447# to #1424# cost 1.69817) #s(costed-arc plist nil from #1447# to #1425# cost 1.79892) #s(costed-arc plist nil from #1447# to #1426# cost 1.77863) #s(costed-arc plist nil from #1447# to #1427# cost 0.838053) #s(costed-arc plist nil from #1447# to #1428# cost 0.811007) #s(costed-arc plist nil from #1447# to #1429# cost 0.816409) #s(costed-arc plist nil from #1447# to #1430# cost 0.818005) #s(costed-arc plist nil from #1447# to #1431# cost 0.917631) #s(costed-arc plist nil from #1447# to #1432# cost 1.08157) #s(costed-arc plist nil from #1447# to #1433# cost 0.778836) #s(costed-arc plist nil from #1447# to #1434# cost 0.774382) #s(costed-arc plist nil from #1447# to #1435# cost 0.76755) #s(costed-arc plist nil from #1447# to #1436# cost 0.793492) #s(costed-arc plist nil from #1447# to #1437# cost 0.856019) #s(costed-arc plist nil from #1447# to #1438# cost 0.915365) #s(costed-arc plist nil from #1447# to #1439# cost 0.859685) #s(costed-arc plist nil from #1447# to #1440# cost 0.812502) #s(costed-arc plist nil from #1447# to #1441# cost 0.814416) #s(costed-arc plist nil from #1447# to #1442# cost 0.83602) #s(costed-arc plist nil from #1447# to #1443# cost 0.877379) #s(costed-arc plist nil from #1447# to #1444# cost 0.930801)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(200.931 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -76.193 42.2059 -53.557 -87.1397 -40.2886 -69.3146 207.82 0.0 0.0) robot-pose-optimized #f(198.167 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -49.5898 23.3773 -38.0071 -74.2745 -76.7859 -114.592 208.231 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.886106 -0.463483 0.0) (0.463483 0.886106 0.0) (0.0 0.0 1.0)) pos #f(-52.9241 181.045 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.962082 -0.272762 0.0) (0.272762 0.962082 0.0) (0.0 0.0 1.0)) pos #f(-47.1192 198.049 0.0)) object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1448=#s(extended-node plist ((:name . "r-0-0-4")) arc-list (#s(costed-arc plist nil from #1448# to #2# cost 0.936345) #s(costed-arc plist nil from #1448# to #1422# cost 1.75209) #s(costed-arc plist nil from #1448# to #1423# cost 1.69787) #s(costed-arc plist nil from #1448# to #1424# cost 1.67223) #s(costed-arc plist nil from #1448# to #1425# cost 1.76574) #s(costed-arc plist nil from #1448# to #1426# cost 1.74478) #s(costed-arc plist nil from #1448# to #1427# cost 0.798008) #s(costed-arc plist nil from #1448# to #1428# cost 0.776327) #s(costed-arc plist nil from #1448# to #1429# cost 0.78447) #s(costed-arc plist nil from #1448# to #1430# cost 0.809363) #s(costed-arc plist nil from #1448# to #1431# cost 0.898793) #s(costed-arc plist nil from #1448# to #1432# cost 1.07963) #s(costed-arc plist nil from #1448# to #1433# cost 0.747658) #s(costed-arc plist nil from #1448# to #1434# cost 0.759909) #s(costed-arc plist nil from #1448# to #1435# cost 0.761925) #s(costed-arc plist nil from #1448# to #1436# cost 0.786405) #s(costed-arc plist nil from #1448# to #1437# cost 0.872203) #s(costed-arc plist nil from #1448# to #1438# cost 0.924734) #s(costed-arc plist nil from #1448# to #1439# cost 0.836605) #s(costed-arc plist nil from #1448# to #1440# cost 0.801573) #s(costed-arc plist nil from #1448# to #1441# cost 0.822948) #s(costed-arc plist nil from #1448# to #1442# cost 0.856948) #s(costed-arc plist nil from #1448# to #1443# cost 0.908546) #s(costed-arc plist nil from #1448# to #1444# cost 0.96005)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(196.207 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -76.7597 45.7424 -66.5164 -76.7628 -50.7151 -74.2299 203.76 0.0 0.0) robot-pose-optimized #f(190.341 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -47.6431 42.055 -35.2885 -52.2167 -61.6905 -114.592 202.922 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.889909 -0.456138 0.0) (0.456138 0.889909 0.0) (0.0 0.0 1.0)) pos #f(-54.0491 152.965 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.951858 -0.306541 0.0) (0.306541 0.951858 0.0) (0.0 0.0 1.0)) pos #f(-50.65 175.304 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1449=#s(extended-node plist ((:name . "r-0-0-5")) arc-list (#s(costed-arc plist nil from #1449# to #2# cost 0.982205) #s(costed-arc plist nil from #1449# to #1422# cost 1.73049) #s(costed-arc plist nil from #1449# to #1423# cost 1.71379) #s(costed-arc plist nil from #1449# to #1424# cost 1.68993) #s(costed-arc plist nil from #1449# to #1425# cost 1.77803) #s(costed-arc plist nil from #1449# to #1426# cost 1.74824) #s(costed-arc plist nil from #1449# to #1427# cost 0.818036) #s(costed-arc plist nil from #1449# to #1428# cost 0.800673) #s(costed-arc plist nil from #1449# to #1429# cost 0.809842) #s(costed-arc plist nil from #1449# to #1430# cost 0.858271) #s(costed-arc plist nil from #1449# to #1431# cost 0.936582) #s(costed-arc plist nil from #1449# to #1432# cost 1.11309) #s(costed-arc plist nil from #1449# to #1433# cost 0.785344) #s(costed-arc plist nil from #1449# to #1434# cost 0.813294) #s(costed-arc plist nil from #1449# to #1435# cost 0.8241) #s(costed-arc plist nil from #1449# to #1436# cost 0.843537) #s(costed-arc plist nil from #1449# to #1437# cost 0.941864) #s(costed-arc plist nil from #1449# to #1438# cost 0.984485) #s(costed-arc plist nil from #1449# to #1439# cost 0.889178) #s(costed-arc plist nil from #1449# to #1440# cost 0.864521) #s(costed-arc plist nil from #1449# to #1441# cost 0.898793) #s(costed-arc plist nil from #1449# to #1442# cost 0.937852) #s(costed-arc plist nil from #1449# to #1443# cost 0.994399) #s(costed-arc plist nil from #1449# to #1444# cost 1.03948)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(191.13 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -79.4716 47.9433 -76.9107 -65.7485 -65.9306 -72.9526 199.346 0.0 0.0) robot-pose-optimized #f(164.549 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.9943 43.4763 -50.4764 -48.2095 -85.5688 -114.592 198.21 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.889024 -0.457861 0.0) (0.457861 0.889024 0.0) (0.0 0.0 1.0)) pos #f(-38.0313 177.799 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.933318 -0.35905 0.0) (0.35905 0.933318 0.0) (0.0 0.0 1.0)) pos #f(-29.3171 195.679 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1450=#s(extended-node plist ((:name . "r-0-0-6")) arc-list (#s(costed-arc plist nil from #1450# to #2# cost 0.885005) #s(costed-arc plist nil from #1450# to #1422# cost 1.92563) #s(costed-arc plist nil from #1450# to #1423# cost 1.5225) #s(costed-arc plist nil from #1450# to #1424# cost 1.46835) #s(costed-arc plist nil from #1450# to #1425# cost 1.57189) #s(costed-arc plist nil from #1450# to #1426# cost 1.52198) #s(costed-arc plist nil from #1450# to #1427# cost 0.778809) #s(costed-arc plist nil from #1450# to #1428# cost 0.76717) #s(costed-arc plist nil from #1450# to #1429# cost 0.762772) #s(costed-arc plist nil from #1450# to #1430# cost 0.683542) #s(costed-arc plist nil from #1450# to #1431# cost 0.745151) #s(costed-arc plist nil from #1450# to #1432# cost 0.761446) #s(costed-arc plist nil from #1450# to #1433# cost 0.858095) #s(costed-arc plist nil from #1450# to #1434# cost 0.825187) #s(costed-arc plist nil from #1450# to #1435# cost 0.769785) #s(costed-arc plist nil from #1450# to #1436# cost 0.757538) #s(costed-arc plist nil from #1450# to #1437# cost 0.737137) #s(costed-arc plist nil from #1450# to #1438# cost 0.744483) #s(costed-arc plist nil from #1450# to #1439# cost 0.985034) #s(costed-arc plist nil from #1450# to #1440# cost 0.915986) #s(costed-arc plist nil from #1450# to #1441# cost 0.865799) #s(costed-arc plist nil from #1450# to #1442# cost 0.812672) #s(costed-arc plist nil from #1450# to #1443# cost 0.789247) #s(costed-arc plist nil from #1450# to #1444# cost 0.767072)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(221.265 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.3398 -11.0731 -44.3142 -80.1429 -31.3455 -28.6509 214.584 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.844679 -0.535273 0.0) (0.535273 0.844679 0.0) (0.0 0.0 1.0)) pos #f(5.37439 135.147 0.0)) base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1451=#s(extended-node plist ((:name . "r-0-0-7")) arc-list (#s(costed-arc plist nil from #1451# to #2# cost 0.954706) #s(costed-arc plist nil from #1451# to #1422# cost 1.83481) #s(costed-arc plist nil from #1451# to #1423# cost 1.65941) #s(costed-arc plist nil from #1451# to #1424# cost 1.61356) #s(costed-arc plist nil from #1451# to #1425# cost 1.70331) #s(costed-arc plist nil from #1451# to #1426# cost 1.66968) #s(costed-arc plist nil from #1451# to #1427# cost 0.856862) #s(costed-arc plist nil from #1451# to #1428# cost 0.833544) #s(costed-arc plist nil from #1451# to #1429# cost 0.834161) #s(costed-arc plist nil from #1451# to #1430# cost 0.79042) #s(costed-arc plist nil from #1451# to #1431# cost 0.860388) #s(costed-arc plist nil from #1451# to #1432# cost 0.945936) #s(costed-arc plist nil from #1451# to #1433# cost 0.883586) #s(costed-arc plist nil from #1451# to #1434# cost 0.855134) #s(costed-arc plist nil from #1451# to #1435# cost 0.811897) #s(costed-arc plist nil from #1451# to #1436# cost 0.815096) #s(costed-arc plist nil from #1451# to #1437# cost 0.828786) #s(costed-arc plist nil from #1451# to #1438# cost 0.860216) #s(costed-arc plist nil from #1451# to #1439# cost 0.997719) #s(costed-arc plist nil from #1451# to #1440# cost 0.921093) #s(costed-arc plist nil from #1451# to #1441# cost 0.882145) #s(costed-arc plist nil from #1451# to #1442# cost 0.853098) #s(costed-arc plist nil from #1451# to #1443# cost 0.861061) #s(costed-arc plist nil from #1451# to #1444# cost 0.871399)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(214.366 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -66.4629 0.894952 -51.0881 -94.223 -37.523 -37.852 214.415 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.862103 -0.506733 0.0) (0.506733 0.862103 0.0) (0.0 0.0 1.0)) pos #f(20.0977 209.957 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1452=#s(extended-node plist ((:name . "r-0-0-8")) arc-list (#s(costed-arc plist nil from #1452# to #2# cost 0.940519) #s(costed-arc plist nil from #1452# to #1422# cost 1.77446) #s(costed-arc plist nil from #1452# to #1423# cost 1.70956) #s(costed-arc plist nil from #1452# to #1424# cost 1.6673) #s(costed-arc plist nil from #1452# to #1425# cost 1.75089) #s(costed-arc plist nil from #1452# to #1426# cost 1.71567) #s(costed-arc plist nil from #1452# to #1427# cost 0.875503) #s(costed-arc plist nil from #1452# to #1428# cost 0.839447) #s(costed-arc plist nil from #1452# to #1429# cost 0.8315) #s(costed-arc plist nil from #1452# to #1430# cost 0.833703) #s(costed-arc plist nil from #1452# to #1431# cost 0.907804) #s(costed-arc plist nil from #1452# to #1432# cost 1.00652) #s(costed-arc plist nil from #1452# to #1433# cost 0.86909) #s(costed-arc plist nil from #1452# to #1434# cost 0.849912) #s(costed-arc plist nil from #1452# to #1435# cost 0.812018) #s(costed-arc plist nil from #1452# to #1436# cost 0.808337) #s(costed-arc plist nil from #1452# to #1437# cost 0.875389) #s(costed-arc plist nil from #1452# to #1438# cost 0.914152) #s(costed-arc plist nil from #1452# to #1439# cost 0.982111) #s(costed-arc plist nil from #1452# to #1440# cost 0.903437) #s(costed-arc plist nil from #1452# to #1441# cost 0.881229) #s(costed-arc plist nil from #1452# to #1442# cost 0.874467) #s(costed-arc plist nil from #1452# to #1443# cost 0.907467) #s(costed-arc plist nil from #1452# to #1444# cost 0.935018)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(210.45 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -67.3534 6.22715 -59.8587 -95.7509 -52.6896 -58.5105 206.188 0.0 0.0) robot-pose-optimized #f(212.791 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -39.2017 -4.11154 -56.5766 -76.2478 -58.3735 -102.344 214.623 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.866244 -0.499621 0.0) (0.499621 0.866244 0.0) (0.0 0.0 1.0)) pos #f(17.1032 207.828 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.965372 -0.260878 0.0) (0.260878 0.965372 0.0) (0.0 0.0 1.0)) pos #f(47.7669 201.126 0.0)) object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1453=#s(extended-node plist ((:name . "r-0-0-9")) arc-list (#s(costed-arc plist nil from #1453# to #2# cost 0.89643) #s(costed-arc plist nil from #1453# to #1422# cost 1.82033) #s(costed-arc plist nil from #1453# to #1423# cost 1.60601) #s(costed-arc plist nil from #1453# to #1424# cost 1.57365) #s(costed-arc plist nil from #1453# to #1425# cost 1.65166) #s(costed-arc plist nil from #1453# to #1426# cost 1.64877) #s(costed-arc plist nil from #1453# to #1427# cost 0.759837) #s(costed-arc plist nil from #1453# to #1428# cost 0.748377) #s(costed-arc plist nil from #1453# to #1429# cost 0.771041) #s(costed-arc plist nil from #1453# to #1430# cost 0.758173) #s(costed-arc plist nil from #1453# to #1431# cost 0.831074) #s(costed-arc plist nil from #1453# to #1432# cost 0.969937) #s(costed-arc plist nil from #1453# to #1433# cost 0.752273) #s(costed-arc plist nil from #1453# to #1434# cost 0.74646) #s(costed-arc plist nil from #1453# to #1435# cost 0.732358) #s(costed-arc plist nil from #1453# to #1436# cost 0.771012) #s(costed-arc plist nil from #1453# to #1437# cost 0.823901) #s(costed-arc plist nil from #1453# to #1438# cost 0.874788) #s(costed-arc plist nil from #1453# to #1439# cost 0.848089) #s(costed-arc plist nil from #1453# to #1440# cost 0.791166) #s(costed-arc plist nil from #1453# to #1441# cost 0.792661) #s(costed-arc plist nil from #1453# to #1442# cost 0.812145) #s(costed-arc plist nil from #1453# to #1443# cost 0.858329) #s(costed-arc plist nil from #1453# to #1444# cost 0.901807)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(204.287 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -63.6787 28.6579 -71.2293 -88.2418 -37.7885 -49.7986 213.373 0.0 0.0) robot-pose-optimized #f(204.684 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -40.2348 23.6467 -68.331 -78.0481 -42.6583 -57.0115 219.041 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.87012 -0.49284 0.0) (0.49284 0.87012 0.0) (0.0 0.0 1.0)) pos #f(-12.4866 162.372 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.98377 -0.179433 0.0) (0.179433 0.98377 0.0) (0.0 0.0 1.0)) pos #f(1.44379 165.943 0.0)) object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1454=#s(extended-node plist ((:name . "r-0-0-10")) arc-list (#s(costed-arc plist nil from #1454# to #2# cost 0.880994) #s(costed-arc plist nil from #1454# to #1422# cost 1.82342) #s(costed-arc plist nil from #1454# to #1423# cost 1.57591) #s(costed-arc plist nil from #1454# to #1424# cost 1.54921) #s(costed-arc plist nil from #1454# to #1425# cost 1.62678) #s(costed-arc plist nil from #1454# to #1426# cost 1.62084) #s(costed-arc plist nil from #1454# to #1427# cost 0.728362) #s(costed-arc plist nil from #1454# to #1428# cost 0.72785) #s(costed-arc plist nil from #1454# to #1429# cost 0.75322) #s(costed-arc plist nil from #1454# to #1430# cost 0.760956) #s(costed-arc plist nil from #1454# to #1431# cost 0.832467) #s(costed-arc plist nil from #1454# to #1432# cost 0.958341) #s(costed-arc plist nil from #1454# to #1433# cost 0.719505) #s(costed-arc plist nil from #1454# to #1434# cost 0.73164) #s(costed-arc plist nil from #1454# to #1435# cost 0.732185) #s(costed-arc plist nil from #1454# to #1436# cost 0.77361) #s(costed-arc plist nil from #1454# to #1437# cost 0.850465) #s(costed-arc plist nil from #1454# to #1438# cost 0.899563) #s(costed-arc plist nil from #1454# to #1439# cost 0.814016) #s(costed-arc plist nil from #1454# to #1440# cost 0.774402) #s(costed-arc plist nil from #1454# to #1441# cost 0.799488) #s(costed-arc plist nil from #1454# to #1442# cost 0.836217) #s(costed-arc plist nil from #1454# to #1443# cost 0.893636) #s(costed-arc plist nil from #1454# to #1444# cost 0.940119)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(197.122 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -62.4375 38.8704 -78.8142 -80.6662 -48.1438 -51.7587 206.745 0.0 0.0) robot-pose-optimized #f(186.574 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.0807 29.3022 -78.3069 -73.4334 -53.9205 -54.8237 205.845 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.867908 -0.496725 0.0) (0.496725 0.867908 0.0) (0.0 0.0 1.0)) pos #f(-2.42591 130.756 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.989398 -0.145231 0.0) (0.145231 0.989398 0.0) (0.0 0.0 1.0)) pos #f(18.2185 122.608 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1455=#s(extended-node plist ((:name . "r-0-0-11")) arc-list (#s(costed-arc plist nil from #1455# to #2# cost 0.888142) #s(costed-arc plist nil from #1455# to #1422# cost 1.90952) #s(costed-arc plist nil from #1455# to #1423# cost 1.45201) #s(costed-arc plist nil from #1455# to #1424# cost 1.4304) #s(costed-arc plist nil from #1455# to #1425# cost 1.50626) #s(costed-arc plist nil from #1455# to #1426# cost 1.50617) #s(costed-arc plist nil from #1455# to #1427# cost 0.665818) #s(costed-arc plist nil from #1455# to #1428# cost 0.68623) #s(costed-arc plist nil from #1455# to #1429# cost 0.723752) #s(costed-arc plist nil from #1455# to #1430# cost 0.736722) #s(costed-arc plist nil from #1455# to #1431# cost 0.794905) #s(costed-arc plist nil from #1455# to #1432# cost 0.873617) #s(costed-arc plist nil from #1455# to #1433# cost 0.6863) #s(costed-arc plist nil from #1455# to #1434# cost 0.71882) #s(costed-arc plist nil from #1455# to #1435# cost 0.733835) #s(costed-arc plist nil from #1455# to #1436# cost 0.780124) #s(costed-arc plist nil from #1455# to #1437# cost 0.862059) #s(costed-arc plist nil from #1455# to #1438# cost 0.901711) #s(costed-arc plist nil from #1455# to #1439# cost 0.788454) #s(costed-arc plist nil from #1455# to #1440# cost 0.772051) #s(costed-arc plist nil from #1455# to #1441# cost 0.816268) #s(costed-arc plist nil from #1455# to #1442# cost 0.861261) #s(costed-arc plist nil from #1455# to #1443# cost 0.920691) #s(costed-arc plist nil from #1455# to #1444# cost 0.962026)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(180.533 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.2225 43.1946 -88.2715 -67.0553 -48.1479 -44.6161 200.477 0.0 0.0) robot-pose-optimized #f(156.895 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -40.679 35.0653 -89.6222 -62.3032 -45.4011 -48.4651 199.773 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.848113 -0.529816 0.0) (0.529816 0.848113 0.0) (0.0 0.0 1.0)) pos #f(-10.1645 91.2835 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.95239 -0.304883 0.0) (0.304883 0.95239 0.0) (0.0 0.0 1.0)) pos #f(1.18212 95.1904 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-12")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-13")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1456=#s(extended-node plist ((:name . "r-0-0-14")) arc-list (#s(costed-arc plist nil from #1456# to #2# cost 0.824749) #s(costed-arc plist nil from #1456# to #1422# cost 2.19418) #s(costed-arc plist nil from #1456# to #1423# cost 1.14953) #s(costed-arc plist nil from #1456# to #1424# cost 1.09741) #s(costed-arc plist nil from #1456# to #1425# cost 1.14137) #s(costed-arc plist nil from #1456# to #1426# cost 1.13544) #s(costed-arc plist nil from #1456# to #1427# cost 0.687174) #s(costed-arc plist nil from #1456# to #1428# cost 0.785325) #s(costed-arc plist nil from #1456# to #1429# cost 0.83374) #s(costed-arc plist nil from #1456# to #1430# cost 0.731773) #s(costed-arc plist nil from #1456# to #1431# cost 0.692451) #s(costed-arc plist nil from #1456# to #1432# cost 0.636334) #s(costed-arc plist nil from #1456# to #1433# cost 0.948569) #s(costed-arc plist nil from #1456# to #1434# cost 0.945586) #s(costed-arc plist nil from #1456# to #1435# cost 0.912871) #s(costed-arc plist nil from #1456# to #1436# cost 0.933483) #s(costed-arc plist nil from #1456# to #1437# cost 0.937202) #s(costed-arc plist nil from #1456# to #1438# cost 0.911423) #s(costed-arc plist nil from #1456# to #1439# cost 1.04759) #s(costed-arc plist nil from #1456# to #1440# cost 1.02397) #s(costed-arc plist nil from #1456# to #1441# cost 1.01509) #s(costed-arc plist nil from #1456# to #1442# cost 0.998695) #s(costed-arc plist nil from #1456# to #1443# cost 1.00654) #s(costed-arc plist nil from #1456# to #1444# cost 0.991983)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(217.473 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -31.0916 -5.2828 -87.6685 -63.3506 -41.5092 -5.74163 223.671 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.741186 -0.6713 0.0) (0.6713 0.741186 0.0) (0.0 0.0 1.0)) pos #f(-13.7785 -111.051 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-15")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-16")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1457=#s(extended-node plist ((:name . "r-0-0-17")) arc-list (#s(costed-arc plist nil from #1457# to #2# cost 0.852882) #s(costed-arc plist nil from #1457# to #1422# cost 2.48525) #s(costed-arc plist nil from #1457# to #1423# cost 0.963255) #s(costed-arc plist nil from #1457# to #1424# cost 0.93956) #s(costed-arc plist nil from #1457# to #1425# cost 1.03943) #s(costed-arc plist nil from #1457# to #1426# cost 0.995647) #s(costed-arc plist nil from #1457# to #1427# cost 0.868158) #s(costed-arc plist nil from #1457# to #1428# cost 0.993594) #s(costed-arc plist nil from #1457# to #1429# cost 1.03317) #s(costed-arc plist nil from #1457# to #1430# cost 0.973131) #s(costed-arc plist nil from #1457# to #1431# cost 1.00813) #s(costed-arc plist nil from #1457# to #1432# cost 0.831295) #s(costed-arc plist nil from #1457# to #1433# cost 1.10599) #s(costed-arc plist nil from #1457# to #1434# cost 1.13692) #s(costed-arc plist nil from #1457# to #1435# cost 1.15044) #s(costed-arc plist nil from #1457# to #1436# cost 1.17884) #s(costed-arc plist nil from #1457# to #1437# cost 1.21084) #s(costed-arc plist nil from #1457# to #1438# cost 1.20006) #s(costed-arc plist nil from #1457# to #1439# cost 1.19044) #s(costed-arc plist nil from #1457# to #1440# cost 1.22246) #s(costed-arc plist nil from #1457# to #1441# cost 1.2449) #s(costed-arc plist nil from #1457# to #1442# cost 1.25751) #s(costed-arc plist nil from #1457# to #1443# cost 1.28559) #s(costed-arc plist nil from #1457# to #1444# cost 1.29674)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(119.355 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.2103 33.2115 -69.8015 -40.717 -55.8948 -6.48302 192.539 0.0 0.0) robot-pose-optimized #f(91.2659 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.4373 23.3222 -84.6813 -36.7902 -75.4584 -8.12638 206.71 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.541229 -0.840875 0.0) (0.840875 0.541229 0.0) (0.0 0.0 1.0)) pos #f(91.3999 -288.927 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.639211 -0.769031 0.0) (0.769031 0.639211 0.0) (0.0 0.0 1.0)) pos #f(78.8992 -277.674 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-18")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-19")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1458=#s(extended-node plist ((:name . "r-0-0-20")) arc-list (#s(costed-arc plist nil from #1458# to #2# cost 1.99956) #s(costed-arc plist nil from #1458# to #1422# cost 3.78896) #s(costed-arc plist nil from #1458# to #1423# cost 1.02845) #s(costed-arc plist nil from #1458# to #1424# cost 1.06586) #s(costed-arc plist nil from #1458# to #1425# cost 0.854568) #s(costed-arc plist nil from #1458# to #1426# cost 0.984892) #s(costed-arc plist nil from #1458# to #1427# cost 2.04806) #s(costed-arc plist nil from #1458# to #1428# cost 2.2206) #s(costed-arc plist nil from #1458# to #1429# cost 2.29975) #s(costed-arc plist nil from #1458# to #1430# cost 2.19241) #s(costed-arc plist nil from #1458# to #1431# cost 2.05521) #s(costed-arc plist nil from #1458# to #1432# cost 2.01963) #s(costed-arc plist nil from #1458# to #1433# cost 2.39649) #s(costed-arc plist nil from #1458# to #1434# cost 2.42432) #s(costed-arc plist nil from #1458# to #1435# cost 2.41803) #s(costed-arc plist nil from #1458# to #1436# cost 2.44692) #s(costed-arc plist nil from #1458# to #1437# cost 2.45983) #s(costed-arc plist nil from #1458# to #1438# cost 2.41259) #s(costed-arc plist nil from #1458# to #1439# cost 2.4545) #s(costed-arc plist nil from #1458# to #1440# cost 2.47544) #s(costed-arc plist nil from #1458# to #1441# cost 2.49949) #s(costed-arc plist nil from #1458# to #1442# cost 2.51166) #s(costed-arc plist nil from #1458# to #1443# cost 2.52908) #s(costed-arc plist nil from #1458# to #1444# cost 2.52537)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(266.824 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -43.6142 -8.99773 -161.845 -13.3907 15.6597 -6.10518 231.707 0.0 0.0) robot-pose-optimized #f(266.721 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -71.8522 -19.0015 -163.486 -25.8311 29.6481 -34.3297 234.157 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.351107 -0.936336 0.0) (0.936336 -0.351107 0.0) (0.0 0.0 1.0)) pos #f(217.374 -465.078 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.684253 -0.729244 0.0) (0.729244 -0.684253 0.0) (0.0 0.0 1.0)) pos #f(249.744 -476.106 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1459=#s(extended-node plist ((:name . "r-0-0-21")) arc-list (#s(costed-arc plist nil from #1459# to #2# cost 1.69011) #s(costed-arc plist nil from #1459# to #1422# cost 3.24648) #s(costed-arc plist nil from #1459# to #1423# cost 1.11377) #s(costed-arc plist nil from #1459# to #1424# cost 1.1404) #s(costed-arc plist nil from #1459# to #1425# cost 1.19102) #s(costed-arc plist nil from #1459# to #1426# cost 0.952371) #s(costed-arc plist nil from #1459# to #1427# cost 1.95964) #s(costed-arc plist nil from #1459# to #1428# cost 2.05825) #s(costed-arc plist nil from #1459# to #1429# cost 2.02763) #s(costed-arc plist nil from #1459# to #1430# cost 1.92493) #s(costed-arc plist nil from #1459# to #1431# cost 1.96865) #s(costed-arc plist nil from #1459# to #1432# cost 1.62282) #s(costed-arc plist nil from #1459# to #1433# cost 2.18881) #s(costed-arc plist nil from #1459# to #1434# cost 2.1915) #s(costed-arc plist nil from #1459# to #1435# cost 2.16978) #s(costed-arc plist nil from #1459# to #1436# cost 2.13232) #s(costed-arc plist nil from #1459# to #1437# cost 2.12245) #s(costed-arc plist nil from #1459# to #1438# cost 2.05406) #s(costed-arc plist nil from #1459# to #1439# cost 2.25977) #s(costed-arc plist nil from #1459# to #1440# cost 2.27601) #s(costed-arc plist nil from #1459# to #1441# cost 2.26339) #s(costed-arc plist nil from #1459# to #1442# cost 2.23225) #s(costed-arc plist nil from #1459# to #1443# cost 2.20345) #s(costed-arc plist nil from #1459# to #1444# cost 2.15384)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(126.595 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -37.4373 5.55409 -15.4577 -8.59905 -74.6046 -5.86684 201.453 0.0 0.0) robot-pose-optimized #f(125.759 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -76.0091 13.3113 -11.5239 -24.2615 -79.9245 -44.7333 197.897 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.304673 -0.952457 0.0) (0.952457 -0.304673 0.0) (0.0 0.0 1.0)) pos #f(263.317 -476.132 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.701692 -0.71248 0.0) (0.71248 -0.701692 0.0) (0.0 0.0 1.0)) pos #f(241.818 -475.133 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1460=#s(extended-node plist ((:name . "r-0-0-22")) arc-list (#s(costed-arc plist nil from #1460# to #2# cost 1.77724) #s(costed-arc plist nil from #1460# to #1422# cost 3.33735) #s(costed-arc plist nil from #1460# to #1423# cost 1.16198) #s(costed-arc plist nil from #1460# to #1424# cost 1.19441) #s(costed-arc plist nil from #1460# to #1425# cost 1.25078) #s(costed-arc plist nil from #1460# to #1426# cost 1.0144) #s(costed-arc plist nil from #1460# to #1427# cost 2.01904) #s(costed-arc plist nil from #1460# to #1428# cost 2.11957) #s(costed-arc plist nil from #1460# to #1429# cost 2.08935) #s(costed-arc plist nil from #1460# to #1430# cost 1.99353) #s(costed-arc plist nil from #1460# to #1431# cost 2.04473) #s(costed-arc plist nil from #1460# to #1432# cost 1.71025) #s(costed-arc plist nil from #1460# to #1433# cost 2.23453) #s(costed-arc plist nil from #1460# to #1434# cost 2.24113) #s(costed-arc plist nil from #1460# to #1435# cost 2.22612) #s(costed-arc plist nil from #1460# to #1436# cost 2.19217) #s(costed-arc plist nil from #1460# to #1437# cost 2.19136) #s(costed-arc plist nil from #1460# to #1438# cost 2.13174) #s(costed-arc plist nil from #1460# to #1439# cost 2.30079) #s(costed-arc plist nil from #1460# to #1440# cost 2.32183) #s(costed-arc plist nil from #1460# to #1441# cost 2.31437) #s(costed-arc plist nil from #1460# to #1442# cost 2.28963) #s(costed-arc plist nil from #1460# to #1443# cost 2.26814) #s(costed-arc plist nil from #1460# to #1444# cost 2.22836)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(99.9129 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -43.7822 14.4244 -16.6184 -8.60892 -72.944 -5.8202 192.649 0.0 0.0) robot-pose-optimized #f(98.7287 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -74.0611 15.2956 -9.24054 -8.59521 -78.2493 -46.8348 191.417 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.397068 -0.917789 0.0) (0.917789 -0.397068 0.0) (0.0 0.0 1.0)) pos #f(259.99 -479.272 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.697542 -0.716543 0.0) (0.716543 -0.697542 0.0) (0.0 0.0 1.0)) pos #f(245.278 -477.529 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1461=#s(extended-node plist ((:name . "r-0-0-23")) arc-list (#s(costed-arc plist nil from #1461# to #2# cost 1.9007) #s(costed-arc plist nil from #1461# to #1422# cost 3.63389) #s(costed-arc plist nil from #1461# to #1423# cost 0.933388) #s(costed-arc plist nil from #1461# to #1424# cost 0.982514) #s(costed-arc plist nil from #1461# to #1425# cost 0.95808) #s(costed-arc plist nil from #1461# to #1426# cost 0.832374) #s(costed-arc plist nil from #1461# to #1427# cost 1.93593) #s(costed-arc plist nil from #1461# to #1428# cost 2.08797) #s(costed-arc plist nil from #1461# to #1429# cost 2.14379) #s(costed-arc plist nil from #1461# to #1430# cost 2.05575) #s(costed-arc plist nil from #1461# to #1431# cost 2.00765) #s(costed-arc plist nil from #1461# to #1432# cost 1.88049) #s(costed-arc plist nil from #1461# to #1433# cost 2.23291) #s(costed-arc plist nil from #1461# to #1434# cost 2.26959) #s(costed-arc plist nil from #1461# to #1435# cost 2.27707) #s(costed-arc plist nil from #1461# to #1436# cost 2.29797) #s(costed-arc plist nil from #1461# to #1437# cost 2.31951) #s(costed-arc plist nil from #1461# to #1438# cost 2.27719) #s(costed-arc plist nil from #1461# to #1439# cost 2.3014) #s(costed-arc plist nil from #1461# to #1440# cost 2.3347) #s(costed-arc plist nil from #1461# to #1441# cost 2.36358) #s(costed-arc plist nil from #1461# to #1442# cost 2.37653) #s(costed-arc plist nil from #1461# to #1443# cost 2.39916) #s(costed-arc plist nil from #1461# to #1444# cost 2.39627)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose #f(80.3224 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -58.321 18.9611 -90.1949 -8.8281 -31.3529 -5.81933 205.158 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.533011 -0.846108 0.0) (0.846108 -0.533011 0.0) (0.0 0.0 1.0)) pos #f(234.142 -459.366 0.0)) base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1462=#s(extended-node plist ((:name . "r-0-0-fk")) arc-list (#s(costed-arc plist nil from #1462# to #2# cost 2.40596) #s(costed-arc plist nil from #1462# to #1422# cost 1.36354) #s(costed-arc plist nil from #1462# to #1423# cost 3.50274) #s(costed-arc plist nil from #1462# to #1424# cost 3.45942) #s(costed-arc plist nil from #1462# to #1425# cost 3.52451) #s(costed-arc plist nil from #1462# to #1426# cost 3.46831) #s(costed-arc plist nil from #1462# to #1427# cost 2.42872) #s(costed-arc plist nil from #1462# to #1428# cost 2.2695) #s(costed-arc plist nil from #1462# to #1429# cost 2.27512) #s(costed-arc plist nil from #1462# to #1430# cost 2.41192) #s(costed-arc plist nil from #1462# to #1431# cost 2.50655) #s(costed-arc plist nil from #1462# to #1432# cost 2.69486) #s(costed-arc plist nil from #1462# to #1433# cost 2.15835) #s(costed-arc plist nil from #1462# to #1434# cost 2.16019) #s(costed-arc plist nil from #1462# to #1435# cost 2.1563) #s(costed-arc plist nil from #1462# to #1436# cost 2.19361) #s(costed-arc plist nil from #1462# to #1437# cost 2.22823) #s(costed-arc plist nil from #1462# to #1438# cost 2.3085) #s(costed-arc plist nil from #1462# to #1439# cost 2.21549) #s(costed-arc plist nil from #1462# to #1440# cost 2.18351) #s(costed-arc plist nil from #1462# to #1441# cost 2.18544) #s(costed-arc plist nil from #1462# to #1442# cost 2.19382) #s(costed-arc plist nil from #1462# to #1443# cost 2.23311) #s(costed-arc plist nil from #1462# to #1444# cost 2.25506)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 0 door-angle -20 solved t robot-pose #f(235.096 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -39.7269 39.0673 -57.2362 -121.541 -164.971 -54.0882 304.835 0.0 0.0) robot-pose-optimized #f(237.257 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -49.8331 29.758 -66.5543 -117.289 -167.119 -49.2569 315.518 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.744871 0.667209 0.0) (-0.667209 0.744871 0.0) (0.0 0.0 1.0)) pos #f(148.207 577.32 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.807703 0.58959 0.0) (-0.58959 0.807703 0.0) (0.0 0.0 1.0)) pos #f(137.298 610.105 0.0)) object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-0-0-rk")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1444# #1443# #1442# #1441# #1440# #1439# #1438# #1437# #1436# #1435# #1434# #1433# #1432# #1431# #1430# #1429# #1428# #1427# #s(extended-node plist ((:name . "r-0-1-18")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1426# #1425# #1424# #1423# #s(extended-node plist ((:name . "r-0-1-23")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1422# #2# #1421# #1420# #1419# #1418# #1417# #1416# #1415# #1414# #1413# #1412# #1411# #1410# #1409# #1408# #1407# #1406# #1405# #1404# #1403# #1402# #1401# #1400# #1399# #1398# #1397# #3# #1396# #1270# #1274# #1203# #1207# #1214# #1395# #1394# #1393# #1291# #1280# #1296# #1392# #1391# #1390# #1389# #1388# #1235# #1387# #1299# #1245# #1249# #1199# #1198# #s(extended-node plist ((:name . "r-0-3-fk")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #4# #1197# #950# #954# #962# #958# #988# #1082# #979# #1088# #1012# #1000# #1028# #1092# #1095# #1098# #1102# #1105# #1108# #1111# #1121# #1124# #1127# #1130# #942# #s(extended-node plist ((:name . "r-0-4-fk")) arc-list nil arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #5# #s(extended-node plist ((:name . "r-1-0-0")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-1")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-2")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-3")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-4")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-5")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-6")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-7")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-8")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-9")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-10")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-11")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-12")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-13")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-14")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-15")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-16")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-17")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-18")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-19")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-20")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-21")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-22")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-0-23")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1463=#s(extended-node plist ((:name . "r-1-1-0")) arc-list (#s(costed-arc plist nil from #1463# to #1464=#s(extended-node plist ((:name . "r-1-2-5")) arc-list (#s(costed-arc plist nil from #1464# to #1466=#s(extended-node plist ((:name . "r-1-3-5")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(91.8066 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 0.279135 62.6674 32.3259 -79.3574 75.3468 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(132.615 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -24.6121 74.2719 37.2423 -87.3594 80.4273 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.746345 -0.665559 0.0) (0.665559 0.746345 0.0) (0.0 0.0 1.0)) pos #f(-510.227 382.263 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.31358 -0.949562 0.0) (0.949562 0.31358 0.0) (0.0 0.0 1.0)) pos #f(-516.112 354.19 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.610125) #s(costed-arc plist nil from #1464# to #1467=#s(extended-node plist ((:name . "r-1-3-4")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(99.9896 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 14.2865 51.461 29.697 -110.942 59.5668 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.720788 -0.693156 0.0) (0.693156 0.720788 0.0) (0.0 0.0 1.0)) pos #f(-418.35 280.368 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.675734) #s(costed-arc plist nil from #1464# to #1468=#s(extended-node plist ((:name . "r-1-3-2")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(273.068 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.11677 14.4258 36.5899 -58.8267 47.1309 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.784611 -0.619988 0.0) (0.619988 0.784611 0.0) (0.0 0.0 1.0)) pos #f(-598.243 227.609 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.696029) #s(costed-arc plist nil from #1464# to #1469=#s(extended-node plist ((:name . "r-1-3-1")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(273.651 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 20.0331 -2.30343 33.5077 -63.6812 31.1594 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.770183 -0.637823 0.0) (0.637823 0.770183 0.0) (0.0 0.0 1.0)) pos #f(-478.574 150.84 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.72035)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(91.9172 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 12.2773 56.5945 8.24133 -63.4337 85.4863 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.909807 -0.415031 0.0) (0.415031 0.909807 0.0) (0.0 0.0 1.0)) pos #f(-353.633 101.685 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.691937) #s(costed-arc plist nil from #1463# to #1465=#s(extended-node plist ((:name . "r-1-2-4")) arc-list (#s(costed-arc plist nil from #1465# to #1466# cost 0.659858) #s(costed-arc plist nil from #1465# to #1467# cost 0.608502) #s(costed-arc plist nil from #1465# to #1468# cost 0.708877) #s(costed-arc plist nil from #1465# to #1469# cost 0.705633)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(93.3067 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 19.001 44.7848 9.94007 -87.1859 80.306 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(150.654 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.37034 60.8472 15.6176 -108.69 78.9854 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.911319 -0.411702 0.0) (0.411702 0.911319 0.0) (0.0 0.0 1.0)) pos #f(-335.307 52.2502 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.583374 -0.812203 0.0) (0.812203 0.583374 0.0) (0.0 0.0 1.0)) pos #f(-320.513 49.8944 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.656222) #s(costed-arc plist nil from #1463# to #1470=#s(extended-node plist ((:name . "r-1-2-2")) arc-list (#s(costed-arc plist nil from #1470# to #1466# cost 1.08857) #s(costed-arc plist nil from #1470# to #1467# cost 1.14879) #s(costed-arc plist nil from #1470# to #1468# cost 0.930533) #s(costed-arc plist nil from #1470# to #1469# cost 0.937)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(190.163 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.00306 1.66574 -19.1588 -35.0641 112.512 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.990952 -0.134217 0.0) (0.134217 0.990952 0.0) (0.0 0.0 1.0)) pos #f(-496.293 161.37 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.757895) #s(costed-arc plist nil from #1463# to #1471=#s(extended-node plist ((:name . "r-1-2-1")) arc-list (#s(costed-arc plist nil from #1471# to #1466# cost 1.16261) #s(costed-arc plist nil from #1471# to #1467# cost 1.19235) #s(costed-arc plist nil from #1471# to #1468# cost 0.972798) #s(costed-arc plist nil from #1471# to #1469# cost 0.937691)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(192.9 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 11.803 -16.3087 -14.8237 -28.7444 109.948 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.991376 -0.131047 0.0) (0.131047 0.991376 0.0) (0.0 0.0 1.0)) pos #f(-449.095 157.706 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.685255)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(287.618 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 21.3314 -20.2598 -2.25211 -43.4536 95.1679 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.91017 -0.414235 0.0) (0.414235 0.91017 0.0) (0.0 0.0 1.0)) pos #f(-114.608 -194.133 0.0)) base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1472=#s(extended-node plist ((:name . "r-1-1-1")) arc-list (#s(costed-arc plist nil from #1472# to #1464# cost 0.784393) #s(costed-arc plist nil from #1472# to #1465# cost 0.789202) #s(costed-arc plist nil from #1472# to #1470# cost 0.758124) #s(costed-arc plist nil from #1472# to #1471# cost 0.658677)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(198.952 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 20.9693 -19.7106 -12.4544 -14.021 104.075 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.907579 -0.419881 0.0) (0.419881 0.907579 0.0) (0.0 0.0 1.0)) pos #f(-166.592 -253.192 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1473=#s(extended-node plist ((:name . "r-1-1-2")) arc-list (#s(costed-arc plist nil from #1473# to #1464# cost 0.647332) #s(costed-arc plist nil from #1473# to #1465# cost 0.656893) #s(costed-arc plist nil from #1473# to #1470# cost 0.624138) #s(costed-arc plist nil from #1473# to #1471# cost 0.639437)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(193.881 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 16.3102 0.879873 -14.0893 -30.2674 106.035 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.905294 -0.424785 0.0) (0.424785 0.905294 0.0) (0.0 0.0 1.0)) pos #f(-217.011 -250.414 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-3")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1474=#s(extended-node plist ((:name . "r-1-1-4")) arc-list (#s(costed-arc plist nil from #1474# to #1464# cost 0.609751) #s(costed-arc plist nil from #1474# to #1465# cost 0.626634) #s(costed-arc plist nil from #1474# to #1470# cost 0.581683) #s(costed-arc plist nil from #1474# to #1471# cost 0.65735)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(183.067 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 2.70435 40.8718 -41.5911 -57.0932 116.587 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.973945 -0.226784 0.0) (0.226784 0.973945 0.0) (0.0 0.0 1.0)) pos #f(-206.58 -46.8059 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1475=#s(extended-node plist ((:name . "r-1-1-5")) arc-list (#s(costed-arc plist nil from #1475# to #1464# cost 0.573911) #s(costed-arc plist nil from #1475# to #1465# cost 0.646323) #s(costed-arc plist nil from #1475# to #1470# cost 0.796485) #s(costed-arc plist nil from #1475# to #1471# cost 0.852631)) arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(130.308 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 17.3613 41.1872 -20.0425 -18.6903 106.378 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(131.816 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 16.205 47.5068 -15.9216 -32.1647 101.193 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.904455 -0.42657 0.0) (0.42657 0.904455 0.0) (0.0 0.0 1.0)) pos #f(-142.76 -195.655 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.911709 -0.410837 0.0) (0.410837 0.911709 0.0) (0.0 0.0 1.0)) pos #f(-131.638 -169.4 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-6")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-7")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-8")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-9")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-10")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-11")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-12")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-13")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-14")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-15")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-16")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-17")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-18")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-19")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-20")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-21")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-22")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-1-23")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-0")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1471# #1470# #s(extended-node plist ((:name . "r-1-2-3")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1465# #1464# #s(extended-node plist ((:name . "r-1-2-6")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-7")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-8")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-9")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-10")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-11")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-12")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-13")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-14")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-15")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-16")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-17")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-18")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-19")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-20")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-21")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-22")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-2-23")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-0")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1469# #1468# #s(extended-node plist ((:name . "r-1-3-3")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1467# #1466# #s(extended-node plist ((:name . "r-1-3-6")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-7")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-8")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-9")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-10")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-11")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-12")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-13")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-14")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-15")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-16")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-17")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-18")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-19")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-20")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-21")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-22")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-3-23")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-0")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-1")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-2")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-3")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-4")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-5")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-6")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-7")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-8")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-9")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-10")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-11")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-12")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-13")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-14")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-15")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-16")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-17")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-18")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-19")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-20")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-21")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-22")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-1-4-23")) arc-list nil arm :rarm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-0")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-1")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-2")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-3")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-4")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-5")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-6")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-7")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-8")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-9")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-10")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-11")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-12")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-13")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-14")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-15")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-16")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-17")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-18")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-19")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-20")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-21")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-22")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-0-23")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-0")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1476=#s(extended-node plist ((:name . "r-2-1-1")) arc-list (#s(costed-arc plist nil from #1476# to #1477=#s(extended-node plist ((:name . #1516="r-2-2-21")) arc-list (#s(costed-arc plist nil from #1477# to #1478=#s(extended-node plist ((:name . "r-2-2-21<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1478# to #1479=#s(extended-node plist ((:name . #1488="l-1-2-5")) arc-list (#s(costed-arc plist nil from #1479# to #1480=#s(extended-node plist ((:name . "r-2-2-7<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1480# to #1479# cost 0) #s(costed-arc plist nil from #1480# to #1481=#s(extended-node plist ((:name . #1512="r-2-2-7")) arc-list (#s(costed-arc plist nil from #1481# to #1482=#s(extended-node plist ((:name . "r-2-2-7<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1482# to #1483=#s(extended-node plist ((:name . #1500="l-1-2-4")) arc-list (#s(costed-arc plist nil from #1483# to #1482# cost 0) #s(costed-arc plist nil from #1483# to #1484=#s(extended-node plist ((:name . "r-2-2-13<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1484# to #1483# cost 0) #s(costed-arc plist nil from #1484# to #1485=#s(extended-node plist ((:name . #1487="r-2-2-13")) arc-list (#s(costed-arc plist nil from #1485# to #1484# cost 0) #s(costed-arc plist nil from #1485# to #1486=#s(extended-node plist ((:name . "r-2-2-13<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1486# to #1479# cost 0) #s(costed-arc plist nil from #1486# to #1485# cost 0)) arm :arms islands (#1487# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(262.651 17.0484 52.6399 120.818 -45.2061 36.5576 -30.0 180.0 2.97665 -18.6711 -146.474 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1485# to #1324# cost 0.583286) #s(costed-arc plist nil from #1485# to #1355# cost 0.510335) #s(costed-arc plist nil from #1485# to #1266# cost 0.461375) #s(costed-arc plist nil from #1485# to #1334# cost 0.411492) #s(costed-arc plist nil from #1485# to #1318# cost 0.610806) #s(costed-arc plist nil from #1485# to #1489=#s(extended-node plist ((:name . "r-2-3-16")) arc-list (#s(costed-arc plist nil from #1489# to #1153# cost 0.444657) #s(costed-arc plist nil from #1489# to #1078# cost 0.518045) #s(costed-arc plist nil from #1489# to #1149# cost 0.556346) #s(costed-arc plist nil from #1489# to #1061# cost 0.406775) #s(costed-arc plist nil from #1489# to #1139# cost 0.55994) #s(costed-arc plist nil from #1489# to #946# cost 0.634058) #s(costed-arc plist nil from #1489# to #1057# cost 0.758089) #s(costed-arc plist nil from #1489# to #1071# cost 0.758581) #s(costed-arc plist nil from #1489# to #1054# cost 0.856885) #s(costed-arc plist nil from #1489# to #1068# cost 0.89796) #s(costed-arc plist nil from #1489# to #1065# cost 1.04776) #s(costed-arc plist nil from #1489# to #1305# cost 1.11278) #s(costed-arc plist nil from #1489# to #1047# cost 1.17748) #s(costed-arc plist nil from #1489# to #1306# cost 1.22824) #s(costed-arc plist nil from #1489# to #1307# cost 1.29561) #s(costed-arc plist nil from #1489# to #1308# cost 1.3461) #s(costed-arc plist nil from #1489# to #1309# cost 1.4449) #s(costed-arc plist nil from #1489# to #1145# cost 1.55273)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(162.571 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.83415 28.039 -139.644 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(195.373 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.59607 32.2638 -137.672 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.293137 -0.95607 0.0) (0.95607 0.293137 0.0) (0.0 0.0 1.0)) pos #f(120.303 67.867 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.013894 -0.999903 0.0) (0.999903 -0.013894 0.0) (0.0 0.0 1.0)) pos #f(140.191 30.3907 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.676223) #s(costed-arc plist nil from #1485# to #1260# cost 0.673416) #s(costed-arc plist nil from #1485# to #1490=#s(extended-node plist ((:name . "r-2-3-14")) arc-list (#s(costed-arc plist nil from #1490# to #1153# cost 0.376874) #s(costed-arc plist nil from #1490# to #1078# cost 0.296587) #s(costed-arc plist nil from #1490# to #1149# cost 0.343146) #s(costed-arc plist nil from #1490# to #1061# cost 0.448458) #s(costed-arc plist nil from #1490# to #1139# cost 0.510184) #s(costed-arc plist nil from #1490# to #946# cost 0.523308) #s(costed-arc plist nil from #1490# to #1057# cost 0.503794) #s(costed-arc plist nil from #1490# to #1071# cost 0.487814) #s(costed-arc plist nil from #1490# to #1054# cost 0.825369) #s(costed-arc plist nil from #1490# to #1068# cost 0.911669) #s(costed-arc plist nil from #1490# to #1065# cost 0.984543) #s(costed-arc plist nil from #1490# to #1305# cost 0.958149) #s(costed-arc plist nil from #1490# to #1047# cost 0.938875) #s(costed-arc plist nil from #1490# to #1306# cost 1.26788) #s(costed-arc plist nil from #1490# to #1307# cost 1.33237) #s(costed-arc plist nil from #1490# to #1308# cost 1.31108) #s(costed-arc plist nil from #1490# to #1309# cost 1.32138) #s(costed-arc plist nil from #1490# to #1145# cost 1.37266)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(258.883 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.14358 0.010761 -138.826 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.321818 -0.946802 0.0) (0.946802 0.321818 0.0) (0.0 0.0 1.0)) pos #f(-76.007 89.3916 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.685951) #s(costed-arc plist nil from #1485# to #1312# cost 0.551061) #s(costed-arc plist nil from #1485# to #1491=#s(extended-node plist ((:name . "r-2-3-11")) arc-list (#s(costed-arc plist nil from #1491# to #1153# cost 0.823633) #s(costed-arc plist nil from #1491# to #1078# cost 0.86131) #s(costed-arc plist nil from #1491# to #1149# cost 0.938591) #s(costed-arc plist nil from #1491# to #1061# cost 0.706359) #s(costed-arc plist nil from #1491# to #1139# cost 0.806839) #s(costed-arc plist nil from #1491# to #946# cost 0.92261) #s(costed-arc plist nil from #1491# to #1057# cost 0.937524) #s(costed-arc plist nil from #1491# to #1071# cost 0.983785) #s(costed-arc plist nil from #1491# to #1054# cost 0.886402) #s(costed-arc plist nil from #1491# to #1068# cost 1.137) #s(costed-arc plist nil from #1491# to #1065# cost 1.31192) #s(costed-arc plist nil from #1491# to #1305# cost 1.35234) #s(costed-arc plist nil from #1491# to #1047# cost 1.33814) #s(costed-arc plist nil from #1491# to #1306# cost 1.37874) #s(costed-arc plist nil from #1491# to #1307# cost 1.54442) #s(costed-arc plist nil from #1491# to #1308# cost 1.58542) #s(costed-arc plist nil from #1491# to #1309# cost 1.6494) #s(costed-arc plist nil from #1491# to #1145# cost 1.73144)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(77.7186 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -38.6962 39.6775 -168.289 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(132.951 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -74.0505 48.1489 -170.837 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.015705 -0.999877 0.0) (0.999877 0.015705 0.0) (0.0 0.0 1.0)) pos #f(-335.56 136.609 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.48633 -0.873775 0.0) (0.873775 -0.48633 0.0) (0.0 0.0 1.0)) pos #f(-331.195 106.537 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.931597) #s(costed-arc plist nil from #1485# to #1304# cost 1.19635) #s(costed-arc plist nil from #1485# to #1492=#s(extended-node plist ((:name . "r-2-3-9")) arc-list (#s(costed-arc plist nil from #1492# to #1153# cost 0.554198) #s(costed-arc plist nil from #1492# to #1078# cost 0.594173) #s(costed-arc plist nil from #1492# to #1149# cost 0.726751) #s(costed-arc plist nil from #1492# to #1061# cost 0.711701) #s(costed-arc plist nil from #1492# to #1139# cost 0.460828) #s(costed-arc plist nil from #1492# to #946# cost 0.340396) #s(costed-arc plist nil from #1492# to #1057# cost 0.36867) #s(costed-arc plist nil from #1492# to #1071# cost 0.510871) #s(costed-arc plist nil from #1492# to #1054# cost 0.556777) #s(costed-arc plist nil from #1492# to #1068# cost 0.354173) #s(costed-arc plist nil from #1492# to #1065# cost 0.400236) #s(costed-arc plist nil from #1492# to #1305# cost 0.449725) #s(costed-arc plist nil from #1492# to #1047# cost 0.513968) #s(costed-arc plist nil from #1492# to #1306# cost 0.697471) #s(costed-arc plist nil from #1492# to #1307# cost 0.732192) #s(costed-arc plist nil from #1492# to #1308# cost 0.707226) #s(costed-arc plist nil from #1492# to #1309# cost 0.763979) #s(costed-arc plist nil from #1492# to #1145# cost 0.870821)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(220.24 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.46813 14.8809 -140.025 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.733899 -0.679258 0.0) (0.679258 0.733899 0.0) (0.0 0.0 1.0)) pos #f(-284.734 185.966 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.25666) #s(costed-arc plist nil from #1485# to #1493=#s(extended-node plist ((:name . "r-2-3-8")) arc-list (#s(costed-arc plist nil from #1493# to #1153# cost 0.574846) #s(costed-arc plist nil from #1493# to #1078# cost 0.601248) #s(costed-arc plist nil from #1493# to #1149# cost 0.687757) #s(costed-arc plist nil from #1493# to #1061# cost 0.778249) #s(costed-arc plist nil from #1493# to #1139# cost 0.571809) #s(costed-arc plist nil from #1493# to #946# cost 0.460974) #s(costed-arc plist nil from #1493# to #1057# cost 0.413129) #s(costed-arc plist nil from #1493# to #1071# cost 0.511467) #s(costed-arc plist nil from #1493# to #1054# cost 0.686995) #s(costed-arc plist nil from #1493# to #1068# cost 0.586943) #s(costed-arc plist nil from #1493# to #1065# cost 0.64375) #s(costed-arc plist nil from #1493# to #1305# cost 0.606417) #s(costed-arc plist nil from #1493# to #1047# cost 0.590107) #s(costed-arc plist nil from #1493# to #1306# cost 0.909962) #s(costed-arc plist nil from #1493# to #1307# cost 0.926158) #s(costed-arc plist nil from #1493# to #1308# cost 0.878402) #s(costed-arc plist nil from #1493# to #1309# cost 0.871211) #s(costed-arc plist nil from #1493# to #1145# cost 0.92862)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(256.051 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 19.0758 -0.085107 -157.549 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.690699 -0.723143 0.0) (0.723143 0.690699 0.0) (0.0 0.0 1.0)) pos #f(-187.222 91.5383 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.09904) #s(costed-arc plist nil from #1485# to #1494=#s(extended-node plist ((:name . "r-2-3-7")) arc-list (#s(costed-arc plist nil from #1494# to #1153# cost 0.635731) #s(costed-arc plist nil from #1494# to #1078# cost 0.562409) #s(costed-arc plist nil from #1494# to #1149# cost 0.588126) #s(costed-arc plist nil from #1494# to #1061# cost 0.847846) #s(costed-arc plist nil from #1494# to #1139# cost 0.572722) #s(costed-arc plist nil from #1494# to #946# cost 0.426692) #s(costed-arc plist nil from #1494# to #1057# cost 0.340486) #s(costed-arc plist nil from #1494# to #1071# cost 0.340221) #s(costed-arc plist nil from #1494# to #1054# cost 0.674537) #s(costed-arc plist nil from #1494# to #1068# cost 0.546688) #s(costed-arc plist nil from #1494# to #1065# cost 0.577548) #s(costed-arc plist nil from #1494# to #1305# cost 0.480349) #s(costed-arc plist nil from #1494# to #1047# cost 0.384844) #s(costed-arc plist nil from #1494# to #1306# cost 0.893867) #s(costed-arc plist nil from #1494# to #1307# cost 0.913617) #s(costed-arc plist nil from #1494# to #1308# cost 0.847341) #s(costed-arc plist nil from #1494# to #1309# cost 0.801821) #s(costed-arc plist nil from #1494# to #1145# cost 0.800629)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(255.883 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 6.10325 -20.0517 -137.88 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.706852 -0.707362 0.0) (0.707362 0.706852 0.0) (0.0 0.0 1.0)) pos #f(-288.809 205.38 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.09723) #s(costed-arc plist nil from #1485# to #1495=#s(extended-node plist ((:name . "r-2-3-5")) arc-list (#s(costed-arc plist nil from #1495# to #1153# cost 0.721839) #s(costed-arc plist nil from #1495# to #1078# cost 0.821045) #s(costed-arc plist nil from #1495# to #1149# cost 0.97761) #s(costed-arc plist nil from #1495# to #1061# cost 0.690029) #s(costed-arc plist nil from #1495# to #1139# cost 0.541092) #s(costed-arc plist nil from #1495# to #946# cost 0.509333) #s(costed-arc plist nil from #1495# to #1057# cost 0.54116) #s(costed-arc plist nil from #1495# to #1071# cost 0.72778) #s(costed-arc plist nil from #1495# to #1054# cost 0.432669) #s(costed-arc plist nil from #1495# to #1068# cost 0.315539) #s(costed-arc plist nil from #1495# to #1065# cost 0.496568) #s(costed-arc plist nil from #1495# to #1305# cost 0.562341) #s(costed-arc plist nil from #1495# to #1047# cost 0.617472) #s(costed-arc plist nil from #1495# to #1306# cost 0.432527) #s(costed-arc plist nil from #1495# to #1307# cost 0.609576) #s(costed-arc plist nil from #1495# to #1308# cost 0.706402) #s(costed-arc plist nil from #1495# to #1309# cost 0.818751) #s(costed-arc plist nil from #1495# to #1145# cost 0.941214)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(148.359 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 10.6842 50.4854 -152.396 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(171.381 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.32215 54.7618 -198.826 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.749857 -0.6616 0.0) (0.6616 0.749857 0.0) (0.0 0.0 1.0)) pos #f(-381.928 274.058 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.492326 -0.870411 0.0) (0.870411 0.492326 0.0) (0.0 0.0 1.0)) pos #f(-383.242 233.516 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.55193) #s(costed-arc plist nil from #1485# to #1496=#s(extended-node plist ((:name . "r-2-3-4")) arc-list (#s(costed-arc plist nil from #1496# to #1153# cost 0.878926) #s(costed-arc plist nil from #1496# to #1078# cost 0.952319) #s(costed-arc plist nil from #1496# to #1149# cost 1.08987) #s(costed-arc plist nil from #1496# to #1061# cost 0.916866) #s(costed-arc plist nil from #1496# to #1139# cost 0.729118) #s(costed-arc plist nil from #1496# to #946# cost 0.65643) #s(costed-arc plist nil from #1496# to #1057# cost 0.693486) #s(costed-arc plist nil from #1496# to #1071# cost 0.850578) #s(costed-arc plist nil from #1496# to #1054# cost 0.718388) #s(costed-arc plist nil from #1496# to #1068# cost 0.43093) #s(costed-arc plist nil from #1496# to #1065# cost 0.340039) #s(costed-arc plist nil from #1496# to #1305# cost 0.385874) #s(costed-arc plist nil from #1496# to #1047# cost 0.566222) #s(costed-arc plist nil from #1496# to #1306# cost 0.425641) #s(costed-arc plist nil from #1496# to #1307# cost 0.400779) #s(costed-arc plist nil from #1496# to #1308# cost 0.506729) #s(costed-arc plist nil from #1496# to #1309# cost 0.628814) #s(costed-arc plist nil from #1496# to #1145# cost 0.759249)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(230.334 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.9635 37.3371 -145.632 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(276.007 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 4.02515 44.5377 -172.035 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.872907 -0.487886 0.0) (0.487886 0.872907 0.0) (0.0 0.0 1.0)) pos #f(-354.591 206.329 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.512017 -0.858975 0.0) (0.858975 0.512017 0.0) (0.0 0.0 1.0)) pos #f(-366.142 165.505 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.61548) #s(costed-arc plist nil from #1485# to #1497=#s(extended-node plist ((:name . "r-2-3-3")) arc-list (#s(costed-arc plist nil from #1497# to #1153# cost 0.967819) #s(costed-arc plist nil from #1497# to #1078# cost 1.00372) #s(costed-arc plist nil from #1497# to #1149# cost 1.11834) #s(costed-arc plist nil from #1497# to #1061# cost 1.07418) #s(costed-arc plist nil from #1497# to #1139# cost 0.842405) #s(costed-arc plist nil from #1497# to #946# cost 0.730621) #s(costed-arc plist nil from #1497# to #1057# cost 0.745045) #s(costed-arc plist nil from #1497# to #1071# cost 0.876318) #s(costed-arc plist nil from #1497# to #1054# cost 0.860205) #s(costed-arc plist nil from #1497# to #1068# cost 0.538652) #s(costed-arc plist nil from #1497# to #1065# cost 0.368307) #s(costed-arc plist nil from #1497# to #1305# cost 0.371411) #s(costed-arc plist nil from #1497# to #1047# cost 0.568872) #s(costed-arc plist nil from #1497# to #1306# cost 0.577259) #s(costed-arc plist nil from #1497# to #1307# cost 0.444902) #s(costed-arc plist nil from #1497# to #1308# cost 0.353706) #s(costed-arc plist nil from #1497# to #1309# cost 0.475586) #s(costed-arc plist nil from #1497# to #1145# cost 0.613524)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(245.124 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.9308 17.7943 -139.649 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.91194 -0.410323 0.0) (0.410323 0.91194 0.0) (0.0 0.0 1.0)) pos #f(-402.946 169.274 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.61309) #s(costed-arc plist nil from #1485# to #1498=#s(extended-node plist ((:name . "r-2-3-2")) arc-list (#s(costed-arc plist nil from #1498# to #1153# cost 1.07302) #s(costed-arc plist nil from #1498# to #1078# cost 1.06091) #s(costed-arc plist nil from #1498# to #1149# cost 1.14145) #s(costed-arc plist nil from #1498# to #1061# cost 1.22156) #s(costed-arc plist nil from #1498# to #1139# cost 0.958225) #s(costed-arc plist nil from #1498# to #946# cost 0.819523) #s(costed-arc plist nil from #1498# to #1057# cost 0.794175) #s(costed-arc plist nil from #1498# to #1071# cost 0.885264) #s(costed-arc plist nil from #1498# to #1054# cost 0.975301) #s(costed-arc plist nil from #1498# to #1068# cost 0.652105) #s(costed-arc plist nil from #1498# to #1065# cost 0.446139) #s(costed-arc plist nil from #1498# to #1305# cost 0.363049) #s(costed-arc plist nil from #1498# to #1047# cost 0.547072) #s(costed-arc plist nil from #1498# to #1306# cost 0.711184) #s(costed-arc plist nil from #1498# to #1307# cost 0.470333) #s(costed-arc plist nil from #1498# to #1308# cost 0.372578) #s(costed-arc plist nil from #1498# to #1309# cost 0.324741) #s(costed-arc plist nil from #1498# to #1145# cost 0.446219)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(250.399 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.4213 -1.13523 -134.421 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(242.199 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 32.3493 -3.58143 -101.148 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.943396 -0.331667 0.0) (0.331667 0.943396 0.0) (0.0 0.0 1.0)) pos #f(-440.94 193.996 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.933575 -0.358381 0.0) (0.358381 0.933575 0.0) (0.0 0.0 1.0)) pos #f(-413.914 171.698 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.63862) #s(costed-arc plist nil from #1485# to #1499=#s(extended-node plist ((:name . "r-2-3-1")) arc-list (#s(costed-arc plist nil from #1499# to #1153# cost 1.21512) #s(costed-arc plist nil from #1499# to #1078# cost 1.17727) #s(costed-arc plist nil from #1499# to #1149# cost 1.22241) #s(costed-arc plist nil from #1499# to #1061# cost 1.38775) #s(costed-arc plist nil from #1499# to #1139# cost 1.10581) #s(costed-arc plist nil from #1499# to #946# cost 0.96579) #s(costed-arc plist nil from #1499# to #1057# cost 0.876606) #s(costed-arc plist nil from #1499# to #1071# cost 0.93701) #s(costed-arc plist nil from #1499# to #1054# cost 1.08329) #s(costed-arc plist nil from #1499# to #1068# cost 0.771265) #s(costed-arc plist nil from #1499# to #1065# cost 0.570269) #s(costed-arc plist nil from #1499# to #1305# cost 0.474737) #s(costed-arc plist nil from #1499# to #1047# cost 0.532587) #s(costed-arc plist nil from #1499# to #1306# cost 0.831081) #s(costed-arc plist nil from #1499# to #1307# cost 0.553133) #s(costed-arc plist nil from #1499# to #1308# cost 0.391436) #s(costed-arc plist nil from #1499# to #1309# cost 0.275679) #s(costed-arc plist nil from #1499# to #1145# cost 0.186671)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(251.863 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.8012 -20.1229 -144.743 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979631 -0.200805 0.0) (0.200805 0.979631 0.0) (0.0 0.0 1.0)) pos #f(-455.083 280.169 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.73353)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(277.941 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 3.129 -17.1905 -141.961 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1487# #1500#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(270.306 30.165 51.5949 95.445 -90.4098 51.7698 -30.0 180.0 2.97842 -17.8828 -146.263 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1483# to #1501=#s(extended-node plist ((:name . "r-2-2-14<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1501# to #1483# cost 0) #s(costed-arc plist nil from #1501# to #1502=#s(extended-node plist ((:name . #1504="r-2-2-14")) arc-list (#s(costed-arc plist nil from #1502# to #1501# cost 0) #s(costed-arc plist nil from #1502# to #1503=#s(extended-node plist ((:name . "r-2-2-14<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1503# to #1479# cost 0) #s(costed-arc plist nil from #1503# to #1502# cost 0)) arm :arms islands (#1504# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(263.712 -0.089669 53.9814 110.552 -36.0631 29.5395 -30.0 180.0 -6.47554 0.743532 -143.801 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1502# to #1324# cost 0.487174) #s(costed-arc plist nil from #1502# to #1355# cost 0.357875) #s(costed-arc plist nil from #1502# to #1266# cost 0.371447) #s(costed-arc plist nil from #1502# to #1334# cost 0.443806) #s(costed-arc plist nil from #1502# to #1318# cost 0.454941) #s(costed-arc plist nil from #1502# to #1489# cost 0.539985) #s(costed-arc plist nil from #1502# to #1260# cost 0.516425) #s(costed-arc plist nil from #1502# to #1490# cost 0.527687) #s(costed-arc plist nil from #1502# to #1312# cost 0.539988) #s(costed-arc plist nil from #1502# to #1491# cost 0.724718) #s(costed-arc plist nil from #1502# to #1304# cost 1.00813) #s(costed-arc plist nil from #1502# to #1492# cost 1.10463) #s(costed-arc plist nil from #1502# to #1493# cost 1.0058) #s(costed-arc plist nil from #1502# to #1494# cost 1.11685) #s(costed-arc plist nil from #1502# to #1495# cost 1.37232) #s(costed-arc plist nil from #1502# to #1496# cost 1.46613) #s(costed-arc plist nil from #1502# to #1497# cost 1.49533) #s(costed-arc plist nil from #1502# to #1498# cost 1.57428) #s(costed-arc plist nil from #1502# to #1499# cost 1.72537)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(276.199 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.54869 2.22699 -145.619 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1504# #1500#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(273.319 12.1567 58.5168 73.5647 -84.7484 59.5326 -30.0 180.0 -6.46407 1.82988 -143.46 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1483# to #1505=#s(extended-node plist ((:name . "r-2-2-16<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1505# to #1483# cost 0) #s(costed-arc plist nil from #1505# to #1506=#s(extended-node plist ((:name . #1508="r-2-2-16")) arc-list (#s(costed-arc plist nil from #1506# to #1505# cost 0) #s(costed-arc plist nil from #1506# to #1507=#s(extended-node plist ((:name . "r-2-2-16<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1507# to #1479# cost 0) #s(costed-arc plist nil from #1507# to #1506# cost 0)) arm :arms islands (#1508# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(149.966 32.7107 54.8922 102.101 -83.5206 53.9963 -30.0 180.0 3.74436 26.7245 -141.261 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1506# to #1324# cost 0.35903) #s(costed-arc plist nil from #1506# to #1355# cost 0.40424) #s(costed-arc plist nil from #1506# to #1266# cost 0.501222) #s(costed-arc plist nil from #1506# to #1334# cost 0.577714) #s(costed-arc plist nil from #1506# to #1318# cost 0.381774) #s(costed-arc plist nil from #1506# to #1489# cost 0.46763) #s(costed-arc plist nil from #1506# to #1260# cost 0.567494) #s(costed-arc plist nil from #1506# to #1490# cost 0.73905) #s(costed-arc plist nil from #1506# to #1312# cost 0.73953) #s(costed-arc plist nil from #1506# to #1491# cost 0.810108) #s(costed-arc plist nil from #1506# to #1304# cost 1.00766) #s(costed-arc plist nil from #1506# to #1492# cost 1.16285) #s(costed-arc plist nil from #1506# to #1493# cost 1.14245) #s(costed-arc plist nil from #1506# to #1494# cost 1.32153) #s(costed-arc plist nil from #1506# to #1495# cost 1.32775) #s(costed-arc plist nil from #1506# to #1496# cost 1.44064) #s(costed-arc plist nil from #1506# to #1497# cost 1.53276) #s(costed-arc plist nil from #1506# to #1498# cost 1.6826) #s(costed-arc plist nil from #1506# to #1499# cost 1.88696)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(162.637 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 3.77612 28.0835 -141.568 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1508# #1500#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(168.985 28.1059 53.8404 73.5962 -114.005 49.9036 -30.0 180.0 3.77627 28.7069 -141.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1483# to #1509=#s(extended-node plist ((:name . "r-2-2-19<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1509# to #1483# cost 0) #s(costed-arc plist nil from #1509# to #1510=#s(extended-node plist ((:name . #1511="r-2-2-19")) arc-list (#s(costed-arc plist nil from #1510# to #1509# cost 0) #s(costed-arc plist nil from #1510# to #1324# cost 0.783131) #s(costed-arc plist nil from #1510# to #1355# cost 0.662698) #s(costed-arc plist nil from #1510# to #1266# cost 0.604572) #s(costed-arc plist nil from #1510# to #1334# cost 0.607365) #s(costed-arc plist nil from #1510# to #1318# cost 0.795018) #s(costed-arc plist nil from #1510# to #1489# cost 0.908035) #s(costed-arc plist nil from #1510# to #1260# cost 0.915276) #s(costed-arc plist nil from #1510# to #1490# cost 0.885961) #s(costed-arc plist nil from #1510# to #1312# cost 0.784893) #s(costed-arc plist nil from #1510# to #1491# cost 1.04368) #s(costed-arc plist nil from #1510# to #1304# cost 1.41504) #s(costed-arc plist nil from #1510# to #1492# cost 1.5151) #s(costed-arc plist nil from #1510# to #1493# cost 1.41201) #s(costed-arc plist nil from #1510# to #1494# cost 1.42086) #s(costed-arc plist nil from #1510# to #1495# cost 1.77347) #s(costed-arc plist nil from #1510# to #1496# cost 1.88382) #s(costed-arc plist nil from #1510# to #1497# cost 1.91178) #s(costed-arc plist nil from #1510# to #1498# cost 1.96138) #s(costed-arc plist nil from #1510# to #1499# cost 2.07332)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(282.091 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.7405 -16.897 -136.279 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.320967 -0.94709 0.0) (0.94709 -0.320967 0.0) (0.0 0.0 1.0)) pos #f(289.133 -72.2033 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1511# #1500#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(275.339 15.6106 52.2434 95.5759 -89.8666 52.37 -30.0 180.0 -30.6816 -17.2372 -137.928 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.320967 -0.94709 0.0) (0.94709 -0.320967 0.0) (0.0 0.0 1.0)) pos #f(289.133 -72.2033 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1483# to #1289# cost 1.0577) #s(costed-arc plist nil from #1483# to #1268# cost 1.12271) #s(costed-arc plist nil from #1483# to #1282# cost 0.834076) #s(costed-arc plist nil from #1483# to #1276# cost 0.882862)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(63.6664 35.6324 5.43001 144.89 -20.5436 -52.7123 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994993 -0.099942 0.0) (0.099942 0.994993 0.0) (0.0 0.0 1.0)) pos #f(-369.561 -390.981 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1482# to #1481# cost 0)) arm :arms islands (#1512# #1500#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(277.558 -2.35441 68.4384 34.774 -83.9245 77.2928 -30.0 180.0 13.7292 -16.7779 -148.129 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1481# to #1480# cost 0) #s(costed-arc plist nil from #1481# to #1324# cost 0.728264) #s(costed-arc plist nil from #1481# to #1355# cost 0.605282) #s(costed-arc plist nil from #1481# to #1266# cost 0.53928) #s(costed-arc plist nil from #1481# to #1334# cost 0.507973) #s(costed-arc plist nil from #1481# to #1318# cost 0.77568) #s(costed-arc plist nil from #1481# to #1489# cost 0.468147) #s(costed-arc plist nil from #1481# to #1260# cost 0.383162) #s(costed-arc plist nil from #1481# to #1490# cost 0.372023) #s(costed-arc plist nil from #1481# to #1312# cost 0.364591) #s(costed-arc plist nil from #1481# to #1491# cost 1.00438) #s(costed-arc plist nil from #1481# to #1304# cost 0.742173) #s(costed-arc plist nil from #1481# to #1492# cost 0.795639) #s(costed-arc plist nil from #1481# to #1493# cost 0.598809) #s(costed-arc plist nil from #1481# to #1494# cost 0.665232) #s(costed-arc plist nil from #1481# to #1495# cost 1.08875) #s(costed-arc plist nil from #1481# to #1496# cost 1.12916) #s(costed-arc plist nil from #1481# to #1497# cost 1.10812) #s(costed-arc plist nil from #1481# to #1498# cost 1.12505) #s(costed-arc plist nil from #1481# to #1499# cost 1.20859)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(275.119 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 13.9948 -17.4981 -145.322 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1512# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(267.995 -8.07546 61.5574 56.2857 -26.161 57.6317 -30.0 180.0 13.7278 -17.7932 -148.354 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1479# to #1513=#s(extended-node plist ((:name . "r-2-2-10<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1513# to #1479# cost 0) #s(costed-arc plist nil from #1513# to #1514=#s(extended-node plist ((:name . #1515="r-2-2-10")) arc-list (#s(costed-arc plist nil from #1514# to #1513# cost 0) #s(costed-arc plist nil from #1514# to #1324# cost 0.440683) #s(costed-arc plist nil from #1514# to #1355# cost 0.43353) #s(costed-arc plist nil from #1514# to #1266# cost 0.510233) #s(costed-arc plist nil from #1514# to #1334# cost 0.60934) #s(costed-arc plist nil from #1514# to #1318# cost 0.469703) #s(costed-arc plist nil from #1514# to #1489# cost 0.245264) #s(costed-arc plist nil from #1514# to #1260# cost 0.22238) #s(costed-arc plist nil from #1514# to #1490# cost 0.336482) #s(costed-arc plist nil from #1514# to #1312# cost 0.44261) #s(costed-arc plist nil from #1514# to #1491# cost 0.708991) #s(costed-arc plist nil from #1514# to #1304# cost 0.513972) #s(costed-arc plist nil from #1514# to #1492# cost 0.737423) #s(costed-arc plist nil from #1514# to #1493# cost 0.680569) #s(costed-arc plist nil from #1514# to #1494# cost 0.888111) #s(costed-arc plist nil from #1514# to #1495# cost 0.868777) #s(costed-arc plist nil from #1514# to #1496# cost 0.992929) #s(costed-arc plist nil from #1514# to #1497# cost 1.08294) #s(costed-arc plist nil from #1514# to #1498# cost 1.23514) #s(costed-arc plist nil from #1514# to #1499# cost 1.4397)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(165.659 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 1.91686 28.7434 -150.557 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(256.93 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.123 41.6345 -190.475 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.295568 -0.955322 0.0) (0.955322 0.295568 0.0) (0.0 0.0 1.0)) pos #f(-43.1961 -117.074 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.221692 -0.975117 0.0) (0.975117 -0.221692 0.0) (0.0 0.0 1.0)) pos #f(-23.4035 -154.601 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1515# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(162.066 -21.2847 64.7365 23.7918 -62.4248 80.2183 -30.0 180.0 2.03637 28.2932 -149.738 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.295568 -0.955322 0.0) (0.955322 0.295568 0.0) (0.0 0.0 1.0)) pos #f(-43.1961 -117.074 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1479# to #1486# cost 0) #s(costed-arc plist nil from #1479# to #1503# cost 0) #s(costed-arc plist nil from #1479# to #1507# cost 0) #s(costed-arc plist nil from #1479# to #1478# cost 0) #s(costed-arc plist nil from #1479# to #1289# cost 0.764071) #s(costed-arc plist nil from #1479# to #1268# cost 0.847226) #s(costed-arc plist nil from #1479# to #1282# cost 0.583293) #s(costed-arc plist nil from #1479# to #1276# cost 0.648837)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(125.708 48.7533 32.5433 113.647 -21.6857 -8.62913 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(116.367 34.4867 35.1086 89.7221 -20.8577 14.2226 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.993809 -0.111105 0.0) (0.111105 0.993809 0.0) (0.0 0.0 1.0)) pos #f(-207.319 -419.387 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.941952 -0.335748 0.0) (0.335748 0.941952 0.0) (0.0 0.0 1.0)) pos #f(-180.326 -390.822 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1478# to #1477# cost 0)) arm :arms islands (#1516# #1488#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(240.898 6.97703 56.3453 108.245 -56.9703 50.6536 -30.0 180.0 -32.8356 17.6015 -144.22 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.324735 -0.945805 0.0) (0.945805 -0.324735 0.0) (0.0 0.0 1.0)) pos #f(273.997 -64.5002 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1477# to #1324# cost 0.646758) #s(costed-arc plist nil from #1477# to #1355# cost 0.55511) #s(costed-arc plist nil from #1477# to #1266# cost 0.637716) #s(costed-arc plist nil from #1477# to #1334# cost 0.731468) #s(costed-arc plist nil from #1477# to #1318# cost 0.627331) #s(costed-arc plist nil from #1477# to #1489# cost 0.810439) #s(costed-arc plist nil from #1477# to #1260# cost 0.833668) #s(costed-arc plist nil from #1477# to #1490# cost 0.899671) #s(costed-arc plist nil from #1477# to #1312# cost 0.900671) #s(costed-arc plist nil from #1477# to #1491# cost 0.853581) #s(costed-arc plist nil from #1477# to #1304# cost 1.29314) #s(costed-arc plist nil from #1477# to #1492# cost 1.46207) #s(costed-arc plist nil from #1477# to #1493# cost 1.40637) #s(costed-arc plist nil from #1477# to #1494# cost 1.51484) #s(costed-arc plist nil from #1477# to #1495# cost 1.62143) #s(costed-arc plist nil from #1477# to #1496# cost 1.78399) #s(costed-arc plist nil from #1477# to #1497# cost 1.86674) #s(costed-arc plist nil from #1477# to #1498# cost 1.97621) #s(costed-arc plist nil from #1477# to #1499# cost 2.13655)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(266.661 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -32.8891 20.5361 -144.744 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.324735 -0.945805 0.0) (0.945805 -0.324735 0.0) (0.0 0.0 1.0)) pos #f(273.997 -64.5002 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.38376) #s(costed-arc plist nil from #1476# to #1510# cost 1.32304) #s(costed-arc plist nil from #1476# to #1517=#s(extended-node plist ((:name . "r-2-2-17")) arc-list (#s(costed-arc plist nil from #1517# to #1324# cost 0.496875) #s(costed-arc plist nil from #1517# to #1355# cost 0.561498) #s(costed-arc plist nil from #1517# to #1266# cost 0.68677) #s(costed-arc plist nil from #1517# to #1334# cost 0.784189) #s(costed-arc plist nil from #1517# to #1318# cost 0.427795) #s(costed-arc plist nil from #1517# to #1489# cost 0.69343) #s(costed-arc plist nil from #1517# to #1260# cost 0.764004) #s(costed-arc plist nil from #1517# to #1490# cost 0.935999) #s(costed-arc plist nil from #1517# to #1312# cost 0.948359) #s(costed-arc plist nil from #1517# to #1491# cost 0.840248) #s(costed-arc plist nil from #1517# to #1304# cost 1.18457) #s(costed-arc plist nil from #1517# to #1492# cost 1.39783) #s(costed-arc plist nil from #1517# to #1493# cost 1.36198) #s(costed-arc plist nil from #1517# to #1494# cost 1.5409) #s(costed-arc plist nil from #1517# to #1495# cost 1.42358) #s(costed-arc plist nil from #1517# to #1496# cost 1.62496) #s(costed-arc plist nil from #1517# to #1497# cost 1.76187) #s(costed-arc plist nil from #1517# to #1498# cost 1.92067) #s(costed-arc plist nil from #1517# to #1499# cost 2.11821)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(125.394 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.008 46.0346 -146.909 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(127.415 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.3067 46.8109 -149.126 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.270811 -0.962633 0.0) (0.962633 -0.270811 0.0) (0.0 0.0 1.0)) pos #f(275.939 -66.8675 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.513012 -0.858381 0.0) (0.858381 -0.513012 0.0) (0.0 0.0 1.0)) pos #f(255.185 -103.871 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.35634) #s(costed-arc plist nil from #1476# to #1506# cost 1.09137) #s(costed-arc plist nil from #1476# to #1518=#s(extended-node plist ((:name . #1538="r-2-2-15")) arc-list (#s(costed-arc plist nil from #1518# to #1519=#s(extended-node plist ((:name . "r-2-2-15<->-l-2-2-10")) arc-list (#s(costed-arc plist nil from #1519# to #1520=#s(extended-node plist ((:name . #1539="l-2-2-10")) arc-list (#s(costed-arc plist nil from #1520# to #1519# cost 0) #s(costed-arc plist nil from #1520# to #1521=#s(extended-node plist ((:name . "l-2-3-23")) arc-list (#s(costed-arc plist nil from #1521# to #1337# cost 0.17648) #s(costed-arc plist nil from #1521# to #1338# cost 0.26264) #s(costed-arc plist nil from #1521# to #1339# cost 0.440136) #s(costed-arc plist nil from #1521# to #1340# cost 0.531544) #s(costed-arc plist nil from #1521# to #1341# cost 0.597975) #s(costed-arc plist nil from #1521# to #1342# cost 0.317763) #s(costed-arc plist nil from #1521# to #1343# cost 0.428436) #s(costed-arc plist nil from #1521# to #1344# cost 0.497112) #s(costed-arc plist nil from #1521# to #1345# cost 0.650994) #s(costed-arc plist nil from #1521# to #1346# cost 0.714635) #s(costed-arc plist nil from #1521# to #1347# cost 0.467054) #s(costed-arc plist nil from #1521# to #1117# cost 0.527687) #s(costed-arc plist nil from #1521# to #1348# cost 0.640678) #s(costed-arc plist nil from #1521# to #1349# cost 0.684507) #s(costed-arc plist nil from #1521# to #1350# cost 0.812501) #s(costed-arc plist nil from #1521# to #1080# cost 0.577033) #s(costed-arc plist nil from #1521# to #984# cost 0.620517) #s(costed-arc plist nil from #1521# to #1188# cost 0.727571) #s(costed-arc plist nil from #1521# to #1182# cost 0.815042) #s(costed-arc plist nil from #1521# to #1351# cost 0.892003)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(181.912 50.5722 55.3976 119.474 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(211.735 70.7596 62.0157 126.297 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995205 0.09781 0.0) (-0.09781 0.995205 0.0) (0.0 0.0 1.0)) pos #f(335.393 54.659 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.93302 0.359823 0.0) (-0.359823 0.93302 0.0) (0.0 0.0 1.0)) pos #f(336.553 68.824 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.492588) #s(costed-arc plist nil from #1520# to #1522=#s(extended-node plist ((:name . "l-2-3-22")) arc-list (#s(costed-arc plist nil from #1522# to #1337# cost 0.300103) #s(costed-arc plist nil from #1522# to #1338# cost 0.185918) #s(costed-arc plist nil from #1522# to #1339# cost 0.316677) #s(costed-arc plist nil from #1522# to #1340# cost 0.384443) #s(costed-arc plist nil from #1522# to #1341# cost 0.451847) #s(costed-arc plist nil from #1522# to #1342# cost 0.350671) #s(costed-arc plist nil from #1522# to #1343# cost 0.349363) #s(costed-arc plist nil from #1522# to #1344# cost 0.339373) #s(costed-arc plist nil from #1522# to #1345# cost 0.498745) #s(costed-arc plist nil from #1522# to #1346# cost 0.556785) #s(costed-arc plist nil from #1522# to #1347# cost 0.480349) #s(costed-arc plist nil from #1522# to #1117# cost 0.443555) #s(costed-arc plist nil from #1522# to #1348# cost 0.50282) #s(costed-arc plist nil from #1522# to #1349# cost 0.517461) #s(costed-arc plist nil from #1522# to #1350# cost 0.654399) #s(costed-arc plist nil from #1522# to #1080# cost 0.579384) #s(costed-arc plist nil from #1522# to #984# cost 0.539626) #s(costed-arc plist nil from #1522# to #1188# cost 0.596004) #s(costed-arc plist nil from #1522# to #1182# cost 0.664889) #s(costed-arc plist nil from #1522# to #1351# cost 0.739363)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(232.104 48.6326 36.4456 116.314 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(116.83 13.2089 21.0691 109.94 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998087 0.061832 0.0) (-0.061832 0.998087 0.0) (0.0 0.0 1.0)) pos #f(263.187 -25.3593 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.895309 -0.445445 0.0) (0.445445 0.895309 0.0) (0.0 0.0 1.0)) pos #f(273.235 4.07574 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.343311) #s(costed-arc plist nil from #1520# to #1523=#s(extended-node plist ((:name . "l-2-3-21")) arc-list (#s(costed-arc plist nil from #1523# to #1337# cost 0.419734) #s(costed-arc plist nil from #1523# to #1338# cost 0.220127) #s(costed-arc plist nil from #1523# to #1339# cost 0.192541) #s(costed-arc plist nil from #1523# to #1340# cost 0.233747) #s(costed-arc plist nil from #1523# to #1341# cost 0.318833) #s(costed-arc plist nil from #1523# to #1342# cost 0.405778) #s(costed-arc plist nil from #1523# to #1343# cost 0.306233) #s(costed-arc plist nil from #1523# to #1344# cost 0.185594) #s(costed-arc plist nil from #1523# to #1345# cost 0.328411) #s(costed-arc plist nil from #1523# to #1346# cost 0.393825) #s(costed-arc plist nil from #1523# to #1347# cost 0.503021) #s(costed-arc plist nil from #1523# to #1117# cost 0.392418) #s(costed-arc plist nil from #1523# to #1348# cost 0.358059) #s(costed-arc plist nil from #1523# to #1349# cost 0.360288) #s(costed-arc plist nil from #1523# to #1350# cost 0.486534) #s(costed-arc plist nil from #1523# to #1080# cost 0.59458) #s(costed-arc plist nil from #1523# to #984# cost 0.492408) #s(costed-arc plist nil from #1523# to #1188# cost 0.470904) #s(costed-arc plist nil from #1523# to #1182# cost 0.510022) #s(costed-arc plist nil from #1523# to #1351# cost 0.578715)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(244.712 47.0992 17.4235 131.275 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998937 0.046092 0.0) (-0.046092 0.998937 0.0) (0.0 0.0 1.0)) pos #f(207.851 -69.2425 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.388042) #s(costed-arc plist nil from #1520# to #1524=#s(extended-node plist ((:name . "l-2-3-20")) arc-list (#s(costed-arc plist nil from #1524# to #1337# cost 0.534109) #s(costed-arc plist nil from #1524# to #1338# cost 0.332005) #s(costed-arc plist nil from #1524# to #1339# cost 0.233021) #s(costed-arc plist nil from #1524# to #1340# cost 0.165186) #s(costed-arc plist nil from #1524# to #1341# cost 0.234077) #s(costed-arc plist nil from #1524# to #1342# cost 0.51233) #s(costed-arc plist nil from #1524# to #1343# cost 0.389516) #s(costed-arc plist nil from #1524# to #1344# cost 0.247666) #s(costed-arc plist nil from #1524# to #1345# cost 0.24158) #s(costed-arc plist nil from #1524# to #1346# cost 0.287673) #s(costed-arc plist nil from #1524# to #1347# cost 0.591558) #s(costed-arc plist nil from #1524# to #1117# cost 0.468403) #s(costed-arc plist nil from #1524# to #1348# cost 0.375701) #s(costed-arc plist nil from #1524# to #1349# cost 0.301905) #s(costed-arc plist nil from #1524# to #1350# cost 0.383316) #s(costed-arc plist nil from #1524# to #1080# cost 0.676006) #s(costed-arc plist nil from #1524# to #984# cost 0.554695) #s(costed-arc plist nil from #1524# to #1188# cost 0.478457) #s(costed-arc plist nil from #1524# to #1182# cost 0.449396) #s(costed-arc plist nil from #1524# to #1351# cost 0.48855)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(252.16 47.7109 -0.752007 139.259 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999162 0.040929 0.0) (-0.040929 0.999162 0.0) (0.0 0.0 1.0)) pos #f(201.549 -85.9341 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.466993) #s(costed-arc plist nil from #1520# to #1525=#s(extended-node plist ((:name . "l-2-3-19")) arc-list (#s(costed-arc plist nil from #1525# to #1337# cost 0.607858) #s(costed-arc plist nil from #1525# to #1338# cost 0.41187) #s(costed-arc plist nil from #1525# to #1339# cost 0.324528) #s(costed-arc plist nil from #1525# to #1340# cost 0.233249) #s(costed-arc plist nil from #1525# to #1341# cost 0.161717) #s(costed-arc plist nil from #1525# to #1342# cost 0.602265) #s(costed-arc plist nil from #1525# to #1343# cost 0.498517) #s(costed-arc plist nil from #1525# to #1344# cost 0.363879) #s(costed-arc plist nil from #1525# to #1345# cost 0.319773) #s(costed-arc plist nil from #1525# to #1346# cost 0.23326) #s(costed-arc plist nil from #1525# to #1347# cost 0.697564) #s(costed-arc plist nil from #1525# to #1117# cost 0.58283) #s(costed-arc plist nil from #1525# to #1348# cost 0.488941) #s(costed-arc plist nil from #1525# to #1349# cost 0.366858) #s(costed-arc plist nil from #1525# to #1350# cost 0.354438) #s(costed-arc plist nil from #1525# to #1080# cost 0.782941) #s(costed-arc plist nil from #1525# to #984# cost 0.664067) #s(costed-arc plist nil from #1525# to #1188# cost 0.57767) #s(costed-arc plist nil from #1525# to #1182# cost 0.503545) #s(costed-arc plist nil from #1525# to #1351# cost 0.475878)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(255.377 48.2295 -20.0629 139.496 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998778 0.049414 0.0) (-0.049414 0.998778 0.0) (0.0 0.0 1.0)) pos #f(225.91 -60.7662 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.565028) #s(costed-arc plist nil from #1520# to #1526=#s(extended-node plist ((:name . "l-2-3-17")) arc-list (#s(costed-arc plist nil from #1526# to #1337# cost 0.241724) #s(costed-arc plist nil from #1526# to #1338# cost 0.185224) #s(costed-arc plist nil from #1526# to #1339# cost 0.304958) #s(costed-arc plist nil from #1526# to #1340# cost 0.390577) #s(costed-arc plist nil from #1526# to #1341# cost 0.479329) #s(costed-arc plist nil from #1526# to #1342# cost 0.216834) #s(costed-arc plist nil from #1526# to #1343# cost 0.282541) #s(costed-arc plist nil from #1526# to #1344# cost 0.341426) #s(costed-arc plist nil from #1526# to #1345# cost 0.495824) #s(costed-arc plist nil from #1526# to #1346# cost 0.56577) #s(costed-arc plist nil from #1526# to #1347# cost 0.321694) #s(costed-arc plist nil from #1526# to #1117# cost 0.36541) #s(costed-arc plist nil from #1526# to #1348# cost 0.478624) #s(costed-arc plist nil from #1526# to #1349# cost 0.526769) #s(costed-arc plist nil from #1526# to #1350# cost 0.655766) #s(costed-arc plist nil from #1526# to #1080# cost 0.416759) #s(costed-arc plist nil from #1526# to #984# cost 0.451768) #s(costed-arc plist nil from #1526# to #1188# cost 0.561866) #s(costed-arc plist nil from #1526# to #1182# cost 0.652247) #s(costed-arc plist nil from #1526# to #1351# cost 0.731391)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(184.762 53.6354 56.2145 125.703 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999047 0.043644 0.0) (-0.043644 0.999047 0.0) (0.0 0.0 1.0)) pos #f(184.954 -0.157559 0.0)) base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.40596) #s(costed-arc plist nil from #1520# to #1527=#s(extended-node plist ((:name . "l-2-3-16")) arc-list (#s(costed-arc plist nil from #1527# to #1337# cost 0.393781) #s(costed-arc plist nil from #1527# to #1338# cost 0.209276) #s(costed-arc plist nil from #1527# to #1339# cost 0.260117) #s(costed-arc plist nil from #1527# to #1340# cost 0.323117) #s(costed-arc plist nil from #1527# to #1341# cost 0.437256) #s(costed-arc plist nil from #1527# to #1342# cost 0.338202) #s(costed-arc plist nil from #1527# to #1343# cost 0.203968) #s(costed-arc plist nil from #1527# to #1344# cost 0.171888) #s(costed-arc plist nil from #1527# to #1345# cost 0.332014) #s(costed-arc plist nil from #1527# to #1346# cost 0.415445) #s(costed-arc plist nil from #1527# to #1347# cost 0.36177) #s(costed-arc plist nil from #1527# to #1117# cost 0.256366) #s(costed-arc plist nil from #1527# to #1348# cost 0.310094) #s(costed-arc plist nil from #1527# to #1349# cost 0.339664) #s(costed-arc plist nil from #1527# to #1350# cost 0.484235) #s(costed-arc plist nil from #1527# to #1080# cost 0.439874) #s(costed-arc plist nil from #1527# to #984# cost 0.355074) #s(costed-arc plist nil from #1527# to #1188# cost 0.402242) #s(costed-arc plist nil from #1527# to #1182# cost 0.477892) #s(costed-arc plist nil from #1527# to #1351# cost 0.561263)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(224.289 50.8799 35.9085 129.495 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(136.279 17.4787 24.0425 122.191 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999901 0.014081 0.0) (-0.014081 0.999901 0.0) (0.0 0.0 1.0)) pos #f(105.056 -88.0863 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.873002 -0.487716 0.0) (0.487716 0.873002 0.0) (0.0 0.0 1.0)) pos #f(135.475 -58.5117 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.332122) #s(costed-arc plist nil from #1520# to #1528=#s(extended-node plist ((:name . "l-2-3-15")) arc-list (#s(costed-arc plist nil from #1528# to #1337# cost 0.541182) #s(costed-arc plist nil from #1528# to #1338# cost 0.330435) #s(costed-arc plist nil from #1528# to #1339# cost 0.278576) #s(costed-arc plist nil from #1528# to #1340# cost 0.297644) #s(costed-arc plist nil from #1528# to #1341# cost 0.402032) #s(costed-arc plist nil from #1528# to #1342# cost 0.482437) #s(costed-arc plist nil from #1528# to #1343# cost 0.303044) #s(costed-arc plist nil from #1528# to #1344# cost 0.120126) #s(costed-arc plist nil from #1528# to #1345# cost 0.260339) #s(costed-arc plist nil from #1528# to #1346# cost 0.348671) #s(costed-arc plist nil from #1528# to #1347# cost 0.468373) #s(costed-arc plist nil from #1528# to #1117# cost 0.316713) #s(costed-arc plist nil from #1528# to #1348# cost 0.258535) #s(costed-arc plist nil from #1528# to #1349# cost 0.238924) #s(costed-arc plist nil from #1528# to #1350# cost 0.392132) #s(costed-arc plist nil from #1528# to #1080# cost 0.529959) #s(costed-arc plist nil from #1528# to #984# cost 0.391528) #s(costed-arc plist nil from #1528# to #1188# cost 0.351239) #s(costed-arc plist nil from #1528# to #1182# cost 0.3883) #s(costed-arc plist nil from #1528# to #1351# cost 0.469125)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(245.32 50.6885 17.3729 128.181 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999998 -0.001989 0.0) (0.001989 0.999998 0.0) (0.0 0.0 1.0)) pos #f(71.3411 -143.176 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.331584) #s(costed-arc plist nil from #1520# to #1359# cost 0.456277) #s(costed-arc plist nil from #1520# to #1529=#s(extended-node plist ((:name . "l-2-3-13")) arc-list (#s(costed-arc plist nil from #1529# to #1337# cost 0.721148) #s(costed-arc plist nil from #1529# to #1338# cost 0.504343) #s(costed-arc plist nil from #1529# to #1339# cost 0.358397) #s(costed-arc plist nil from #1529# to #1340# cost 0.251954) #s(costed-arc plist nil from #1529# to #1341# cost 0.217003) #s(costed-arc plist nil from #1529# to #1342# cost 0.651409) #s(costed-arc plist nil from #1529# to #1343# cost 0.451823) #s(costed-arc plist nil from #1529# to #1344# cost 0.266366) #s(costed-arc plist nil from #1529# to #1345# cost 0.203138) #s(costed-arc plist nil from #1529# to #1346# cost 0.127505) #s(costed-arc plist nil from #1529# to #1347# cost 0.63376) #s(costed-arc plist nil from #1529# to #1117# cost 0.475629) #s(costed-arc plist nil from #1529# to #1348# cost 0.355962) #s(costed-arc plist nil from #1529# to #1349# cost 0.226081) #s(costed-arc plist nil from #1529# to #1350# cost 0.212012) #s(costed-arc plist nil from #1529# to #1080# cost 0.693831) #s(costed-arc plist nil from #1529# to #984# cost 0.541895) #s(costed-arc plist nil from #1529# to #1188# cost 0.436407) #s(costed-arc plist nil from #1529# to #1182# cost 0.354694) #s(costed-arc plist nil from #1529# to #1351# cost 0.328365)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(253.567 49.0754 -20.1679 143.194 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999997 0.002249 0.0) (-0.002249 0.999997 0.0) (0.0 0.0 1.0)) pos #f(65.2888 -114.209 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.545962) #s(costed-arc plist nil from #1520# to #1530=#s(extended-node plist ((:name . "l-2-3-11")) arc-list (#s(costed-arc plist nil from #1530# to #1337# cost 0.371421) #s(costed-arc plist nil from #1530# to #1338# cost 0.309267) #s(costed-arc plist nil from #1530# to #1339# cost 0.361633) #s(costed-arc plist nil from #1530# to #1340# cost 0.43393) #s(costed-arc plist nil from #1530# to #1341# cost 0.559174) #s(costed-arc plist nil from #1530# to #1342# cost 0.26782) #s(costed-arc plist nil from #1530# to #1343# cost 0.234542) #s(costed-arc plist nil from #1530# to #1344# cost 0.230352) #s(costed-arc plist nil from #1530# to #1345# cost 0.369156) #s(costed-arc plist nil from #1530# to #1346# cost 0.473613) #s(costed-arc plist nil from #1530# to #1347# cost 0.230291) #s(costed-arc plist nil from #1530# to #1117# cost 0.23097) #s(costed-arc plist nil from #1530# to #1348# cost 0.329446) #s(costed-arc plist nil from #1530# to #1349# cost 0.381287) #s(costed-arc plist nil from #1530# to #1350# cost 0.511134) #s(costed-arc plist nil from #1530# to #1080# cost 0.28778) #s(costed-arc plist nil from #1530# to #984# cost 0.303635) #s(costed-arc plist nil from #1530# to #1188# cost 0.408801) #s(costed-arc plist nil from #1530# to #1182# cost 0.500119) #s(costed-arc plist nil from #1530# to #1351# cost 0.581719)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(190.925 55.3287 57.6559 130.849 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999963 -0.008554 0.0) (0.008554 0.999963 0.0) (0.0 0.0 1.0)) pos #f(30.0412 -41.5561 0.0)) base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.426261) #s(costed-arc plist nil from #1520# to #1353# cost 0.386651) #s(costed-arc plist nil from #1520# to #1531=#s(extended-node plist ((:name . "l-2-3-9")) arc-list (#s(costed-arc plist nil from #1531# to #1337# cost 0.682257) #s(costed-arc plist nil from #1531# to #1338# cost 0.473805) #s(costed-arc plist nil from #1531# to #1339# cost 0.37862) #s(costed-arc plist nil from #1531# to #1340# cost 0.398813) #s(costed-arc plist nil from #1531# to #1341# cost 0.511152) #s(costed-arc plist nil from #1531# to #1342# cost 0.589931) #s(costed-arc plist nil from #1531# to #1343# cost 0.381629) #s(costed-arc plist nil from #1531# to #1344# cost 0.208026) #s(costed-arc plist nil from #1531# to #1345# cost 0.295527) #s(costed-arc plist nil from #1531# to #1346# cost 0.410137) #s(costed-arc plist nil from #1531# to #1347# cost 0.528908) #s(costed-arc plist nil from #1531# to #1117# cost 0.307444) #s(costed-arc plist nil from #1531# to #1348# cost 0.16802) #s(costed-arc plist nil from #1531# to #1349# cost 0.210394) #s(costed-arc plist nil from #1531# to #1350# cost 0.353295) #s(costed-arc plist nil from #1531# to #1080# cost 0.500401) #s(costed-arc plist nil from #1531# to #984# cost 0.324282) #s(costed-arc plist nil from #1531# to #1188# cost 0.231241) #s(costed-arc plist nil from #1531# to #1182# cost 0.27217) #s(costed-arc plist nil from #1531# to #1351# cost 0.380618)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(235.981 55.3472 16.6761 139.499 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998975 -0.045274 0.0) (0.045274 0.998975 0.0) (0.0 0.0 1.0)) pos #f(-59.9201 -215.512 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.395815) #s(costed-arc plist nil from #1520# to #1532=#s(extended-node plist ((:name . "l-2-3-8")) arc-list (#s(costed-arc plist nil from #1532# to #1337# cost 0.780668) #s(costed-arc plist nil from #1532# to #1338# cost 0.566806) #s(costed-arc plist nil from #1532# to #1339# cost 0.455115) #s(costed-arc plist nil from #1532# to #1340# cost 0.397275) #s(costed-arc plist nil from #1532# to #1341# cost 0.456386) #s(costed-arc plist nil from #1532# to #1342# cost 0.700416) #s(costed-arc plist nil from #1532# to #1343# cost 0.496476) #s(costed-arc plist nil from #1532# to #1344# cost 0.300132) #s(costed-arc plist nil from #1532# to #1345# cost 0.308885) #s(costed-arc plist nil from #1532# to #1346# cost 0.363912) #s(costed-arc plist nil from #1532# to #1347# cost 0.64891) #s(costed-arc plist nil from #1532# to #1117# cost 0.430309) #s(costed-arc plist nil from #1532# to #1348# cost 0.285258) #s(costed-arc plist nil from #1532# to #1349# cost 0.183451) #s(costed-arc plist nil from #1532# to #1350# cost 0.318805) #s(costed-arc plist nil from #1532# to #1080# cost 0.615527) #s(costed-arc plist nil from #1532# to #984# cost 0.434999) #s(costed-arc plist nil from #1532# to #1188# cost 0.31665) #s(costed-arc plist nil from #1532# to #1182# cost 0.280432) #s(costed-arc plist nil from #1532# to #1351# cost 0.354137)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(248.71 55.8161 -1.98211 129.361 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998881 -0.047291 0.0) (0.047291 0.998881 0.0) (0.0 0.0 1.0)) pos #f(-54.6547 -235.612 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.419712) #s(costed-arc plist nil from #1520# to #1533=#s(extended-node plist ((:name . "l-2-3-7")) arc-list (#s(costed-arc plist nil from #1533# to #1337# cost 0.858709) #s(costed-arc plist nil from #1533# to #1338# cost 0.643234) #s(costed-arc plist nil from #1533# to #1339# cost 0.483778) #s(costed-arc plist nil from #1533# to #1340# cost 0.383015) #s(costed-arc plist nil from #1533# to #1341# cost 0.364776) #s(costed-arc plist nil from #1533# to #1342# cost 0.761933) #s(costed-arc plist nil from #1533# to #1343# cost 0.543734) #s(costed-arc plist nil from #1533# to #1344# cost 0.372887) #s(costed-arc plist nil from #1533# to #1345# cost 0.264608) #s(costed-arc plist nil from #1533# to #1346# cost 0.214226) #s(costed-arc plist nil from #1533# to #1347# cost 0.696184) #s(costed-arc plist nil from #1533# to #1117# cost 0.475533) #s(costed-arc plist nil from #1533# to #1348# cost 0.311412) #s(costed-arc plist nil from #1533# to #1349# cost 0.212125) #s(costed-arc plist nil from #1533# to #1350# cost 0.160664) #s(costed-arc plist nil from #1533# to #1080# cost 0.669111) #s(costed-arc plist nil from #1533# to #984# cost 0.486627) #s(costed-arc plist nil from #1533# to #1188# cost 0.346958) #s(costed-arc plist nil from #1533# to #1182# cost 0.251489) #s(costed-arc plist nil from #1533# to #1351# cost 0.236297)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(251.531 52.6786 -20.2598 148.628 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999069 -0.043135 0.0) (0.043135 0.999069 0.0) (0.0 0.0 1.0)) pos #f(-73.848 -180.058 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.588453) #s(costed-arc plist nil from #1520# to #1264# cost 0.527323) #s(costed-arc plist nil from #1520# to #1534=#s(extended-node plist ((:name . "l-2-3-4")) arc-list (#s(costed-arc plist nil from #1534# to #1337# cost 0.67544) #s(costed-arc plist nil from #1534# to #1338# cost 0.515995) #s(costed-arc plist nil from #1534# to #1339# cost 0.504577) #s(costed-arc plist nil from #1534# to #1340# cost 0.565539) #s(costed-arc plist nil from #1534# to #1341# cost 0.687167) #s(costed-arc plist nil from #1534# to #1342# cost 0.554672) #s(costed-arc plist nil from #1534# to #1343# cost 0.387081) #s(costed-arc plist nil from #1534# to #1344# cost 0.362314) #s(costed-arc plist nil from #1534# to #1345# cost 0.447367) #s(costed-arc plist nil from #1534# to #1346# cost 0.571725) #s(costed-arc plist nil from #1534# to #1347# cost 0.458747) #s(costed-arc plist nil from #1534# to #1117# cost 0.253857) #s(costed-arc plist nil from #1534# to #1348# cost 0.273404) #s(costed-arc plist nil from #1534# to #1349# cost 0.36722) #s(costed-arc plist nil from #1534# to #1350# cost 0.490696) #s(costed-arc plist nil from #1534# to #1080# cost 0.394981) #s(costed-arc plist nil from #1534# to #984# cost 0.21764) #s(costed-arc plist nil from #1534# to #1188# cost 0.236877) #s(costed-arc plist nil from #1534# to #1182# cost 0.321601) #s(costed-arc plist nil from #1534# to #1351# cost 0.45725)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(234.636 59.9211 37.7846 141.528 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(156.072 25.7084 27.1831 138.885 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.996779 -0.080197 0.0) (0.080197 0.996779 0.0) (0.0 0.0 1.0)) pos #f(-157.005 -208.78 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.823137 -0.567842 0.0) (0.567842 0.823137 0.0) (0.0 0.0 1.0)) pos #f(-129.507 -176.471 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.459005) #s(costed-arc plist nil from #1520# to #1535=#s(extended-node plist ((:name . "l-2-3-3")) arc-list (#s(costed-arc plist nil from #1535# to #1337# cost 0.817617) #s(costed-arc plist nil from #1535# to #1338# cost 0.617876) #s(costed-arc plist nil from #1535# to #1339# cost 0.517241) #s(costed-arc plist nil from #1535# to #1340# cost 0.535799) #s(costed-arc plist nil from #1535# to #1341# cost 0.644654) #s(costed-arc plist nil from #1535# to #1342# cost 0.707191) #s(costed-arc plist nil from #1535# to #1343# cost 0.497261) #s(costed-arc plist nil from #1535# to #1344# cost 0.363614) #s(costed-arc plist nil from #1535# to #1345# cost 0.406048) #s(costed-arc plist nil from #1535# to #1346# cost 0.523969) #s(costed-arc plist nil from #1535# to #1347# cost 0.618845) #s(costed-arc plist nil from #1535# to #1117# cost 0.393624) #s(costed-arc plist nil from #1535# to #1348# cost 0.238903) #s(costed-arc plist nil from #1535# to #1349# cost 0.323244) #s(costed-arc plist nil from #1535# to #1350# cost 0.440271) #s(costed-arc plist nil from #1535# to #1080# cost 0.55636) #s(costed-arc plist nil from #1535# to #984# cost 0.3484) #s(costed-arc plist nil from #1535# to #1188# cost 0.219626) #s(costed-arc plist nil from #1535# to #1182# cost 0.276131) #s(costed-arc plist nil from #1535# to #1351# cost 0.410367)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(240.767 59.7801 17.4238 145.266 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.996024 -0.089082 0.0) (0.089082 0.996024 0.0) (0.0 0.0 1.0)) pos #f(-185.511 -277.012 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.507837) #s(costed-arc plist nil from #1520# to #1536=#s(extended-node plist ((:name . "l-2-3-2")) arc-list (#s(costed-arc plist nil from #1536# to #1337# cost 0.921825) #s(costed-arc plist nil from #1536# to #1338# cost 0.712667) #s(costed-arc plist nil from #1536# to #1339# cost 0.569246) #s(costed-arc plist nil from #1536# to #1340# cost 0.516494) #s(costed-arc plist nil from #1536# to #1341# cost 0.582953) #s(costed-arc plist nil from #1536# to #1342# cost 0.814907) #s(costed-arc plist nil from #1536# to #1343# cost 0.597948) #s(costed-arc plist nil from #1536# to #1344# cost 0.438387) #s(costed-arc plist nil from #1536# to #1345# cost 0.367103) #s(costed-arc plist nil from #1536# to #1346# cost 0.44655) #s(costed-arc plist nil from #1536# to #1347# cost 0.729019) #s(costed-arc plist nil from #1536# to #1117# cost 0.504345) #s(costed-arc plist nil from #1536# to #1348# cost 0.337468) #s(costed-arc plist nil from #1536# to #1349# cost 0.289696) #s(costed-arc plist nil from #1536# to #1350# cost 0.351628) #s(costed-arc plist nil from #1536# to #1080# cost 0.667024) #s(costed-arc plist nil from #1536# to #984# cost 0.456569) #s(costed-arc plist nil from #1536# to #1188# cost 0.296708) #s(costed-arc plist nil from #1536# to #1182# cost 0.226945) #s(costed-arc plist nil from #1536# to #1351# cost 0.330348)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(244.42 59.975 -1.34436 149.307 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99591 -0.090356 0.0) (0.090356 0.99591 0.0) (0.0 0.0 1.0)) pos #f(-190.8 -291.693 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.583619) #s(costed-arc plist nil from #1520# to #1537=#s(extended-node plist ((:name . "l-2-3-1")) arc-list (#s(costed-arc plist nil from #1537# to #1337# cost 0.992649) #s(costed-arc plist nil from #1537# to #1338# cost 0.780616) #s(costed-arc plist nil from #1537# to #1339# cost 0.622921) #s(costed-arc plist nil from #1537# to #1340# cost 0.53446) #s(costed-arc plist nil from #1537# to #1341# cost 0.531066) #s(costed-arc plist nil from #1537# to #1342# cost 0.885331) #s(costed-arc plist nil from #1537# to #1343# cost 0.665957) #s(costed-arc plist nil from #1537# to #1344# cost 0.505674) #s(costed-arc plist nil from #1537# to #1345# cost 0.395002) #s(costed-arc plist nil from #1537# to #1346# cost 0.373464) #s(costed-arc plist nil from #1537# to #1347# cost 0.799811) #s(costed-arc plist nil from #1537# to #1117# cost 0.575953) #s(costed-arc plist nil from #1537# to #1348# cost 0.4091) #s(costed-arc plist nil from #1537# to #1349# cost 0.329381) #s(costed-arc plist nil from #1537# to #1350# cost 0.230351) #s(costed-arc plist nil from #1537# to #1080# cost 0.738717) #s(costed-arc plist nil from #1537# to #984# cost 0.527766) #s(costed-arc plist nil from #1537# to #1188# cost 0.365083) #s(costed-arc plist nil from #1537# to #1182# cost 0.260983) #s(costed-arc plist nil from #1537# to #1351# cost 0.242146)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(248.419 60.2172 -20.2138 154.039 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99638 -0.085013 0.0) (0.085013 0.99638 0.0) (0.0 0.0 1.0)) pos #f(-177.946 -257.052 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.665802)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(226.973 63.2446 35.3785 108.949 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(154.643 28.8158 25.4145 102.147 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998405 0.056465 0.0) (-0.056465 0.998405 0.0) (0.0 0.0 1.0)) pos #f(82.9003 -339.746 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.892887 -0.45028 0.0) (0.45028 0.892887 0.0) (0.0 0.0 1.0)) pos #f(114.546 -311.488 0.0)) object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1519# to #1518# cost 0)) arm :arms islands (#1538# #1539#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(230.235 -21.2591 37.0977 173.976 -120.0 20.0 -30.0 180.0 2.4892 16.6637 -156.592 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.045426 -0.998968 0.0) (0.998968 -0.045426 0.0) (0.0 0.0 1.0)) pos #f(299.365 -129.335 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1518# to #1324# cost 0.3877) #s(costed-arc plist nil from #1518# to #1355# cost 0.423554) #s(costed-arc plist nil from #1518# to #1266# cost 0.516665) #s(costed-arc plist nil from #1518# to #1334# cost 0.576385) #s(costed-arc plist nil from #1518# to #1318# cost 0.413298) #s(costed-arc plist nil from #1518# to #1489# cost 0.538974) #s(costed-arc plist nil from #1518# to #1260# cost 0.487033) #s(costed-arc plist nil from #1518# to #1490# cost 0.719029) #s(costed-arc plist nil from #1518# to #1312# cost 0.721831) #s(costed-arc plist nil from #1518# to #1491# cost 0.770371) #s(costed-arc plist nil from #1518# to #1304# cost 0.999361) #s(costed-arc plist nil from #1518# to #1492# cost 1.17713) #s(costed-arc plist nil from #1518# to #1493# cost 1.07456) #s(costed-arc plist nil from #1518# to #1494# cost 1.28859) #s(costed-arc plist nil from #1518# to #1495# cost 1.34939) #s(costed-arc plist nil from #1518# to #1496# cost 1.46419) #s(costed-arc plist nil from #1518# to #1497# cost 1.5428) #s(costed-arc plist nil from #1518# to #1498# cost 1.67685) #s(costed-arc plist nil from #1518# to #1499# cost 1.84703)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(256.384 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 2.44534 19.6062 -157.962 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.045426 -0.998968 0.0) (0.998968 -0.045426 0.0) (0.0 0.0 1.0)) pos #f(299.365 -129.335 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.02064) #s(costed-arc plist nil from #1476# to #1502# cost 0.919998) #s(costed-arc plist nil from #1476# to #1485# cost 0.939268) #s(costed-arc plist nil from #1476# to #1540=#s(extended-node plist ((:name . "r-2-2-11")) arc-list (#s(costed-arc plist nil from #1540# to #1324# cost 0.898006) #s(costed-arc plist nil from #1540# to #1355# cost 0.810319) #s(costed-arc plist nil from #1540# to #1266# cost 0.910013) #s(costed-arc plist nil from #1540# to #1334# cost 1.05323) #s(costed-arc plist nil from #1540# to #1318# cost 0.729872) #s(costed-arc plist nil from #1540# to #1489# cost 0.971276) #s(costed-arc plist nil from #1540# to #1260# cost 0.92249) #s(costed-arc plist nil from #1540# to #1490# cost 0.958087) #s(costed-arc plist nil from #1540# to #1312# cost 1.02509) #s(costed-arc plist nil from #1540# to #1491# cost 0.527635) #s(costed-arc plist nil from #1540# to #1304# cost 1.21117) #s(costed-arc plist nil from #1540# to #1492# cost 1.42253) #s(costed-arc plist nil from #1540# to #1493# cost 1.34285) #s(costed-arc plist nil from #1540# to #1494# cost 1.51102) #s(costed-arc plist nil from #1540# to #1495# cost 1.48401) #s(costed-arc plist nil from #1540# to #1496# cost 1.67468) #s(costed-arc plist nil from #1540# to #1497# cost 1.77297) #s(costed-arc plist nil from #1540# to #1498# cost 1.90925) #s(costed-arc plist nil from #1540# to #1499# cost 2.08898)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(78.2972 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -38.6241 39.7616 -168.268 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(134.64 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -73.93 48.4129 -171.109 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.326237 -0.945288 0.0) (0.945288 -0.326237 0.0) (0.0 0.0 1.0)) pos #f(-88.8238 -184.422 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.755174 -0.655525 0.0) (0.655525 -0.755174 0.0) (0.0 0.0 1.0)) pos #f(-73.4923 -210.867 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.37842) #s(costed-arc plist nil from #1476# to #1514# cost 0.769531) #s(costed-arc plist nil from #1476# to #1541=#s(extended-node plist ((:name . "r-2-2-9")) arc-list (#s(costed-arc plist nil from #1541# to #1324# cost 0.670029) #s(costed-arc plist nil from #1541# to #1355# cost 0.580691) #s(costed-arc plist nil from #1541# to #1266# cost 0.606125) #s(costed-arc plist nil from #1541# to #1334# cost 0.687819) #s(costed-arc plist nil from #1541# to #1318# cost 0.689562) #s(costed-arc plist nil from #1541# to #1489# cost 0.380777) #s(costed-arc plist nil from #1541# to #1260# cost 0.337482) #s(costed-arc plist nil from #1541# to #1490# cost 0.377307) #s(costed-arc plist nil from #1541# to #1312# cost 0.509133) #s(costed-arc plist nil from #1541# to #1491# cost 0.893326) #s(costed-arc plist nil from #1541# to #1304# cost 0.449988) #s(costed-arc plist nil from #1541# to #1492# cost 0.506636) #s(costed-arc plist nil from #1541# to #1493# cost 0.487258) #s(costed-arc plist nil from #1541# to #1494# cost 0.670152) #s(costed-arc plist nil from #1541# to #1495# cost 0.786718) #s(costed-arc plist nil from #1541# to #1496# cost 0.851326) #s(costed-arc plist nil from #1541# to #1497# cost 0.880224) #s(costed-arc plist nil from #1541# to #1498# cost 1.00604) #s(costed-arc plist nil from #1541# to #1499# cost 1.2176)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(231.878 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.50798 16.3193 -142.081 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.468876 -0.883264 0.0) (0.883264 0.468876 0.0) (0.0 0.0 1.0)) pos #f(-70.9928 -113.156 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.582164) #s(costed-arc plist nil from #1476# to #1542=#s(extended-node plist ((:name . "r-2-2-8")) arc-list (#s(costed-arc plist nil from #1542# to #1324# cost 0.65218) #s(costed-arc plist nil from #1542# to #1355# cost 0.602129) #s(costed-arc plist nil from #1542# to #1266# cost 0.605836) #s(costed-arc plist nil from #1542# to #1334# cost 0.622802) #s(costed-arc plist nil from #1542# to #1318# cost 0.716624) #s(costed-arc plist nil from #1542# to #1489# cost 0.429262) #s(costed-arc plist nil from #1542# to #1260# cost 0.326553) #s(costed-arc plist nil from #1542# to #1490# cost 0.44339) #s(costed-arc plist nil from #1542# to #1312# cost 0.506749) #s(costed-arc plist nil from #1542# to #1491# cost 0.990377) #s(costed-arc plist nil from #1542# to #1304# cost 0.682375) #s(costed-arc plist nil from #1542# to #1492# cost 0.775174) #s(costed-arc plist nil from #1542# to #1493# cost 0.522154) #s(costed-arc plist nil from #1542# to #1494# cost 0.803568) #s(costed-arc plist nil from #1542# to #1495# cost 1.01118) #s(costed-arc plist nil from #1542# to #1496# cost 1.05924) #s(costed-arc plist nil from #1542# to #1497# cost 1.07129) #s(costed-arc plist nil from #1542# to #1498# cost 1.16149) #s(costed-arc plist nil from #1542# to #1499# cost 1.3055)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(273.642 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 18.4696 2.14143 -159.724 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.396231 -0.918151 0.0) (0.918151 0.396231 0.0) (0.0 0.0 1.0)) pos #f(64.5854 -175.684 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.480411) #s(costed-arc plist nil from #1476# to #1481# cost 0.479652) #s(costed-arc plist nil from #1476# to #1543=#s(extended-node plist ((:name . "r-2-2-5")) arc-list (#s(costed-arc plist nil from #1543# to #1324# cost 0.708655) #s(costed-arc plist nil from #1543# to #1355# cost 0.747609) #s(costed-arc plist nil from #1543# to #1266# cost 0.830374) #s(costed-arc plist nil from #1543# to #1334# cost 0.938621) #s(costed-arc plist nil from #1543# to #1318# cost 0.642101) #s(costed-arc plist nil from #1543# to #1489# cost 0.517829) #s(costed-arc plist nil from #1543# to #1260# cost 0.490314) #s(costed-arc plist nil from #1543# to #1490# cost 0.546623) #s(costed-arc plist nil from #1543# to #1312# cost 0.729081) #s(costed-arc plist nil from #1543# to #1491# cost 0.781678) #s(costed-arc plist nil from #1543# to #1304# cost 0.419851) #s(costed-arc plist nil from #1543# to #1492# cost 0.62323) #s(costed-arc plist nil from #1543# to #1493# cost 0.569266) #s(costed-arc plist nil from #1543# to #1494# cost 0.788055) #s(costed-arc plist nil from #1543# to #1495# cost 0.535899) #s(costed-arc plist nil from #1543# to #1496# cost 0.749599) #s(costed-arc plist nil from #1543# to #1497# cost 0.899276) #s(costed-arc plist nil from #1543# to #1498# cost 1.08139) #s(costed-arc plist nil from #1543# to #1499# cost 1.3055)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(150.281 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.40758 50.87 -154.853 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(173.396 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.19462 55.3051 -188.298 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.476565 -0.879139 0.0) (0.879139 0.476565 0.0) (0.0 0.0 1.0)) pos #f(-186.443 -67.5188 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.177816 -0.984064 0.0) (0.984064 0.177816 0.0) (0.0 0.0 1.0)) pos #f(-173.702 -103.512 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.806932) #s(costed-arc plist nil from #1476# to #1544=#s(extended-node plist ((:name . "r-2-2-4")) arc-list (#s(costed-arc plist nil from #1544# to #1324# cost 0.887825) #s(costed-arc plist nil from #1544# to #1355# cost 0.901751) #s(costed-arc plist nil from #1544# to #1266# cost 0.953416) #s(costed-arc plist nil from #1544# to #1334# cost 1.03913) #s(costed-arc plist nil from #1544# to #1318# cost 0.868358) #s(costed-arc plist nil from #1544# to #1489# cost 0.627107) #s(costed-arc plist nil from #1544# to #1260# cost 0.61955) #s(costed-arc plist nil from #1544# to #1490# cost 0.695201) #s(costed-arc plist nil from #1544# to #1312# cost 0.84161) #s(costed-arc plist nil from #1544# to #1491# cost 1.06147) #s(costed-arc plist nil from #1544# to #1304# cost 0.413305) #s(costed-arc plist nil from #1544# to #1492# cost 0.467393) #s(costed-arc plist nil from #1544# to #1493# cost 0.395098) #s(costed-arc plist nil from #1544# to #1494# cost 0.625851) #s(costed-arc plist nil from #1544# to #1495# cost 0.512673) #s(costed-arc plist nil from #1544# to #1496# cost 0.529775) #s(costed-arc plist nil from #1544# to #1497# cost 0.693923) #s(costed-arc plist nil from #1544# to #1498# cost 0.885507) #s(costed-arc plist nil from #1544# to #1499# cost 1.12029)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(243.371 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 25.8501 39.2724 -148.008 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(288.962 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -0.271477 46.0252 -214.859 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.654146 -0.756368 0.0) (0.756368 0.654146 0.0) (0.0 0.0 1.0)) pos #f(-145.676 -112.163 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.188385 -0.982095 0.0) (0.982095 0.188385 0.0) (0.0 0.0 1.0)) pos #f(-142.609 -154.479 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.539275) #s(costed-arc plist nil from #1476# to #1545=#s(extended-node plist ((:name . "r-2-2-3")) arc-list (#s(costed-arc plist nil from #1545# to #1324# cost 1.0404) #s(costed-arc plist nil from #1545# to #1355# cost 1.00073) #s(costed-arc plist nil from #1545# to #1266# cost 1.01265) #s(costed-arc plist nil from #1545# to #1334# cost 1.07074) #s(costed-arc plist nil from #1545# to #1318# cost 1.04733) #s(costed-arc plist nil from #1545# to #1489# cost 0.739342) #s(costed-arc plist nil from #1545# to #1260# cost 0.717469) #s(costed-arc plist nil from #1545# to #1490# cost 0.760067) #s(costed-arc plist nil from #1545# to #1312# cost 0.877679) #s(costed-arc plist nil from #1545# to #1491# cost 1.201) #s(costed-arc plist nil from #1545# to #1304# cost 0.537139) #s(costed-arc plist nil from #1545# to #1492# cost 0.373176) #s(costed-arc plist nil from #1545# to #1493# cost 0.36479) #s(costed-arc plist nil from #1545# to #1494# cost 0.541999) #s(costed-arc plist nil from #1545# to #1495# cost 0.55761) #s(costed-arc plist nil from #1545# to #1496# cost 0.553109) #s(costed-arc plist nil from #1545# to #1497# cost 0.534123) #s(costed-arc plist nil from #1545# to #1498# cost 0.723554) #s(costed-arc plist nil from #1545# to #1499# cost 0.966895)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(263.676 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.7514 20.111 -142.151 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.73044 -0.682977 0.0) (0.682977 0.73044 0.0) (0.0 0.0 1.0)) pos #f(-170.291 -166.46 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.476516) #s(costed-arc plist nil from #1476# to #1546=#s(extended-node plist ((:name . "r-2-2-2")) arc-list (#s(costed-arc plist nil from #1546# to #1324# cost 1.20798) #s(costed-arc plist nil from #1546# to #1355# cost 1.11) #s(costed-arc plist nil from #1546# to #1266# cost 1.07047) #s(costed-arc plist nil from #1546# to #1334# cost 1.09236) #s(costed-arc plist nil from #1546# to #1318# cost 1.21654) #s(costed-arc plist nil from #1546# to #1489# cost 0.89505) #s(costed-arc plist nil from #1546# to #1260# cost 0.85039) #s(costed-arc plist nil from #1546# to #1490# cost 0.808434) #s(costed-arc plist nil from #1546# to #1312# cost 0.888646) #s(costed-arc plist nil from #1546# to #1491# cost 1.29471) #s(costed-arc plist nil from #1546# to #1304# cost 0.649412) #s(costed-arc plist nil from #1546# to #1492# cost 0.436618) #s(costed-arc plist nil from #1546# to #1493# cost 0.413542) #s(costed-arc plist nil from #1546# to #1494# cost 0.513513) #s(costed-arc plist nil from #1546# to #1495# cost 0.660151) #s(costed-arc plist nil from #1546# to #1496# cost 0.570533) #s(costed-arc plist nil from #1546# to #1497# cost 0.514715) #s(costed-arc plist nil from #1546# to #1498# cost 0.522944) #s(costed-arc plist nil from #1546# to #1499# cost 0.786506)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(269.619 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.1045 1.08609 -134.707 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(262.035 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 32.3493 -1.39981 -98.978 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.79298 -0.609248 0.0) (0.609248 0.79298 0.0) (0.0 0.0 1.0)) pos #f(-222.606 -156.692 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.776671 -0.629906 0.0) (0.629906 0.776671 0.0) (0.0 0.0 1.0)) pos #f(-188.537 -168.349 0.0)) object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.507251) #s(costed-arc plist nil from #1476# to #1547=#s(extended-node plist ((:name . "r-2-2-1")) arc-list (#s(costed-arc plist nil from #1547# to #1324# cost 1.40408) #s(costed-arc plist nil from #1547# to #1355# cost 1.28052) #s(costed-arc plist nil from #1547# to #1266# cost 1.21909) #s(costed-arc plist nil from #1547# to #1334# cost 1.19866) #s(costed-arc plist nil from #1547# to #1318# cost 1.40789) #s(costed-arc plist nil from #1547# to #1489# cost 1.10234) #s(costed-arc plist nil from #1547# to #1260# cost 1.01461) #s(costed-arc plist nil from #1547# to #1490# cost 0.916738) #s(costed-arc plist nil from #1547# to #1312# cost 0.97192) #s(costed-arc plist nil from #1547# to #1491# cost 1.37074) #s(costed-arc plist nil from #1547# to #1304# cost 0.759906) #s(costed-arc plist nil from #1547# to #1492# cost 0.553825) #s(costed-arc plist nil from #1547# to #1493# cost 0.479406) #s(costed-arc plist nil from #1547# to #1494# cost 0.513928) #s(costed-arc plist nil from #1547# to #1495# cost 0.784721) #s(costed-arc plist nil from #1547# to #1496# cost 0.502843) #s(costed-arc plist nil from #1547# to #1497# cost 0.42144) #s(costed-arc plist nil from #1547# to #1498# cost 0.420657) #s(costed-arc plist nil from #1547# to #1499# cost 0.488946)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(270.975 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.0534 -17.7461 -143.325 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.882873 -0.469611 0.0) (0.469611 0.882873 0.0) (0.0 0.0 1.0)) pos #f(-280.389 -68.938 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.605292)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(266.856 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.1811 -18.252 -152.622 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.669046 -0.743221 0.0) (0.743221 0.669046 0.0) (0.0 0.0 1.0)) pos #f(58.592 -356.063 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1548=#s(extended-node plist ((:name . "r-2-1-2")) arc-list (#s(costed-arc plist nil from #1548# to #1477# cost 1.26395) #s(costed-arc plist nil from #1548# to #1510# cost 1.25879) #s(costed-arc plist nil from #1548# to #1517# cost 1.19374) #s(costed-arc plist nil from #1548# to #1506# cost 0.923271) #s(costed-arc plist nil from #1548# to #1518# cost 0.854673) #s(costed-arc plist nil from #1548# to #1502# cost 0.825902) #s(costed-arc plist nil from #1548# to #1485# cost 0.88198) #s(costed-arc plist nil from #1548# to #1540# cost 1.29193) #s(costed-arc plist nil from #1548# to #1514# cost 0.657391) #s(costed-arc plist nil from #1548# to #1541# cost 0.486134) #s(costed-arc plist nil from #1548# to #1542# cost 0.372583) #s(costed-arc plist nil from #1548# to #1481# cost 0.491311) #s(costed-arc plist nil from #1548# to #1543# cost 0.679532) #s(costed-arc plist nil from #1548# to #1544# cost 0.581991) #s(costed-arc plist nil from #1548# to #1545# cost 0.559444) #s(costed-arc plist nil from #1548# to #1546# cost 0.649755) #s(costed-arc plist nil from #1548# to #1547# cost 0.846845)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(267.328 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 30.8763 1.45547 -155.747 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55503 -0.83183 0.0) (0.83183 0.55503 0.0) (0.0 0.0 1.0)) pos #f(133.82 -419.735 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1549=#s(extended-node plist ((:name . "r-2-1-3")) arc-list (#s(costed-arc plist nil from #1549# to #1477# cost 1.19297) #s(costed-arc plist nil from #1549# to #1510# cost 1.24214) #s(costed-arc plist nil from #1549# to #1517# cost 1.07449) #s(costed-arc plist nil from #1549# to #1506# cost 0.822931) #s(costed-arc plist nil from #1549# to #1518# cost 0.76352) #s(costed-arc plist nil from #1549# to #1502# cost 0.796473) #s(costed-arc plist nil from #1549# to #1485# cost 0.890643) #s(costed-arc plist nil from #1549# to #1540# cost 1.21828) #s(costed-arc plist nil from #1549# to #1514# cost 0.573484) #s(costed-arc plist nil from #1549# to #1541# cost 0.441962) #s(costed-arc plist nil from #1549# to #1542# cost 0.3749) #s(costed-arc plist nil from #1549# to #1481# cost 0.535043) #s(costed-arc plist nil from #1549# to #1543# cost 0.559187) #s(costed-arc plist nil from #1549# to #1544# cost 0.553321) #s(costed-arc plist nil from #1549# to #1545# cost 0.590309) #s(costed-arc plist nil from #1549# to #1546# cost 0.765899) #s(costed-arc plist nil from #1549# to #1547# cost 1.00306)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(263.389 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 31.2232 20.5065 -159.879 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.499739 -0.866176 0.0) (0.866176 0.499739 0.0) (0.0 0.0 1.0)) pos #f(168.081 -405.924 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1550=#s(extended-node plist ((:name . "r-2-1-4")) arc-list (#s(costed-arc plist nil from #1550# to #1477# cost 1.0663) #s(costed-arc plist nil from #1550# to #1510# cost 1.16895) #s(costed-arc plist nil from #1550# to #1517# cost 0.902541) #s(costed-arc plist nil from #1550# to #1506# cost 0.7057) #s(costed-arc plist nil from #1550# to #1518# cost 0.662248) #s(costed-arc plist nil from #1550# to #1502# cost 0.717035) #s(costed-arc plist nil from #1550# to #1485# cost 0.855792) #s(costed-arc plist nil from #1550# to #1540# cost 1.05416) #s(costed-arc plist nil from #1550# to #1514# cost 0.434935) #s(costed-arc plist nil from #1550# to #1541# cost 0.463907) #s(costed-arc plist nil from #1550# to #1542# cost 0.335869) #s(costed-arc plist nil from #1550# to #1481# cost 0.501061) #s(costed-arc plist nil from #1550# to #1543# cost 0.475058) #s(costed-arc plist nil from #1550# to #1544# cost 0.556705) #s(costed-arc plist nil from #1550# to #1545# cost 0.695942) #s(costed-arc plist nil from #1550# to #1546# cost 0.898208) #s(costed-arc plist nil from #1550# to #1547# cost 1.14629)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(242.258 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 24.3922 39.4152 -163.26 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(288.951 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -1.10758 46.0248 -214.859 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.399476 -0.916744 0.0) (0.916744 0.399476 0.0) (0.0 0.0 1.0)) pos #f(150.176 -348.371 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.112415 -0.993661 0.0) (0.993661 -0.112415 0.0) (0.0 0.0 1.0)) pos #f(165.694 -387.857 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1551=#s(extended-node plist ((:name . "r-2-1-5")) arc-list (#s(costed-arc plist nil from #1551# to #1477# cost 0.866205) #s(costed-arc plist nil from #1551# to #1510# cost 1.01539) #s(costed-arc plist nil from #1551# to #1517# cost 0.671924) #s(costed-arc plist nil from #1551# to #1506# cost 0.556322) #s(costed-arc plist nil from #1551# to #1518# cost 0.534563) #s(costed-arc plist nil from #1551# to #1502# cost 0.568953) #s(costed-arc plist nil from #1551# to #1485# cost 0.753603) #s(costed-arc plist nil from #1551# to #1540# cost 0.77897) #s(costed-arc plist nil from #1551# to #1514# cost 0.366361) #s(costed-arc plist nil from #1551# to #1541# cost 0.586498) #s(costed-arc plist nil from #1551# to #1542# cost 0.506113) #s(costed-arc plist nil from #1551# to #1481# cost 0.626929) #s(costed-arc plist nil from #1551# to #1543# cost 0.498081) #s(costed-arc plist nil from #1551# to #1544# cost 0.707855) #s(costed-arc plist nil from #1551# to #1545# cost 0.863112) #s(costed-arc plist nil from #1551# to #1546# cost 1.05982) #s(costed-arc plist nil from #1551# to #1547# cost 1.31202)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(148.68 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 7.29822 50.7055 -160.282 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(178.254 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.82745 56.1159 -170.101 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.199132 -0.979973 0.0) (0.979973 0.199132 0.0) (0.0 0.0 1.0)) pos #f(89.1979 -316.868 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.163118 -0.986607 0.0) (0.986607 -0.163118 0.0) (0.0 0.0 1.0)) pos #f(110.658 -349.408 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-6")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1552=#s(extended-node plist ((:name . "r-2-1-7")) arc-list (#s(costed-arc plist nil from #1552# to #1477# cost 0.796292) #s(costed-arc plist nil from #1552# to #1510# cost 0.718715) #s(costed-arc plist nil from #1552# to #1517# cost 0.814567) #s(costed-arc plist nil from #1552# to #1506# cost 0.556719) #s(costed-arc plist nil from #1552# to #1518# cost 0.465824) #s(costed-arc plist nil from #1552# to #1502# cost 0.365765) #s(costed-arc plist nil from #1552# to #1485# cost 0.365523) #s(costed-arc plist nil from #1552# to #1540# cost 0.940578) #s(costed-arc plist nil from #1552# to #1514# cost 0.59045) #s(costed-arc plist nil from #1552# to #1541# cost 0.689033) #s(costed-arc plist nil from #1552# to #1542# cost 0.461811) #s(costed-arc plist nil from #1552# to #1481# cost 0.435664) #s(costed-arc plist nil from #1552# to #1543# cost 0.944219) #s(costed-arc plist nil from #1552# to #1544# cost 1.01658) #s(costed-arc plist nil from #1552# to #1545# cost 1.01818) #s(costed-arc plist nil from #1552# to #1546# cost 1.072) #s(costed-arc plist nil from #1552# to #1547# cost 1.18787)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(271.361 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 4.91534 -17.6736 -157.25 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.134173 -0.990958 0.0) (0.990958 0.134173 0.0) (0.0 0.0 1.0)) pos #f(214.864 -317.128 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-8")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1553=#s(extended-node plist ((:name . #1563="r-2-1-9")) arc-list (#s(costed-arc plist nil from #1553# to #1554=#s(extended-node plist ((:name . "r-2-1-9<->-l-1-1-5")) arc-list (#s(costed-arc plist nil from #1554# to #1555=#s(extended-node plist ((:name . #1559="l-1-1-5")) arc-list (#s(costed-arc plist nil from #1555# to #1554# cost 0) #s(costed-arc plist nil from #1555# to #1556=#s(extended-node plist ((:name . "r-2-1-10<->-l-1-1-5")) arc-list (#s(costed-arc plist nil from #1556# to #1555# cost 0) #s(costed-arc plist nil from #1556# to #1557=#s(extended-node plist ((:name . #1558="r-2-1-10")) arc-list (#s(costed-arc plist nil from #1557# to #1556# cost 0) #s(costed-arc plist nil from #1557# to #1477# cost 0.607524) #s(costed-arc plist nil from #1557# to #1510# cost 0.72063) #s(costed-arc plist nil from #1557# to #1517# cost 0.506213) #s(costed-arc plist nil from #1557# to #1506# cost 0.319534) #s(costed-arc plist nil from #1557# to #1518# cost 0.227047) #s(costed-arc plist nil from #1557# to #1502# cost 0.303879) #s(costed-arc plist nil from #1557# to #1485# cost 0.449327) #s(costed-arc plist nil from #1557# to #1540# cost 0.679425) #s(costed-arc plist nil from #1557# to #1514# cost 0.515218) #s(costed-arc plist nil from #1557# to #1541# cost 0.732712) #s(costed-arc plist nil from #1557# to #1542# cost 0.610888) #s(costed-arc plist nil from #1557# to #1481# cost 0.729592) #s(costed-arc plist nil from #1557# to #1543# cost 0.826661) #s(costed-arc plist nil from #1557# to #1544# cost 0.971082) #s(costed-arc plist nil from #1557# to #1545# cost 1.07241) #s(costed-arc plist nil from #1557# to #1546# cost 1.23641) #s(costed-arc plist nil from #1557# to #1547# cost 1.45586)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(159.907 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -0.964933 28.1733 -162.796 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.003387 -0.999994 0.0) (0.999994 -0.003387 0.0) (0.0 0.0 1.0)) pos #f(227.205 -320.598 0.0)) base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1558# #1559#) contact-point-index nil contact-point nil contact-type nil graph-depth 1 door-angle -40 solved nil robot-pose #f(156.918 -27.571 63.5167 14.2253 -61.0303 83.5393 -30.0 180.0 -0.821544 27.764 -161.769 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.003387 -0.999994 0.0) (0.999994 -0.003387 0.0) (0.0 0.0 1.0)) pos #f(227.205 -320.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1555# to #1479# cost 0.947455) #s(costed-arc plist nil from #1555# to #1483# cost 0.767762) #s(costed-arc plist nil from #1555# to #1560=#s(extended-node plist ((:name . "l-1-2-2")) arc-list (#s(costed-arc plist nil from #1560# to #1289# cost 0.74581) #s(costed-arc plist nil from #1560# to #1268# cost 0.763614) #s(costed-arc plist nil from #1560# to #1282# cost 0.47774) #s(costed-arc plist nil from #1560# to #1276# cost 0.491106)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(205.062 50.1524 -1.87685 55.4018 -32.6365 29.5841 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.992124 -0.12526 0.0) (0.12526 0.992124 0.0) (0.0 0.0 1.0)) pos #f(-251.665 -494.629 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.31516) #s(costed-arc plist nil from #1555# to #1561=#s(extended-node plist ((:name . "l-1-2-1")) arc-list (#s(costed-arc plist nil from #1561# to #1289# cost 0.826185) #s(costed-arc plist nil from #1561# to #1268# cost 0.852362) #s(costed-arc plist nil from #1561# to #1282# cost 0.526385) #s(costed-arc plist nil from #1561# to #1276# cost 0.510334)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(217.416 42.8028 -19.8772 65.2074 -19.5515 16.8331 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.993609 -0.112878 0.0) (0.112878 0.993609 0.0) (0.0 0.0 1.0)) pos #f(-284.83 -431.092 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.27911) #s(costed-arc plist nil from #1555# to #1562=#s(extended-node plist ((:name . "l-1-2-0")) arc-list (#s(costed-arc plist nil from #1562# to #1289# cost 0.77789) #s(costed-arc plist nil from #1562# to #1268# cost 0.728994) #s(costed-arc plist nil from #1562# to #1282# cost 0.555927) #s(costed-arc plist nil from #1562# to #1276# cost 0.516202)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(286.014 49.2498 -20.2598 16.7307 -44.8364 54.7944 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994963 -0.100239 0.0) (0.100239 0.994963 0.0) (0.0 0.0 1.0)) pos #f(-184.071 -416.614 0.0)) base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.54844)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(98.1288 37.3569 26.3822 203.75 -19.968 -120.216 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999901 -0.014084 0.0) (0.014084 0.999901 0.0) (0.0 0.0 1.0)) pos #f(-92.997 -557.14 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1554# to #1553# cost 0)) arm :arms islands (#1563# #1559#) contact-point-index nil contact-point nil contact-type nil graph-depth 1 door-angle -40 solved nil robot-pose #f(187.37 -19.3801 66.6009 13.935 -56.9999 84.4642 -30.0 180.0 9.0018 11.4691 -158.804 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.148993 -0.988838 0.0) (0.988838 0.148993 0.0) (0.0 0.0 1.0)) pos #f(246.214 -330.399 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1553# to #1477# cost 0.754738) #s(costed-arc plist nil from #1553# to #1510# cost 0.811683) #s(costed-arc plist nil from #1553# to #1517# cost 0.680624) #s(costed-arc plist nil from #1553# to #1506# cost 0.43071) #s(costed-arc plist nil from #1553# to #1518# cost 0.319587) #s(costed-arc plist nil from #1553# to #1502# cost 0.385325) #s(costed-arc plist nil from #1553# to #1485# cost 0.495713) #s(costed-arc plist nil from #1553# to #1540# cost 0.872858) #s(costed-arc plist nil from #1553# to #1514# cost 0.44521) #s(costed-arc plist nil from #1553# to #1541# cost 0.597729) #s(costed-arc plist nil from #1553# to #1542# cost 0.437518) #s(costed-arc plist nil from #1553# to #1481# cost 0.562869) #s(costed-arc plist nil from #1553# to #1543# cost 0.78097) #s(costed-arc plist nil from #1553# to #1544# cost 0.871495) #s(costed-arc plist nil from #1553# to #1545# cost 0.927322) #s(costed-arc plist nil from #1553# to #1546# cost 1.07289) #s(costed-arc plist nil from #1553# to #1547# cost 1.28373)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(227.046 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.50516 16.1472 -159.589 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.148993 -0.988838 0.0) (0.988838 0.148993 0.0) (0.0 0.0 1.0)) pos #f(246.214 -330.399 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1557# #1564=#s(extended-node plist ((:name . "r-2-1-11")) arc-list (#s(costed-arc plist nil from #1564# to #1477# cost 0.623337) #s(costed-arc plist nil from #1564# to #1510# cost 0.804335) #s(costed-arc plist nil from #1564# to #1517# cost 0.685896) #s(costed-arc plist nil from #1564# to #1506# cost 0.893874) #s(costed-arc plist nil from #1564# to #1518# cost 0.865459) #s(costed-arc plist nil from #1564# to #1502# cost 0.912794) #s(costed-arc plist nil from #1564# to #1485# cost 1.00938) #s(costed-arc plist nil from #1564# to #1540# cost 0.513974) #s(costed-arc plist nil from #1564# to #1514# cost 1.18906) #s(costed-arc plist nil from #1564# to #1541# cost 1.40542) #s(costed-arc plist nil from #1564# to #1542# cost 1.30607) #s(costed-arc plist nil from #1564# to #1481# cost 1.39011) #s(costed-arc plist nil from #1564# to #1543# cost 1.45544) #s(costed-arc plist nil from #1564# to #1544# cost 1.65093) #s(costed-arc plist nil from #1564# to #1545# cost 1.76121) #s(costed-arc plist nil from #1564# to #1546# cost 1.91178) #s(costed-arc plist nil from #1564# to #1547# cost 2.1252)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(75.8223 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -38.0962 39.4001 -167.299 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(109.934 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -76.1926 44.4758 -170.57 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.61342 -0.789757 0.0) (0.789757 -0.61342 0.0) (0.0 0.0 1.0)) pos #f(244.69 -400.695 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.926113 -0.377246 0.0) (0.377246 -0.926113 0.0) (0.0 0.0 1.0)) pos #f(242.653 -440.263 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-12")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1565=#s(extended-node plist ((:name . "r-2-1-13")) arc-list (#s(costed-arc plist nil from #1565# to #1477# cost 1.13525) #s(costed-arc plist nil from #1565# to #1510# cost 1.12911) #s(costed-arc plist nil from #1565# to #1517# cost 1.31834) #s(costed-arc plist nil from #1565# to #1506# cost 1.47568) #s(costed-arc plist nil from #1565# to #1518# cost 1.41462) #s(costed-arc plist nil from #1565# to #1502# cost 1.36536) #s(costed-arc plist nil from #1565# to #1485# cost 1.41554) #s(costed-arc plist nil from #1565# to #1540# cost 1.1452) #s(costed-arc plist nil from #1565# to #1514# cost 1.74793) #s(costed-arc plist nil from #1565# to #1541# cost 1.92005) #s(costed-arc plist nil from #1565# to #1542# cost 1.76418) #s(costed-arc plist nil from #1565# to #1481# cost 1.78163) #s(costed-arc plist nil from #1565# to #1543# cost 2.06574) #s(costed-arc plist nil from #1565# to #1544# cost 2.22856) #s(costed-arc plist nil from #1565# to #1545# cost 2.29267) #s(costed-arc plist nil from #1565# to #1546# cost 2.38904) #s(costed-arc plist nil from #1565# to #1547# cost 2.5359)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(289.454 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -86.3869 -15.25 -189.704 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.881226 -0.472695 0.0) (0.472695 -0.881226 0.0) (0.0 0.0 1.0)) pos #f(193.104 -339.654 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1566=#s(extended-node plist ((:name . "r-2-1-14")) arc-list (#s(costed-arc plist nil from #1566# to #1477# cost 0.990285) #s(costed-arc plist nil from #1566# to #1510# cost 1.03156) #s(costed-arc plist nil from #1566# to #1517# cost 1.1618) #s(costed-arc plist nil from #1566# to #1506# cost 1.33752) #s(costed-arc plist nil from #1566# to #1518# cost 1.28205) #s(costed-arc plist nil from #1566# to #1502# cost 1.23767) #s(costed-arc plist nil from #1566# to #1485# cost 1.31681) #s(costed-arc plist nil from #1566# to #1540# cost 0.952009) #s(costed-arc plist nil from #1566# to #1514# cost 1.5817) #s(costed-arc plist nil from #1566# to #1541# cost 1.76382) #s(costed-arc plist nil from #1566# to #1542# cost 1.62587) #s(costed-arc plist nil from #1566# to #1481# cost 1.6579) #s(costed-arc plist nil from #1566# to #1543# cost 1.88636) #s(costed-arc plist nil from #1566# to #1544# cost 2.05886) #s(costed-arc plist nil from #1566# to #1545# cost 2.13306) #s(costed-arc plist nil from #1566# to #1546# cost 2.24202) #s(costed-arc plist nil from #1566# to #1547# cost 2.40528)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(275.103 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -79.8441 2.59918 -185.347 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.819631 -0.572892 0.0) (0.572892 -0.819631 0.0) (0.0 0.0 1.0)) pos #f(161.814 -344.178 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1567=#s(extended-node plist ((:name . "r-2-1-15")) arc-list (#s(costed-arc plist nil from #1567# to #1477# cost 0.971396) #s(costed-arc plist nil from #1567# to #1510# cost 1.0208) #s(costed-arc plist nil from #1567# to #1517# cost 1.14598) #s(costed-arc plist nil from #1567# to #1506# cost 1.32422) #s(costed-arc plist nil from #1567# to #1518# cost 1.2751) #s(costed-arc plist nil from #1567# to #1502# cost 1.23057) #s(costed-arc plist nil from #1567# to #1485# cost 1.31193) #s(costed-arc plist nil from #1567# to #1540# cost 0.943902) #s(costed-arc plist nil from #1567# to #1514# cost 1.57607) #s(costed-arc plist nil from #1567# to #1541# cost 1.75876) #s(costed-arc plist nil from #1567# to #1542# cost 1.6292) #s(costed-arc plist nil from #1567# to #1481# cost 1.66022) #s(costed-arc plist nil from #1567# to #1543# cost 1.88086) #s(costed-arc plist nil from #1567# to #1544# cost 2.05493) #s(costed-arc plist nil from #1567# to #1545# cost 2.13072) #s(costed-arc plist nil from #1567# to #1546# cost 2.24056) #s(costed-arc plist nil from #1567# to #1547# cost 2.40887)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(138.912 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -79.8322 6.04172 -178.687 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.825533 -0.564354 0.0) (0.564354 -0.825533 0.0) (0.0 0.0 1.0)) pos #f(168.424 -345.981 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1568=#s(extended-node plist ((:name . "r-2-1-16")) arc-list (#s(costed-arc plist nil from #1568# to #1477# cost 1.03893) #s(costed-arc plist nil from #1568# to #1510# cost 1.12228) #s(costed-arc plist nil from #1568# to #1517# cost 1.19403) #s(costed-arc plist nil from #1568# to #1506# cost 1.3897) #s(costed-arc plist nil from #1568# to #1518# cost 1.34664) #s(costed-arc plist nil from #1568# to #1502# cost 1.31857) #s(costed-arc plist nil from #1568# to #1485# cost 1.40898) #s(costed-arc plist nil from #1568# to #1540# cost 0.993654) #s(costed-arc plist nil from #1568# to #1514# cost 1.65052) #s(costed-arc plist nil from #1568# to #1541# cost 1.84396) #s(costed-arc plist nil from #1568# to #1542# cost 1.72137) #s(costed-arc plist nil from #1568# to #1481# cost 1.76501) #s(costed-arc plist nil from #1568# to #1543# cost 1.94137) #s(costed-arc plist nil from #1568# to #1544# cost 2.12716) #s(costed-arc plist nil from #1568# to #1545# cost 2.2169) #s(costed-arc plist nil from #1568# to #1546# cost 2.33807) #s(costed-arc plist nil from #1568# to #1547# cost 2.51573)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(87.5358 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -85.3563 19.4743 -180.597 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.868251 -0.496125 0.0) (0.496125 -0.868251 0.0) (0.0 0.0 1.0)) pos #f(179.223 -336.305 0.0)) base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-17")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-18")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-19")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-20")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-21")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-22")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-1-23")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-2-0")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1547# #1546# #1545# #1544# #1543# #s(extended-node plist ((:name . "r-2-2-6")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1481# #1542# #1541# #1514# #1540# #s(extended-node plist ((:name . "r-2-2-12")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1485# #1502# #1518# #1506# #1517# #s(extended-node plist ((:name . "r-2-2-18")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1510# #s(extended-node plist ((:name . "r-2-2-20")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1477# #s(extended-node plist ((:name . "r-2-2-22")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-2-23")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-3-0")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1499# #1498# #1497# #1496# #1495# #s(extended-node plist ((:name . "r-2-3-6")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1494# #1493# #1492# #1304# #1491# #s(extended-node plist ((:name . "r-2-3-12")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1312# #1490# #1260# #1489# #1318# #s(extended-node plist ((:name . "r-2-3-18")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1334# #1266# #1355# #1324# #s(extended-node plist ((:name . "r-2-3-23")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-4-0")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1145# #1309# #1308# #1307# #1306# #s(extended-node plist ((:name . "r-2-4-6")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1047# #1305# #1065# #1068# #1054# #s(extended-node plist ((:name . "r-2-4-12")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1071# #1057# #946# #1139# #1061# #s(extended-node plist ((:name . "r-2-4-18")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1149# #1078# #1153# #s(extended-node plist ((:name . "r-2-4-22")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "r-2-4-23")) arc-list nil arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-0")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-1")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-2")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-3")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-4")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-5")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-6")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-7")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-8")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-9")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-10")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-11")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-12")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-13")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-14")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-15")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-16")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-17")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-18")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-19")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-20")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-21")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-22")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-23")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1569=#s(extended-node plist ((:name . "l-0-0-fk")) arc-list (#s(costed-arc plist nil from #1569# to #1570=#s(extended-node plist ((:name . "l-0-1-rk")) arc-list (#s(costed-arc plist nil from #1570# to #1571=#s(extended-node plist ((:name . "l-0-2-rk")) arc-list (#s(costed-arc plist nil from #1571# to #1572=#s(extended-node plist ((:name . "l-0-3-rk")) arc-list (#s(costed-arc plist nil from #1572# to #1224# cost 0.299148) #s(costed-arc plist nil from #1572# to #1225# cost 2.06753) #s(costed-arc plist nil from #1572# to #1113# cost 1.45932) #s(costed-arc plist nil from #1572# to #1226# cost 1.49044) #s(costed-arc plist nil from #1572# to #1227# cost 1.56641) #s(costed-arc plist nil from #1572# to #1135# cost 1.36851) #s(costed-arc plist nil from #1572# to #1228# cost 0.971332) #s(costed-arc plist nil from #1572# to #944# cost 1.289) #s(costed-arc plist nil from #1572# to #1034# cost 1.45696) #s(costed-arc plist nil from #1572# to #1194# cost 1.42626) #s(costed-arc plist nil from #1572# to #1229# cost 1.60664) #s(costed-arc plist nil from #1572# to #1172# cost 1.52735) #s(costed-arc plist nil from #1572# to #1168# cost 1.36625) #s(costed-arc plist nil from #1572# to #1023# cost 1.00239) #s(costed-arc plist nil from #1572# to #1006# cost 1.47888) #s(costed-arc plist nil from #1572# to #1018# cost 1.44389) #s(costed-arc plist nil from #1572# to #994# cost 1.43544) #s(costed-arc plist nil from #1572# to #1164# cost 1.54359) #s(costed-arc plist nil from #1572# to #1160# cost 1.43472) #s(costed-arc plist nil from #1572# to #1156# cost 1.36849) #s(costed-arc plist nil from #1572# to #971# cost 1.7681) #s(costed-arc plist nil from #1572# to #952# cost 1.49755) #s(costed-arc plist nil from #1572# to #948# cost 1.48007) #s(costed-arc plist nil from #1572# to #964# cost 1.38821) #s(costed-arc plist nil from #1572# to #956# cost 1.3621) #s(costed-arc plist nil from #1572# to #960# cost 1.35307)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 3 door-angle -80 solved t robot-pose #f(244.691 44.6994 55.61 0.563398 -121.539 -124.879 -74.9464 251.065 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999531 -0.030623 0.0) (0.030623 0.999531 0.0) (0.0 0.0 1.0)) pos #f(-155.865 -224.279 0.0)) base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.888197) #s(costed-arc plist nil from #1571# to #1573=#s(extended-node plist ((:name . "l-0-3-fk")) arc-list (#s(costed-arc plist nil from #1573# to #1224# cost 1.86958) #s(costed-arc plist nil from #1573# to #1225# cost 0.461415) #s(costed-arc plist nil from #1573# to #1113# cost 1.45409) #s(costed-arc plist nil from #1573# to #1226# cost 1.36751) #s(costed-arc plist nil from #1573# to #1227# cost 1.524) #s(costed-arc plist nil from #1573# to #1135# cost 1.30096) #s(costed-arc plist nil from #1573# to #1228# cost 1.65352) #s(costed-arc plist nil from #1573# to #944# cost 1.43321) #s(costed-arc plist nil from #1573# to #1034# cost 1.35953) #s(costed-arc plist nil from #1573# to #1194# cost 1.35305) #s(costed-arc plist nil from #1573# to #1229# cost 1.29096) #s(costed-arc plist nil from #1573# to #1172# cost 1.36068) #s(costed-arc plist nil from #1573# to #1168# cost 1.23152) #s(costed-arc plist nil from #1573# to #1023# cost 1.62964) #s(costed-arc plist nil from #1573# to #1006# cost 1.29064) #s(costed-arc plist nil from #1573# to #1018# cost 1.26191) #s(costed-arc plist nil from #1573# to #994# cost 1.29109) #s(costed-arc plist nil from #1573# to #1164# cost 1.26386) #s(costed-arc plist nil from #1573# to #1160# cost 1.25161) #s(costed-arc plist nil from #1573# to #1156# cost 1.21008) #s(costed-arc plist nil from #1573# to #971# cost 1.39742) #s(costed-arc plist nil from #1573# to #952# cost 1.29948) #s(costed-arc plist nil from #1573# to #948# cost 1.27702) #s(costed-arc plist nil from #1573# to #964# cost 1.19916) #s(costed-arc plist nil from #1573# to #956# cost 1.17556) #s(costed-arc plist nil from #1573# to #960# cost 1.22659)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 3 door-angle -80 solved t robot-pose #f(179.876 99.3155 -7.23915 94.3194 -92.2277 -6.11218 -94.7209 6.59542 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.986333 -0.164762 0.0) (0.164762 0.986333 0.0) (0.0 0.0 1.0)) pos #f(-49.6036 26.0167 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.0234) #s(costed-arc plist nil from #1571# to #1574=#s(extended-node plist ((:name . "l-0-3-23")) arc-list (#s(costed-arc plist nil from #1574# to #1224# cost 0.879317) #s(costed-arc plist nil from #1574# to #1225# cost 1.59902) #s(costed-arc plist nil from #1574# to #1113# cost 1.35257) #s(costed-arc plist nil from #1574# to #1226# cost 1.44062) #s(costed-arc plist nil from #1574# to #1227# cost 1.40162) #s(costed-arc plist nil from #1574# to #1135# cost 1.33169) #s(costed-arc plist nil from #1574# to #1228# cost 1.05762) #s(costed-arc plist nil from #1574# to #944# cost 1.15129) #s(costed-arc plist nil from #1574# to #1034# cost 1.33309) #s(costed-arc plist nil from #1574# to #1194# cost 1.32731) #s(costed-arc plist nil from #1574# to #1229# cost 1.55742) #s(costed-arc plist nil from #1574# to #1172# cost 1.48666) #s(costed-arc plist nil from #1574# to #1168# cost 1.29634) #s(costed-arc plist nil from #1574# to #1023# cost 1.07197) #s(costed-arc plist nil from #1574# to #1006# cost 1.31969) #s(costed-arc plist nil from #1574# to #1018# cost 1.31057) #s(costed-arc plist nil from #1574# to #994# cost 1.33206) #s(costed-arc plist nil from #1574# to #1164# cost 1.43859) #s(costed-arc plist nil from #1574# to #1160# cost 1.3311) #s(costed-arc plist nil from #1574# to #1156# cost 1.25524) #s(costed-arc plist nil from #1574# to #971# cost 1.65787) #s(costed-arc plist nil from #1574# to #952# cost 1.40935) #s(costed-arc plist nil from #1574# to #948# cost 1.39644) #s(costed-arc plist nil from #1574# to #964# cost 1.28489) #s(costed-arc plist nil from #1574# to #956# cost 1.23477) #s(costed-arc plist nil from #1574# to #960# cost 1.21115)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(154.032 18.3257 55.5259 -1.01673 -53.7424 -100.039 -70.0134 168.731 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(152.167 -0.85034 43.7863 26.326 -33.3909 -110.52 -60.9762 169.142 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995582 0.093898 0.0) (-0.093898 0.995582 0.0) (0.0 0.0 1.0)) pos #f(-51.3278 22.2746 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.909151 -0.416468 0.0) (0.416468 0.909151 0.0) (0.0 0.0 1.0)) pos #f(-33.4945 13.4465 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.01915) #s(costed-arc plist nil from #1571# to #1575=#s(extended-node plist ((:name . "l-0-3-22")) arc-list (#s(costed-arc plist nil from #1575# to #1224# cost 0.839001) #s(costed-arc plist nil from #1575# to #1225# cost 1.59519) #s(costed-arc plist nil from #1575# to #1113# cost 1.27065) #s(costed-arc plist nil from #1575# to #1226# cost 1.38081) #s(costed-arc plist nil from #1575# to #1227# cost 1.32432) #s(costed-arc plist nil from #1575# to #1135# cost 1.26124) #s(costed-arc plist nil from #1575# to #1228# cost 1.07541) #s(costed-arc plist nil from #1575# to #944# cost 1.08081) #s(costed-arc plist nil from #1575# to #1034# cost 1.25492) #s(costed-arc plist nil from #1575# to #1194# cost 1.23787) #s(costed-arc plist nil from #1575# to #1229# cost 1.48022) #s(costed-arc plist nil from #1575# to #1172# cost 1.40469) #s(costed-arc plist nil from #1575# to #1168# cost 1.22018) #s(costed-arc plist nil from #1575# to #1023# cost 1.08516) #s(costed-arc plist nil from #1575# to #1006# cost 1.24347) #s(costed-arc plist nil from #1575# to #1018# cost 1.22301) #s(costed-arc plist nil from #1575# to #994# cost 1.23283) #s(costed-arc plist nil from #1575# to #1164# cost 1.36201) #s(costed-arc plist nil from #1575# to #1160# cost 1.24212) #s(costed-arc plist nil from #1575# to #1156# cost 1.1804) #s(costed-arc plist nil from #1575# to #971# cost 1.5798) #s(costed-arc plist nil from #1575# to #952# cost 1.32554) #s(costed-arc plist nil from #1575# to #948# cost 1.30336) #s(costed-arc plist nil from #1575# to #964# cost 1.19155) #s(costed-arc plist nil from #1575# to #956# cost 1.14143) #s(costed-arc plist nil from #1575# to #960# cost 1.11701)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(160.516 18.6024 57.6837 0.316265 -73.9819 -86.3655 -61.379 176.798 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(160.028 3.98393 46.3255 29.353 -55.8012 -95.4799 -59.905 175.826 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995899 0.090471 0.0) (-0.090471 0.995899 0.0) (0.0 0.0 1.0)) pos #f(-49.055 33.447 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.907714 -0.41959 0.0) (0.41959 0.907714 0.0) (0.0 0.0 1.0)) pos #f(-31.9677 24.4949 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.04224) #s(costed-arc plist nil from #1571# to #1576=#s(extended-node plist ((:name . "l-0-3-21")) arc-list (#s(costed-arc plist nil from #1576# to #1224# cost 0.858407) #s(costed-arc plist nil from #1576# to #1225# cost 1.57816) #s(costed-arc plist nil from #1576# to #1113# cost 1.20843) #s(costed-arc plist nil from #1576# to #1226# cost 1.32438) #s(costed-arc plist nil from #1576# to #1227# cost 1.2582) #s(costed-arc plist nil from #1576# to #1135# cost 1.19476) #s(costed-arc plist nil from #1576# to #1228# cost 1.11488) #s(costed-arc plist nil from #1576# to #944# cost 1.0034) #s(costed-arc plist nil from #1576# to #1034# cost 1.19386) #s(costed-arc plist nil from #1576# to #1194# cost 1.17108) #s(costed-arc plist nil from #1576# to #1229# cost 1.41238) #s(costed-arc plist nil from #1576# to #1172# cost 1.33335) #s(costed-arc plist nil from #1576# to #1168# cost 1.14776) #s(costed-arc plist nil from #1576# to #1023# cost 1.11663) #s(costed-arc plist nil from #1576# to #1006# cost 1.18446) #s(costed-arc plist nil from #1576# to #1018# cost 1.15695) #s(costed-arc plist nil from #1576# to #994# cost 1.15678) #s(costed-arc plist nil from #1576# to #1164# cost 1.29193) #s(costed-arc plist nil from #1576# to #1160# cost 1.1615) #s(costed-arc plist nil from #1576# to #1156# cost 1.10561) #s(costed-arc plist nil from #1576# to #971# cost 1.51274) #s(costed-arc plist nil from #1576# to #952# cost 1.24413) #s(costed-arc plist nil from #1576# to #948# cost 1.21591) #s(costed-arc plist nil from #1576# to #964# cost 1.09964) #s(costed-arc plist nil from #1576# to #956# cost 1.0482) #s(costed-arc plist nil from #1576# to #960# cost 1.02123)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(176.24 19.8754 52.9861 -0.308472 -83.3083 -75.1124 -42.5562 176.807 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(176.675 7.11925 40.7987 29.4749 -61.6971 -75.2053 -46.7979 176.012 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.996783 0.080143 0.0) (-0.080143 0.996783 0.0) (0.0 0.0 1.0)) pos #f(-58.7747 43.4923 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.903311 -0.428986 0.0) (0.428986 0.903311 0.0) (0.0 0.0 1.0)) pos #f(-41.6675 29.9425 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.12042) #s(costed-arc plist nil from #1571# to #1577=#s(extended-node plist ((:name . "l-0-3-20")) arc-list (#s(costed-arc plist nil from #1577# to #1224# cost 0.863344) #s(costed-arc plist nil from #1577# to #1225# cost 1.57111) #s(costed-arc plist nil from #1577# to #1113# cost 1.18614) #s(costed-arc plist nil from #1577# to #1226# cost 1.27538) #s(costed-arc plist nil from #1577# to #1227# cost 1.22415) #s(costed-arc plist nil from #1577# to #1135# cost 1.14292) #s(costed-arc plist nil from #1577# to #1228# cost 1.10487) #s(costed-arc plist nil from #1577# to #944# cost 0.943809) #s(costed-arc plist nil from #1577# to #1034# cost 1.16517) #s(costed-arc plist nil from #1577# to #1194# cost 1.14849) #s(costed-arc plist nil from #1577# to #1229# cost 1.36536) #s(costed-arc plist nil from #1577# to #1172# cost 1.2864) #s(costed-arc plist nil from #1577# to #1168# cost 1.09533) #s(costed-arc plist nil from #1577# to #1023# cost 1.10089) #s(costed-arc plist nil from #1577# to #1006# cost 1.1524) #s(costed-arc plist nil from #1577# to #1018# cost 1.12601) #s(costed-arc plist nil from #1577# to #994# cost 1.13575) #s(costed-arc plist nil from #1577# to #1164# cost 1.24524) #s(costed-arc plist nil from #1577# to #1160# cost 1.1157) #s(costed-arc plist nil from #1577# to #1156# cost 1.05364) #s(costed-arc plist nil from #1577# to #971# cost 1.48394) #s(costed-arc plist nil from #1577# to #952# cost 1.20675) #s(costed-arc plist nil from #1577# to #948# cost 1.18099) #s(costed-arc plist nil from #1577# to #964# cost 1.06007) #s(costed-arc plist nil from #1577# to #956# cost 1.00555) #s(costed-arc plist nil from #1577# to #960# cost 0.974179)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(193.312 22.0161 39.8797 0.655319 -82.7456 -73.4042 -34.8388 176.511 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(194.31 4.46229 28.8676 23.3151 -60.2097 -73.2511 -42.5165 173.722 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997502 0.070645 0.0) (-0.070645 0.997502 0.0) (0.0 0.0 1.0)) pos #f(-64.7259 34.2084 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.89919 -0.437559 0.0) (0.437559 0.89919 0.0) (0.0 0.0 1.0)) pos #f(-47.461 22.4463 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.12504) #s(costed-arc plist nil from #1571# to #1578=#s(extended-node plist ((:name . "l-0-3-19")) arc-list (#s(costed-arc plist nil from #1578# to #1224# cost 0.879422) #s(costed-arc plist nil from #1578# to #1225# cost 1.84291) #s(costed-arc plist nil from #1578# to #1113# cost 1.53546) #s(costed-arc plist nil from #1578# to #1226# cost 1.54338) #s(costed-arc plist nil from #1578# to #1227# cost 1.39572) #s(costed-arc plist nil from #1578# to #1135# cost 1.40522) #s(costed-arc plist nil from #1578# to #1228# cost 0.742609) #s(costed-arc plist nil from #1578# to #944# cost 1.41038) #s(costed-arc plist nil from #1578# to #1034# cost 1.58183) #s(costed-arc plist nil from #1578# to #1194# cost 1.4652) #s(costed-arc plist nil from #1578# to #1229# cost 1.5579) #s(costed-arc plist nil from #1578# to #1172# cost 1.47361) #s(costed-arc plist nil from #1578# to #1168# cost 1.33216) #s(costed-arc plist nil from #1578# to #1023# cost 0.720057) #s(costed-arc plist nil from #1578# to #1006# cost 1.67358) #s(costed-arc plist nil from #1578# to #1018# cost 1.60858) #s(costed-arc plist nil from #1578# to #994# cost 1.49501) #s(costed-arc plist nil from #1578# to #1164# cost 1.40885) #s(costed-arc plist nil from #1578# to #1160# cost 1.34222) #s(costed-arc plist nil from #1578# to #1156# cost 1.24373) #s(costed-arc plist nil from #1578# to #971# cost 1.76979) #s(costed-arc plist nil from #1578# to #952# cost 1.7079) #s(costed-arc plist nil from #1578# to #948# cost 1.63617) #s(costed-arc plist nil from #1578# to #964# cost 1.51543) #s(costed-arc plist nil from #1578# to #956# cost 1.41097) #s(costed-arc plist nil from #1578# to #960# cost 1.3223)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(172.071 28.1226 17.9817 -9.22788 -121.526 -156.759 -69.2496 173.792 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(296.593 -13.0969 25.4904 -37.2423 -121.542 -186.74 -75.8761 144.52 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.98521 0.171353 0.0) (-0.171353 0.98521 0.0) (0.0 0.0 1.0)) pos #f(114.832 53.2927 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.938932 -0.344102 0.0) (0.344102 0.938932 0.0) (0.0 0.0 1.0)) pos #f(149.529 77.7084 0.0)) object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.11286) #s(costed-arc plist nil from #1571# to #1579=#s(extended-node plist ((:name . "l-0-3-18")) arc-list (#s(costed-arc plist nil from #1579# to #1224# cost 0.907939) #s(costed-arc plist nil from #1579# to #1225# cost 1.61516) #s(costed-arc plist nil from #1579# to #1113# cost 1.34835) #s(costed-arc plist nil from #1579# to #1226# cost 1.3021) #s(costed-arc plist nil from #1579# to #1227# cost 1.25624) #s(costed-arc plist nil from #1579# to #1135# cost 1.19561) #s(costed-arc plist nil from #1579# to #1228# cost 0.962457) #s(costed-arc plist nil from #1579# to #944# cost 1.07118) #s(costed-arc plist nil from #1579# to #1034# cost 1.3048) #s(costed-arc plist nil from #1579# to #1194# cost 1.30876) #s(costed-arc plist nil from #1579# to #1229# cost 1.41573) #s(costed-arc plist nil from #1579# to #1172# cost 1.34926) #s(costed-arc plist nil from #1579# to #1168# cost 1.15878) #s(costed-arc plist nil from #1579# to #1023# cost 0.948913) #s(costed-arc plist nil from #1579# to #1006# cost 1.27873) #s(costed-arc plist nil from #1579# to #1018# cost 1.26061) #s(costed-arc plist nil from #1579# to #994# cost 1.29781) #s(costed-arc plist nil from #1579# to #1164# cost 1.29451) #s(costed-arc plist nil from #1579# to #1160# cost 1.206) #s(costed-arc plist nil from #1579# to #1156# cost 1.10998) #s(costed-arc plist nil from #1579# to #971# cost 1.55775) #s(costed-arc plist nil from #1579# to #952# cost 1.33958) #s(costed-arc plist nil from #1579# to #948# cost 1.31776) #s(costed-arc plist nil from #1579# to #964# cost 1.19356) #s(costed-arc plist nil from #1579# to #956# cost 1.12339) #s(costed-arc plist nil from #1579# to #960# cost 1.09126)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(170.283 28.6845 -5.10483 10.9824 -60.2628 -111.021 -45.4405 171.169 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994972 0.100153 0.0) (-0.100153 0.994972 0.0) (0.0 0.0 1.0)) pos #f(-52.7981 20.6687 0.0)) base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.998556) #s(costed-arc plist nil from #1571# to #1366# cost 0.951929) #s(costed-arc plist nil from #1571# to #1363# cost 0.968084) #s(costed-arc plist nil from #1571# to #1580=#s(extended-node plist ((:name . "l-0-3-15")) arc-list (#s(costed-arc plist nil from #1580# to #1224# cost 0.772253) #s(costed-arc plist nil from #1580# to #1225# cost 1.60594) #s(costed-arc plist nil from #1580# to #1113# cost 1.31662) #s(costed-arc plist nil from #1580# to #1226# cost 1.40714) #s(costed-arc plist nil from #1580# to #1227# cost 1.35339) #s(costed-arc plist nil from #1580# to #1135# cost 1.28252) #s(costed-arc plist nil from #1580# to #1228# cost 1.12285) #s(costed-arc plist nil from #1580# to #944# cost 1.09689) #s(costed-arc plist nil from #1580# to #1034# cost 1.29632) #s(costed-arc plist nil from #1580# to #1194# cost 1.27427) #s(costed-arc plist nil from #1580# to #1229# cost 1.50192) #s(costed-arc plist nil from #1580# to #1172# cost 1.42616) #s(costed-arc plist nil from #1580# to #1168# cost 1.24059) #s(costed-arc plist nil from #1580# to #1023# cost 1.13116) #s(costed-arc plist nil from #1580# to #1006# cost 1.28927) #s(costed-arc plist nil from #1580# to #1018# cost 1.26153) #s(costed-arc plist nil from #1580# to #994# cost 1.26143) #s(costed-arc plist nil from #1580# to #1164# cost 1.39035) #s(costed-arc plist nil from #1580# to #1160# cost 1.26308) #s(costed-arc plist nil from #1580# to #1156# cost 1.20863) #s(costed-arc plist nil from #1580# to #971# cost 1.61265) #s(costed-arc plist nil from #1580# to #952# cost 1.30838) #s(costed-arc plist nil from #1580# to #948# cost 1.29307) #s(costed-arc plist nil from #1580# to #964# cost 1.18371) #s(costed-arc plist nil from #1580# to #956# cost 1.14478) #s(costed-arc plist nil from #1580# to #960# cost 1.11714)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(162.639 16.3613 55.7112 -7.01303 -97.5151 -76.1311 -65.5685 177.324 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(163.236 6.0938 45.8296 25.3944 -77.9229 -83.5123 -77.6172 177.098 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997214 0.074598 0.0) (-0.074598 0.997214 0.0) (0.0 0.0 1.0)) pos #f(-113.408 -7.22669 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.900912 -0.434003 0.0) (0.434003 0.900912 0.0) (0.0 0.0 1.0)) pos #f(-96.401 -17.171 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.04588) #s(costed-arc plist nil from #1571# to #1581=#s(extended-node plist ((:name . "l-0-3-14")) arc-list (#s(costed-arc plist nil from #1581# to #1224# cost 0.814179) #s(costed-arc plist nil from #1581# to #1225# cost 1.59388) #s(costed-arc plist nil from #1581# to #1113# cost 1.25446) #s(costed-arc plist nil from #1581# to #1226# cost 1.34652) #s(costed-arc plist nil from #1581# to #1227# cost 1.28444) #s(costed-arc plist nil from #1581# to #1135# cost 1.21086) #s(costed-arc plist nil from #1581# to #1228# cost 1.14602) #s(costed-arc plist nil from #1581# to #944# cost 1.02552) #s(costed-arc plist nil from #1581# to #1034# cost 1.23366) #s(costed-arc plist nil from #1581# to #1194# cost 1.20394) #s(costed-arc plist nil from #1581# to #1229# cost 1.42352) #s(costed-arc plist nil from #1581# to #1172# cost 1.3429) #s(costed-arc plist nil from #1581# to #1168# cost 1.15894) #s(costed-arc plist nil from #1581# to #1023# cost 1.14394) #s(costed-arc plist nil from #1581# to #1006# cost 1.22048) #s(costed-arc plist nil from #1581# to #1018# cost 1.18556) #s(costed-arc plist nil from #1581# to #994# cost 1.17759) #s(costed-arc plist nil from #1581# to #1164# cost 1.30499) #s(costed-arc plist nil from #1581# to #1160# cost 1.16813) #s(costed-arc plist nil from #1581# to #1156# cost 1.11893) #s(costed-arc plist nil from #1581# to #971# cost 1.53325) #s(costed-arc plist nil from #1581# to #952# cost 1.22598) #s(costed-arc plist nil from #1581# to #948# cost 1.20271) #s(costed-arc plist nil from #1581# to #964# cost 1.08654) #s(costed-arc plist nil from #1581# to #956# cost 1.04191) #s(costed-arc plist nil from #1581# to #960# cost 1.00858)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(178.739 17.7895 47.8186 -6.74571 -105.3 -69.5505 -41.6263 177.306 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997604 0.069178 0.0) (-0.069178 0.997604 0.0) (0.0 0.0 1.0)) pos #f(-103.89 21.8713 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.14315) #s(costed-arc plist nil from #1571# to #1582=#s(extended-node plist ((:name . "l-0-3-13")) arc-list (#s(costed-arc plist nil from #1582# to #1224# cost 0.83584) #s(costed-arc plist nil from #1582# to #1225# cost 1.57627) #s(costed-arc plist nil from #1582# to #1113# cost 1.23463) #s(costed-arc plist nil from #1582# to #1226# cost 1.29522) #s(costed-arc plist nil from #1582# to #1227# cost 1.24391) #s(costed-arc plist nil from #1582# to #1135# cost 1.15725) #s(costed-arc plist nil from #1582# to #1228# cost 1.13754) #s(costed-arc plist nil from #1582# to #944# cost 0.965022) #s(costed-arc plist nil from #1582# to #1034# cost 1.20771) #s(costed-arc plist nil from #1582# to #1194# cost 1.18475) #s(costed-arc plist nil from #1582# to #1229# cost 1.37207) #s(costed-arc plist nil from #1582# to #1172# cost 1.29135) #s(costed-arc plist nil from #1582# to #1168# cost 1.10308) #s(costed-arc plist nil from #1582# to #1023# cost 1.12705) #s(costed-arc plist nil from #1582# to #1006# cost 1.19186) #s(costed-arc plist nil from #1582# to #1018# cost 1.15609) #s(costed-arc plist nil from #1582# to #994# cost 1.15436) #s(costed-arc plist nil from #1582# to #1164# cost 1.25092) #s(costed-arc plist nil from #1582# to #1160# cost 1.11441) #s(costed-arc plist nil from #1582# to #1156# cost 1.05781) #s(costed-arc plist nil from #1582# to #971# cost 1.48839) #s(costed-arc plist nil from #1582# to #952# cost 1.18028) #s(costed-arc plist nil from #1582# to #948# cost 1.15724) #s(costed-arc plist nil from #1582# to #964# cost 1.03713) #s(costed-arc plist nil from #1582# to #956# cost 0.985228) #s(costed-arc plist nil from #1582# to #960# cost 0.945315)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(194.909 19.9664 30.1414 -4.29569 -99.8726 -69.997 -31.3098 176.945 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(196.521 2.98888 25.4164 12.993 -82.5976 -69.8612 -39.7914 172.148 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998112 0.061414 0.0) (-0.061414 0.998112 0.0) (0.0 0.0 1.0)) pos #f(-109.343 33.9288 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.895103 -0.44586 0.0) (0.44586 0.895103 0.0) (0.0 0.0 1.0)) pos #f(-93.968 21.8705 0.0)) object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.15351) #s(costed-arc plist nil from #1571# to #1583=#s(extended-node plist ((:name . "l-0-3-12")) arc-list (#s(costed-arc plist nil from #1583# to #1224# cost 0.908446) #s(costed-arc plist nil from #1583# to #1225# cost 1.8487) #s(costed-arc plist nil from #1583# to #1113# cost 1.63029) #s(costed-arc plist nil from #1583# to #1226# cost 1.59135) #s(costed-arc plist nil from #1583# to #1227# cost 1.45025) #s(costed-arc plist nil from #1583# to #1135# cost 1.46003) #s(costed-arc plist nil from #1583# to #1228# cost 0.778274) #s(costed-arc plist nil from #1583# to #944# cost 1.45806) #s(costed-arc plist nil from #1583# to #1034# cost 1.62995) #s(costed-arc plist nil from #1583# to #1194# cost 1.54658) #s(costed-arc plist nil from #1583# to #1229# cost 1.61392) #s(costed-arc plist nil from #1583# to #1172# cost 1.53288) #s(costed-arc plist nil from #1583# to #1168# cost 1.38787) #s(costed-arc plist nil from #1583# to #1023# cost 0.737646) #s(costed-arc plist nil from #1583# to #1006# cost 1.69359) #s(costed-arc plist nil from #1583# to #1018# cost 1.62695) #s(costed-arc plist nil from #1583# to #994# cost 1.51824) #s(costed-arc plist nil from #1583# to #1164# cost 1.46547) #s(costed-arc plist nil from #1583# to #1160# cost 1.37858) #s(costed-arc plist nil from #1583# to #1156# cost 1.29549) #s(costed-arc plist nil from #1583# to #971# cost 1.78504) #s(costed-arc plist nil from #1583# to #952# cost 1.71812) #s(costed-arc plist nil from #1583# to #948# cost 1.64326) #s(costed-arc plist nil from #1583# to #964# cost 1.51862) #s(costed-arc plist nil from #1583# to #956# cost 1.40672) #s(costed-arc plist nil from #1583# to #960# cost 1.32167)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(175.654 27.5677 -5.26892 -13.251 -121.355 -167.497 -63.288 173.317 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(229.409 -15.8596 -20.2598 -36.7723 -121.542 -167.334 -95.2711 161.366 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.987251 0.159171 0.0) (-0.159171 0.987251 0.0) (0.0 0.0 1.0)) pos #f(64.9779 64.6566 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.961871 -0.273503 0.0) (0.273503 0.961871 0.0) (0.0 0.0 1.0)) pos #f(99.3705 89.499 0.0)) object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.1579) #s(costed-arc plist nil from #1571# to #1256# cost 0.906602) #s(costed-arc plist nil from #1571# to #1253# cost 0.942857) #s(costed-arc plist nil from #1571# to #1385# cost 0.990785) #s(costed-arc plist nil from #1571# to #1381# cost 1.12114) #s(costed-arc plist nil from #1571# to #1377# cost 1.20719) #s(costed-arc plist nil from #1571# to #1372# cost 1.20773) #s(costed-arc plist nil from #1571# to #1240# cost 1.09475) #s(costed-arc plist nil from #1571# to #1201# cost 0.931232) #s(costed-arc plist nil from #1571# to #1231# cost 1.00942) #s(costed-arc plist nil from #1571# to #1219# cost 1.04318) #s(costed-arc plist nil from #1571# to #1209# cost 1.1374) #s(costed-arc plist nil from #1571# to #1205# cost 1.30979)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 2 door-angle -60 solved t robot-pose #f(104.766 57.8382 14.8537 35.5038 -67.4037 -114.536 -113.585 223.347 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.9571 0.289758 0.0) (-0.289758 0.9571 0.0) (0.0 0.0 1.0)) pos #f(-353.563 -394.074 0.0)) base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.542407) #s(costed-arc plist nil from #1570# to #1584=#s(extended-node plist ((:name . "l-0-2-fk")) arc-list (#s(costed-arc plist nil from #1584# to #1572# cost 1.39644) #s(costed-arc plist nil from #1584# to #1573# cost 1.45887) #s(costed-arc plist nil from #1584# to #1574# cost 1.15403) #s(costed-arc plist nil from #1584# to #1575# cost 1.12987) #s(costed-arc plist nil from #1584# to #1576# cost 1.08282) #s(costed-arc plist nil from #1584# to #1577# cost 1.0372) #s(costed-arc plist nil from #1584# to #1578# cost 1.18211) #s(costed-arc plist nil from #1584# to #1579# cost 0.950436) #s(costed-arc plist nil from #1584# to #1366# cost 1.10282) #s(costed-arc plist nil from #1584# to #1363# cost 1.14373) #s(costed-arc plist nil from #1584# to #1580# cost 1.12371) #s(costed-arc plist nil from #1584# to #1581# cost 1.065) #s(costed-arc plist nil from #1584# to #1582# cost 0.996754) #s(costed-arc plist nil from #1584# to #1583# cost 1.13316) #s(costed-arc plist nil from #1584# to #1256# cost 1.13284) #s(costed-arc plist nil from #1584# to #1253# cost 1.13235) #s(costed-arc plist nil from #1584# to #1385# cost 1.14749) #s(costed-arc plist nil from #1584# to #1381# cost 1.09578) #s(costed-arc plist nil from #1584# to #1377# cost 1.02653) #s(costed-arc plist nil from #1584# to #1372# cost 0.966019) #s(costed-arc plist nil from #1584# to #1240# cost 1.30926) #s(costed-arc plist nil from #1584# to #1201# cost 1.21248) #s(costed-arc plist nil from #1584# to #1231# cost 1.15022) #s(costed-arc plist nil from #1584# to #1219# cost 1.09971) #s(costed-arc plist nil from #1584# to #1209# cost 1.03676) #s(costed-arc plist nil from #1584# to #1205# cost 0.966592)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 2 door-angle -60 solved t robot-pose #f(148.032 55.0505 -15.8617 91.8672 -116.18 -132.175 -9.42823 120.988 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998871 0.047513 0.0) (-0.047513 0.998871 0.0) (0.0 0.0 1.0)) pos #f(-379.633 245.617 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.82795) #s(costed-arc plist nil from #1570# to #1585=#s(extended-node plist ((:name . "l-0-2-23")) arc-list (#s(costed-arc plist nil from #1585# to #1572# cost 1.43353) #s(costed-arc plist nil from #1585# to #1573# cost 2.04338) #s(costed-arc plist nil from #1585# to #1574# cost 1.11106) #s(costed-arc plist nil from #1585# to #1575# cost 1.11835) #s(costed-arc plist nil from #1585# to #1576# cost 1.14367) #s(costed-arc plist nil from #1585# to #1577# cost 1.14922) #s(costed-arc plist nil from #1585# to #1578# cost 1.43283) #s(costed-arc plist nil from #1585# to #1579# cost 1.22417) #s(costed-arc plist nil from #1585# to #1366# cost 1.22912) #s(costed-arc plist nil from #1585# to #1363# cost 1.15394) #s(costed-arc plist nil from #1585# to #1580# cost 1.17353) #s(costed-arc plist nil from #1585# to #1581# cost 1.21759) #s(costed-arc plist nil from #1585# to #1582# cost 1.23135) #s(costed-arc plist nil from #1585# to #1583# cost 1.51567) #s(costed-arc plist nil from #1585# to #1256# cost 1.29256) #s(costed-arc plist nil from #1585# to #1253# cost 1.29755) #s(costed-arc plist nil from #1585# to #1385# cost 1.22649) #s(costed-arc plist nil from #1585# to #1381# cost 1.26723) #s(costed-arc plist nil from #1585# to #1377# cost 1.30682) #s(costed-arc plist nil from #1585# to #1372# cost 1.30399) #s(costed-arc plist nil from #1585# to #1240# cost 1.6903) #s(costed-arc plist nil from #1585# to #1201# cost 1.37108) #s(costed-arc plist nil from #1585# to #1231# cost 1.38936) #s(costed-arc plist nil from #1585# to #1219# cost 1.33163) #s(costed-arc plist nil from #1585# to #1209# cost 1.32119) #s(costed-arc plist nil from #1585# to #1205# cost 1.41169)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(222.794 65.4098 46.0062 -36.809 -8.60206 -18.4734 -71.3902 201.554 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(219.477 37.1566 45.7079 -12.3492 -8.59503 -21.2614 -57.049 201.093 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.881254 0.472643 0.0) (-0.472643 0.881254 0.0) (0.0 0.0 1.0)) pos #f(104.503 -262.304 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.99951 -0.0313 0.0) (0.0313 0.99951 0.0) (0.0 0.0 1.0)) pos #f(124.933 -254.411 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.83538) #s(costed-arc plist nil from #1570# to #1586=#s(extended-node plist ((:name . "l-0-2-22")) arc-list (#s(costed-arc plist nil from #1586# to #1572# cost 1.44409) #s(costed-arc plist nil from #1586# to #1573# cost 2.03505) #s(costed-arc plist nil from #1586# to #1574# cost 1.14921) #s(costed-arc plist nil from #1586# to #1575# cost 1.16202) #s(costed-arc plist nil from #1586# to #1576# cost 1.19596) #s(costed-arc plist nil from #1586# to #1577# cost 1.2001) #s(costed-arc plist nil from #1586# to #1578# cost 1.46292) #s(costed-arc plist nil from #1586# to #1579# cost 1.25037) #s(costed-arc plist nil from #1586# to #1366# cost 1.25454) #s(costed-arc plist nil from #1586# to #1363# cost 1.17313) #s(costed-arc plist nil from #1586# to #1580# cost 1.20536) #s(costed-arc plist nil from #1586# to #1581# cost 1.26105) #s(costed-arc plist nil from #1586# to #1582# cost 1.27443) #s(costed-arc plist nil from #1586# to #1583# cost 1.54026) #s(costed-arc plist nil from #1586# to #1256# cost 1.30792) #s(costed-arc plist nil from #1586# to #1253# cost 1.30821) #s(costed-arc plist nil from #1586# to #1385# cost 1.23457) #s(costed-arc plist nil from #1586# to #1381# cost 1.29571) #s(costed-arc plist nil from #1586# to #1377# cost 1.34514) #s(costed-arc plist nil from #1586# to #1372# cost 1.34076) #s(costed-arc plist nil from #1586# to #1240# cost 1.69521) #s(costed-arc plist nil from #1586# to #1201# cost 1.37473) #s(costed-arc plist nil from #1586# to #1231# cost 1.39448) #s(costed-arc plist nil from #1586# to #1219# cost 1.33548) #s(costed-arc plist nil from #1586# to #1209# cost 1.34234) #s(costed-arc plist nil from #1586# to #1205# cost 1.44832)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(229.577 66.191 35.4157 -37.0502 -8.60332 -14.7192 -88.126 201.357 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(225.426 31.3491 33.3522 -37.2423 -11.4402 -17.7924 -71.3821 201.245 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.882047 0.471162 0.0) (-0.471162 0.882047 0.0) (0.0 0.0 1.0)) pos #f(86.3519 -286.577 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999456 -0.032985 0.0) (0.032985 0.999456 0.0) (0.0 0.0 1.0)) pos #f(107.854 -278.64 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.786766) #s(costed-arc plist nil from #1570# to #1587=#s(extended-node plist ((:name . "l-0-2-21")) arc-list (#s(costed-arc plist nil from #1587# to #1572# cost 1.45712) #s(costed-arc plist nil from #1587# to #1573# cost 2.03299) #s(costed-arc plist nil from #1587# to #1574# cost 1.18858) #s(costed-arc plist nil from #1587# to #1575# cost 1.20282) #s(costed-arc plist nil from #1587# to #1576# cost 1.23527) #s(costed-arc plist nil from #1587# to #1577# cost 1.23323) #s(costed-arc plist nil from #1587# to #1578# cost 1.49103) #s(costed-arc plist nil from #1587# to #1579# cost 1.26226) #s(costed-arc plist nil from #1587# to #1366# cost 1.28554) #s(costed-arc plist nil from #1587# to #1363# cost 1.20061) #s(costed-arc plist nil from #1587# to #1580# cost 1.23737) #s(costed-arc plist nil from #1587# to #1581# cost 1.29249) #s(costed-arc plist nil from #1587# to #1582# cost 1.2992) #s(costed-arc plist nil from #1587# to #1583# cost 1.55968) #s(costed-arc plist nil from #1587# to #1256# cost 1.33208) #s(costed-arc plist nil from #1587# to #1253# cost 1.3292) #s(costed-arc plist nil from #1587# to #1385# cost 1.25171) #s(costed-arc plist nil from #1587# to #1381# cost 1.32016) #s(costed-arc plist nil from #1587# to #1377# cost 1.3672) #s(costed-arc plist nil from #1587# to #1372# cost 1.35497) #s(costed-arc plist nil from #1587# to #1240# cost 1.71304) #s(costed-arc plist nil from #1587# to #1201# cost 1.39081) #s(costed-arc plist nil from #1587# to #1231# cost 1.40793) #s(costed-arc plist nil from #1587# to #1219# cost 1.34213) #s(costed-arc plist nil from #1587# to #1209# cost 1.3512) #s(costed-arc plist nil from #1587# to #1205# cost 1.45876)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(234.543 67.057 22.6823 -37.2077 -8.60373 -11.9687 -92.4573 200.935 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(232.943 32.7054 20.5566 -37.2423 -8.59437 -15.7002 -77.6868 200.871 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.883028 0.46932 0.0) (-0.46932 0.883028 0.0) (0.0 0.0 1.0)) pos #f(65.6982 -312.287 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999385 -0.03506 0.0) (0.03506 0.999385 0.0) (0.0 0.0 1.0)) pos #f(89.4536 -302.402 0.0)) object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.764079) #s(costed-arc plist nil from #1570# to #1588=#s(extended-node plist ((:name . "l-0-2-20")) arc-list (#s(costed-arc plist nil from #1588# to #1572# cost 1.48281) #s(costed-arc plist nil from #1588# to #1573# cost 2.02462) #s(costed-arc plist nil from #1588# to #1574# cost 1.22063) #s(costed-arc plist nil from #1588# to #1575# cost 1.23587) #s(costed-arc plist nil from #1588# to #1576# cost 1.26687) #s(costed-arc plist nil from #1588# to #1577# cost 1.25941) #s(costed-arc plist nil from #1588# to #1578# cost 1.50264) #s(costed-arc plist nil from #1588# to #1579# cost 1.26682) #s(costed-arc plist nil from #1588# to #1366# cost 1.31712) #s(costed-arc plist nil from #1588# to #1363# cost 1.22968) #s(costed-arc plist nil from #1588# to #1580# cost 1.26683) #s(costed-arc plist nil from #1588# to #1581# cost 1.31939) #s(costed-arc plist nil from #1588# to #1582# cost 1.31945) #s(costed-arc plist nil from #1588# to #1583# cost 1.5642) #s(costed-arc plist nil from #1588# to #1256# cost 1.36457) #s(costed-arc plist nil from #1588# to #1253# cost 1.35766) #s(costed-arc plist nil from #1588# to #1385# cost 1.27538) #s(costed-arc plist nil from #1588# to #1381# cost 1.34321) #s(costed-arc plist nil from #1588# to #1377# cost 1.38503) #s(costed-arc plist nil from #1588# to #1372# cost 1.36513) #s(costed-arc plist nil from #1588# to #1240# cost 1.73958) #s(costed-arc plist nil from #1588# to #1201# cost 1.41992) #s(costed-arc plist nil from #1588# to #1231# cost 1.43092) #s(costed-arc plist nil from #1588# to #1219# cost 1.35639) #s(costed-arc plist nil from #1588# to #1209# cost 1.36332) #s(costed-arc plist nil from #1588# to #1205# cost 1.4647)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(238.55 67.5082 9.81754 -37.238 -8.60439 -9.77354 -96.0444 200.573 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(238.678 32.4589 8.12765 -37.2423 -8.59437 -17.0285 -82.3457 200.567 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.882228 0.470823 0.0) (-0.470823 0.882228 0.0) (0.0 0.0 1.0)) pos #f(65.7955 -310.198 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999444 -0.033356 0.0) (0.033356 0.999444 0.0) (0.0 0.0 1.0)) pos #f(91.9615 -297.841 0.0)) object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.766264) #s(costed-arc plist nil from #1570# to #1589=#s(extended-node plist ((:name . "l-0-2-19")) arc-list (#s(costed-arc plist nil from #1589# to #1572# cost 1.54479) #s(costed-arc plist nil from #1589# to #1573# cost 2.00163) #s(costed-arc plist nil from #1589# to #1574# cost 1.26602) #s(costed-arc plist nil from #1589# to #1575# cost 1.27892) #s(costed-arc plist nil from #1589# to #1576# cost 1.30417) #s(costed-arc plist nil from #1589# to #1577# cost 1.29117) #s(costed-arc plist nil from #1589# to #1578# cost 1.52405) #s(costed-arc plist nil from #1589# to #1579# cost 1.28574) #s(costed-arc plist nil from #1589# to #1366# cost 1.37049) #s(costed-arc plist nil from #1589# to #1363# cost 1.27864) #s(costed-arc plist nil from #1589# to #1580# cost 1.30899) #s(costed-arc plist nil from #1589# to #1581# cost 1.35349) #s(costed-arc plist nil from #1589# to #1582# cost 1.34651) #s(costed-arc plist nil from #1589# to #1583# cost 1.58106) #s(costed-arc plist nil from #1589# to #1256# cost 1.42465) #s(costed-arc plist nil from #1589# to #1253# cost 1.41161) #s(costed-arc plist nil from #1589# to #1385# cost 1.3204) #s(costed-arc plist nil from #1589# to #1381# cost 1.37724) #s(costed-arc plist nil from #1589# to #1377# cost 1.40918) #s(costed-arc plist nil from #1589# to #1372# cost 1.38195) #s(costed-arc plist nil from #1589# to #1240# cost 1.79878) #s(costed-arc plist nil from #1589# to #1201# cost 1.47782) #s(costed-arc plist nil from #1589# to #1231# cost 1.47798) #s(costed-arc plist nil from #1589# to #1219# cost 1.39058) #s(costed-arc plist nil from #1589# to #1209# cost 1.38831) #s(costed-arc plist nil from #1589# to #1205# cost 1.47539)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(242.884 68.9944 -2.44968 -37.2392 -8.60496 -2.36344 -96.0843 196.783 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(227.774 30.1425 -13.0565 -36.7403 -8.59437 -48.7081 -82.815 196.864 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.88052 0.474009 0.0) (-0.474009 0.88052 0.0) (0.0 0.0 1.0)) pos #f(87.2922 -291.961 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.999558 -0.029743 0.0) (0.029743 0.999558 0.0) (0.0 0.0 1.0)) pos #f(113.56 -279.117 0.0)) object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.820292) #s(costed-arc plist nil from #1570# to #1590=#s(extended-node plist ((:name . "l-0-2-18")) arc-list (#s(costed-arc plist nil from #1590# to #1572# cost 1.59619) #s(costed-arc plist nil from #1590# to #1573# cost 1.98982) #s(costed-arc plist nil from #1590# to #1574# cost 1.2741) #s(costed-arc plist nil from #1590# to #1575# cost 1.2913) #s(costed-arc plist nil from #1590# to #1576# cost 1.31765) #s(costed-arc plist nil from #1590# to #1577# cost 1.2994) #s(costed-arc plist nil from #1590# to #1578# cost 1.47622) #s(costed-arc plist nil from #1590# to #1579# cost 1.25575) #s(costed-arc plist nil from #1590# to #1366# cost 1.39659) #s(costed-arc plist nil from #1590# to #1363# cost 1.30806) #s(costed-arc plist nil from #1590# to #1580# cost 1.33413) #s(costed-arc plist nil from #1590# to #1581# cost 1.3719) #s(costed-arc plist nil from #1590# to #1582# cost 1.35495) #s(costed-arc plist nil from #1590# to #1583# cost 1.52847) #s(costed-arc plist nil from #1590# to #1256# cost 1.46876) #s(costed-arc plist nil from #1590# to #1253# cost 1.45238) #s(costed-arc plist nil from #1590# to #1385# cost 1.35784) #s(costed-arc plist nil from #1590# to #1381# cost 1.4002) #s(costed-arc plist nil from #1590# to #1377# cost 1.41786) #s(costed-arc plist nil from #1590# to #1372# cost 1.37887) #s(costed-arc plist nil from #1590# to #1240# cost 1.83446) #s(costed-arc plist nil from #1590# to #1201# cost 1.53136) #s(costed-arc plist nil from #1590# to #1231# cost 1.52036) #s(costed-arc plist nil from #1590# to #1219# cost 1.42067) #s(costed-arc plist nil from #1590# to #1209# cost 1.4079) #s(costed-arc plist nil from #1590# to #1205# cost 1.46731)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(239.613 67.9755 -19.3881 -37.2391 -8.60254 -9.34578 -97.2558 195.114 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.875592 0.483051 0.0) (-0.483051 0.875592 0.0) (0.0 0.0 1.0)) pos #f(144.284 -235.717 0.0)) base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.864542) #s(costed-arc plist nil from #1570# to #1591=#s(extended-node plist ((:name . "l-0-2-17")) arc-list (#s(costed-arc plist nil from #1591# to #1572# cost 1.47915) #s(costed-arc plist nil from #1591# to #1573# cost 2.02357) #s(costed-arc plist nil from #1591# to #1574# cost 1.17554) #s(costed-arc plist nil from #1591# to #1575# cost 1.19613) #s(costed-arc plist nil from #1591# to #1576# cost 1.25076) #s(costed-arc plist nil from #1591# to #1577# cost 1.27213) #s(costed-arc plist nil from #1591# to #1578# cost 1.49817) #s(costed-arc plist nil from #1591# to #1579# cost 1.33633) #s(costed-arc plist nil from #1591# to #1366# cost 1.26942) #s(costed-arc plist nil from #1591# to #1363# cost 1.18997) #s(costed-arc plist nil from #1591# to #1580# cost 1.23593) #s(costed-arc plist nil from #1591# to #1581# cost 1.31679) #s(costed-arc plist nil from #1591# to #1582# cost 1.35204) #s(costed-arc plist nil from #1591# to #1583# cost 1.58948) #s(costed-arc plist nil from #1591# to #1256# cost 1.3155) #s(costed-arc plist nil from #1591# to #1253# cost 1.31571) #s(costed-arc plist nil from #1591# to #1385# cost 1.25358) #s(costed-arc plist nil from #1591# to #1381# cost 1.33764) #s(costed-arc plist nil from #1591# to #1377# cost 1.41682) #s(costed-arc plist nil from #1591# to #1372# cost 1.4362) #s(costed-arc plist nil from #1591# to #1240# cost 1.68183) #s(costed-arc plist nil from #1591# to #1201# cost 1.3759) #s(costed-arc plist nil from #1591# to #1231# cost 1.40852) #s(costed-arc plist nil from #1591# to #1219# cost 1.37419) #s(costed-arc plist nil from #1591# to #1209# cost 1.4163) #s(costed-arc plist nil from #1591# to #1205# cost 1.55099)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(219.393 70.4067 55.9461 -37.2395 -8.59972 -12.3367 -114.566 195.041 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(214.721 53.7333 53.8639 -37.2423 -8.59437 -20.7256 -114.592 195.84 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.882654 0.470024 0.0) (-0.470024 0.882654 0.0) (0.0 0.0 1.0)) pos #f(90.3195 -270.495 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.963115 0.269091 0.0) (-0.269091 0.963115 0.0) (0.0 0.0 1.0)) pos #f(106.943 -261.715 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.831477) #s(costed-arc plist nil from #1570# to #1592=#s(extended-node plist ((:name . "l-0-2-16")) arc-list (#s(costed-arc plist nil from #1592# to #1572# cost 1.41655) #s(costed-arc plist nil from #1592# to #1573# cost 2.07324) #s(costed-arc plist nil from #1592# to #1574# cost 1.20244) #s(costed-arc plist nil from #1592# to #1575# cost 1.22147) #s(costed-arc plist nil from #1592# to #1576# cost 1.26462) #s(costed-arc plist nil from #1592# to #1577# cost 1.27197) #s(costed-arc plist nil from #1592# to #1578# cost 1.5376) #s(costed-arc plist nil from #1592# to #1579# cost 1.3153) #s(costed-arc plist nil from #1592# to #1366# cost 1.27145) #s(costed-arc plist nil from #1592# to #1363# cost 1.19213) #s(costed-arc plist nil from #1592# to #1580# cost 1.24599) #s(costed-arc plist nil from #1592# to #1581# cost 1.31823) #s(costed-arc plist nil from #1592# to #1582# cost 1.33773) #s(costed-arc plist nil from #1592# to #1583# cost 1.61042) #s(costed-arc plist nil from #1592# to #1256# cost 1.29176) #s(costed-arc plist nil from #1592# to #1253# cost 1.29714) #s(costed-arc plist nil from #1592# to #1385# cost 1.23619) #s(costed-arc plist nil from #1592# to #1381# cost 1.33541) #s(costed-arc plist nil from #1592# to #1377# cost 1.40421) #s(costed-arc plist nil from #1592# to #1372# cost 1.40514) #s(costed-arc plist nil from #1592# to #1240# cost 1.66076) #s(costed-arc plist nil from #1592# to #1201# cost 1.33877) #s(costed-arc plist nil from #1592# to #1231# cost 1.37762) #s(costed-arc plist nil from #1592# to #1219# cost 1.33676) #s(costed-arc plist nil from #1592# to #1209# cost 1.37335) #s(costed-arc plist nil from #1592# to #1205# cost 1.51425)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(231.78 69.3287 37.1207 -37.2382 -8.60489 -15.7234 -102.05 201.689 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(209.488 33.5578 32.9313 -37.2423 -8.61365 -21.9085 -95.8602 202.223 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.891891 0.45225 0.0) (-0.45225 0.891891 0.0) (0.0 0.0 1.0)) pos #f(-1.27145 -385.597 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.998525 -0.054285 0.0) (0.054285 0.998525 0.0) (0.0 0.0 1.0)) pos #f(28.7675 -367.192 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.717169) #s(costed-arc plist nil from #1570# to #1593=#s(extended-node plist ((:name . "l-0-2-15")) arc-list (#s(costed-arc plist nil from #1593# to #1572# cost 1.45031) #s(costed-arc plist nil from #1593# to #1573# cost 2.06735) #s(costed-arc plist nil from #1593# to #1574# cost 1.25299) #s(costed-arc plist nil from #1593# to #1575# cost 1.27552) #s(costed-arc plist nil from #1593# to #1576# cost 1.32177) #s(costed-arc plist nil from #1593# to #1577# cost 1.32511) #s(costed-arc plist nil from #1593# to #1578# cost 1.56468) #s(costed-arc plist nil from #1593# to #1579# cost 1.34137) #s(costed-arc plist nil from #1593# to #1366# cost 1.31564) #s(costed-arc plist nil from #1593# to #1363# cost 1.23308) #s(costed-arc plist nil from #1593# to #1580# cost 1.29285) #s(costed-arc plist nil from #1593# to #1581# cost 1.3685) #s(costed-arc plist nil from #1593# to #1582# cost 1.38357) #s(costed-arc plist nil from #1593# to #1583# cost 1.63035) #s(costed-arc plist nil from #1593# to #1256# cost 1.33193) #s(costed-arc plist nil from #1593# to #1253# cost 1.33235) #s(costed-arc plist nil from #1593# to #1385# cost 1.2682) #s(costed-arc plist nil from #1593# to #1381# cost 1.37611) #s(costed-arc plist nil from #1593# to #1377# cost 1.44592) #s(costed-arc plist nil from #1593# to #1372# cost 1.44158) #s(costed-arc plist nil from #1593# to #1240# cost 1.68751) #s(costed-arc plist nil from #1593# to #1201# cost 1.37062) #s(costed-arc plist nil from #1593# to #1231# cost 1.40604) #s(costed-arc plist nil from #1593# to #1219# cost 1.35985) #s(costed-arc plist nil from #1593# to #1209# cost 1.40423) #s(costed-arc plist nil from #1593# to #1205# cost 1.54756)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(234.56 70.7786 23.2009 -37.238 -8.604 -12.9588 -114.581 201.159 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(145.21 34.6884 2.5201 -30.3443 -8.59437 -72.3795 -114.592 201.545 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.892293 0.451456 0.0) (-0.451456 0.892293 0.0) (0.0 0.0 1.0)) pos #f(-9.41603 -394.227 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.998482 -0.05508 0.0) (0.05508 0.998482 0.0) (0.0 0.0 1.0)) pos #f(30.8965 -381.002 0.0)) object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.707033) #s(costed-arc plist nil from #1570# to #1594=#s(extended-node plist ((:name . "l-0-2-14")) arc-list (#s(costed-arc plist nil from #1594# to #1572# cost 1.47765) #s(costed-arc plist nil from #1594# to #1573# cost 2.06406) #s(costed-arc plist nil from #1594# to #1574# cost 1.28944) #s(costed-arc plist nil from #1594# to #1575# cost 1.31136) #s(costed-arc plist nil from #1594# to #1576# cost 1.35286) #s(costed-arc plist nil from #1594# to #1577# cost 1.34915) #s(costed-arc plist nil from #1594# to #1578# cost 1.58172) #s(costed-arc plist nil from #1594# to #1579# cost 1.3455) #s(costed-arc plist nil from #1594# to #1366# cost 1.35171) #s(costed-arc plist nil from #1594# to #1363# cost 1.26662) #s(costed-arc plist nil from #1594# to #1580# cost 1.32484) #s(costed-arc plist nil from #1594# to #1581# cost 1.39452) #s(costed-arc plist nil from #1594# to #1582# cost 1.401) #s(costed-arc plist nil from #1594# to #1583# cost 1.63898) #s(costed-arc plist nil from #1594# to #1256# cost 1.36785) #s(costed-arc plist nil from #1594# to #1253# cost 1.36471) #s(costed-arc plist nil from #1594# to #1385# cost 1.29506) #s(costed-arc plist nil from #1594# to #1381# cost 1.40003) #s(costed-arc plist nil from #1594# to #1377# cost 1.4615) #s(costed-arc plist nil from #1594# to #1372# cost 1.4476) #s(costed-arc plist nil from #1594# to #1240# cost 1.71978) #s(costed-arc plist nil from #1594# to #1201# cost 1.40249) #s(costed-arc plist nil from #1594# to #1231# cost 1.43129) #s(costed-arc plist nil from #1594# to #1219# cost 1.37466) #s(costed-arc plist nil from #1594# to #1209# cost 1.41329) #s(costed-arc plist nil from #1594# to #1205# cost 1.54844)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(236.895 71.3694 8.91317 -37.2379 -8.88747 -10.5761 -114.582 200.704 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(246.16 37.6864 -8.86712 -23.0076 -8.59437 -106.093 -114.592 201.049 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.891594 0.452836 0.0) (-0.452836 0.891594 0.0) (0.0 0.0 1.0)) pos #f(-14.6752 -402.539 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.998561 -0.05363 0.0) (0.05363 0.998561 0.0) (0.0 0.0 1.0)) pos #f(25.6577 -389.376 0.0)) object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.709428) #s(costed-arc plist nil from #1570# to #1595=#s(extended-node plist ((:name . "l-0-2-13")) arc-list (#s(costed-arc plist nil from #1595# to #1572# cost 1.50829) #s(costed-arc plist nil from #1595# to #1573# cost 2.04748) #s(costed-arc plist nil from #1595# to #1574# cost 1.31453) #s(costed-arc plist nil from #1595# to #1575# cost 1.33616) #s(costed-arc plist nil from #1595# to #1576# cost 1.3736) #s(costed-arc plist nil from #1595# to #1577# cost 1.36346) #s(costed-arc plist nil from #1595# to #1578# cost 1.581) #s(costed-arc plist nil from #1595# to #1579# cost 1.33838) #s(costed-arc plist nil from #1595# to #1366# cost 1.38324) #s(costed-arc plist nil from #1595# to #1363# cost 1.29598) #s(costed-arc plist nil from #1595# to #1580# cost 1.34982) #s(costed-arc plist nil from #1595# to #1581# cost 1.41267) #s(costed-arc plist nil from #1595# to #1582# cost 1.41083) #s(costed-arc plist nil from #1595# to #1583# cost 1.63063) #s(costed-arc plist nil from #1595# to #1256# cost 1.40761) #s(costed-arc plist nil from #1595# to #1253# cost 1.39975) #s(costed-arc plist nil from #1595# to #1385# cost 1.32285) #s(costed-arc plist nil from #1595# to #1381# cost 1.41828) #s(costed-arc plist nil from #1595# to #1377# cost 1.46961) #s(costed-arc plist nil from #1595# to #1372# cost 1.44639) #s(costed-arc plist nil from #1595# to #1240# cost 1.75626) #s(costed-arc plist nil from #1595# to #1201# cost 1.44424) #s(costed-arc plist nil from #1595# to #1231# cost 1.46216) #s(costed-arc plist nil from #1595# to #1219# cost 1.39256) #s(costed-arc plist nil from #1595# to #1209# cost 1.42154) #s(costed-arc plist nil from #1595# to #1205# cost 1.5418)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(239.384 71.7631 -5.81644 -37.2401 -8.60621 -8.40517 -114.578 200.232 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.889197 0.457525 0.0) (-0.457525 0.889197 0.0) (0.0 0.0 1.0)) pos #f(3.82739 -377.899 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.737741) #s(costed-arc plist nil from #1570# to #1596=#s(extended-node plist ((:name . "l-0-2-12")) arc-list (#s(costed-arc plist nil from #1596# to #1572# cost 1.62083) #s(costed-arc plist nil from #1596# to #1573# cost 2.00399) #s(costed-arc plist nil from #1596# to #1574# cost 1.38746) #s(costed-arc plist nil from #1596# to #1575# cost 1.40152) #s(costed-arc plist nil from #1596# to #1576# cost 1.42889) #s(costed-arc plist nil from #1596# to #1577# cost 1.41393) #s(costed-arc plist nil from #1596# to #1578# cost 1.62634) #s(costed-arc plist nil from #1596# to #1579# cost 1.38959) #s(costed-arc plist nil from #1596# to #1366# cost 1.47568) #s(costed-arc plist nil from #1596# to #1363# cost 1.37948) #s(costed-arc plist nil from #1596# to #1580# cost 1.41613) #s(costed-arc plist nil from #1596# to #1581# cost 1.46582) #s(costed-arc plist nil from #1596# to #1582# cost 1.45823) #s(costed-arc plist nil from #1596# to #1583# cost 1.67524) #s(costed-arc plist nil from #1596# to #1256# cost 1.51658) #s(costed-arc plist nil from #1596# to #1253# cost 1.49781) #s(costed-arc plist nil from #1596# to #1385# cost 1.40428) #s(costed-arc plist nil from #1596# to #1381# cost 1.47417) #s(costed-arc plist nil from #1596# to #1377# cost 1.51217) #s(costed-arc plist nil from #1596# to #1372# cost 1.4844) #s(costed-arc plist nil from #1596# to #1240# cost 1.87036) #s(costed-arc plist nil from #1596# to #1201# cost 1.55292) #s(costed-arc plist nil from #1596# to #1231# cost 1.55132) #s(costed-arc plist nil from #1596# to #1219# cost 1.46237) #s(costed-arc plist nil from #1596# to #1209# cost 1.47377) #s(costed-arc plist nil from #1596# to #1205# cost 1.57142)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(243.106 75.9362 -18.4325 -37.2317 -8.77049 9.98434 -114.184 194.044 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.88643 0.462864 0.0) (-0.462864 0.88643 0.0) (0.0 0.0 1.0)) pos #f(61.9586 -329.87 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.870348)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 1 door-angle -40 solved t robot-pose #f(72.3819 48.765 14.6424 4.92814 -60.9044 -68.4793 -114.21 232.532 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.862668 0.50577 0.0) (-0.50577 0.862668 0.0) (0.0 0.0 1.0)) pos #f(-242.508 -390.012 0.0)) base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.51943) #s(costed-arc plist nil from #1569# to #1597=#s(extended-node plist ((:name . "l-0-1-fk")) arc-list (#s(costed-arc plist nil from #1597# to #1571# cost 1.48625) #s(costed-arc plist nil from #1597# to #1584# cost 0.665215) #s(costed-arc plist nil from #1597# to #1585# cost 1.92167) #s(costed-arc plist nil from #1597# to #1586# cost 1.93439) #s(costed-arc plist nil from #1597# to #1587# cost 1.92698) #s(costed-arc plist nil from #1597# to #1588# cost 1.92812) #s(costed-arc plist nil from #1597# to #1589# cost 1.93617) #s(costed-arc plist nil from #1597# to #1590# cost 1.95062) #s(costed-arc plist nil from #1597# to #1591# cost 1.99909) #s(costed-arc plist nil from #1597# to #1592# cost 1.93325) #s(costed-arc plist nil from #1597# to #1593# cost 1.94859) #s(costed-arc plist nil from #1597# to #1594# cost 1.94348) #s(costed-arc plist nil from #1597# to #1595# cost 1.94308) #s(costed-arc plist nil from #1597# to #1596# cost 1.97823)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 1 door-angle -40 solved t robot-pose #f(150.25 57.1237 -15.2881 96.8083 -97.0454 -85.2894 -8.8606 71.8969 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999567 -0.02944 0.0) (0.02944 0.999567 0.0) (0.0 0.0 1.0)) pos #f(-339.806 -96.2942 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.76117)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 0 door-angle -20 solved t robot-pose #f(275.278 66.2632 56.8353 31.831 -121.501 110.55 -61.8222 -68.3148 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998038 -0.062606 0.0) (0.062606 0.998038 0.0) (0.0 0.0 1.0)) pos #f(48.2635 -396.676 0.0)) base-coords-optimized nil object-coords-index fk object-coords #149# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-0-rk")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index rk object-coords #148# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-0")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-1")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-2")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-3")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-4")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-5")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-6")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-7")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-8")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-9")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-10")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-11")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-12")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-13")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-14")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-15")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-16")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-17")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-18")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-19")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-20")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-21")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-22")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-1-23")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1597# #1570# #s(extended-node plist ((:name . "l-0-2-0")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-1")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-2")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-3")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-4")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-5")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-6")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-7")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-8")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-9")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-10")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-0-2-11")) arc-list nil arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1596# #1595# #1594# #1593# #1592# #1591# #1590# #1589# #1588# #1587# #1586# #1585# #1584# #1571# #1205# #1209# #1219# #1231# #1201# #1240# #1372# #1377# #1381# #1385# #1253# #1256# #1583# #1582# #1581# #1580# #1363# #1366# #1579# #1578# #1577# #1576# #1575# #1574# #1573# #1572# #960# #956# #964# #948# #952# #971# #1156# #1160# #1164# #994# #1018# #1006# #1023# #1168# #1172# #1229# #1194# #1034# #944# #1228# #1135# #1227# #1226# #1113# #1225# #1224# #s(extended-node plist ((:name . "l-1-0-0")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-1")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-2")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-3")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1598=#s(extended-node plist ((:name . "l-1-0-4")) arc-list (#s(costed-arc plist nil from #1598# to #1555# cost 2.22877) #s(costed-arc plist nil from #1598# to #1599=#s(extended-node plist ((:name . "l-1-1-4")) arc-list (#s(costed-arc plist nil from #1599# to #1479# cost 0.93738) #s(costed-arc plist nil from #1599# to #1483# cost 0.719894) #s(costed-arc plist nil from #1599# to #1560# cost 1.2602) #s(costed-arc plist nil from #1599# to #1561# cost 1.21951) #s(costed-arc plist nil from #1599# to #1562# cost 1.50172)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(103.614 27.4974 4.25661 205.401 -39.8629 -123.605 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99986 -0.016709 0.0) (0.016709 0.99986 0.0) (0.0 0.0 1.0)) pos #f(-178.76 -520.083 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.30877) #s(costed-arc plist nil from #1598# to #1600=#s(extended-node plist ((:name . "l-1-1-3")) arc-list (#s(costed-arc plist nil from #1600# to #1479# cost 0.942361) #s(costed-arc plist nil from #1600# to #1483# cost 0.710522) #s(costed-arc plist nil from #1600# to #1560# cost 1.23835) #s(costed-arc plist nil from #1600# to #1561# cost 1.18662) #s(costed-arc plist nil from #1600# to #1562# cost 1.47644)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(105.212 23.8493 -14.3644 206.997 -49.2161 -120.934 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999863 -0.016554 0.0) (0.016554 0.999863 0.0) (0.0 0.0 1.0)) pos #f(-209.305 -490.366 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.34392) #s(costed-arc plist nil from #1598# to #1601=#s(extended-node plist ((:name . "l-1-1-1")) arc-list (#s(costed-arc plist nil from #1601# to #1479# cost 1.34207) #s(costed-arc plist nil from #1601# to #1483# cost 1.13796) #s(costed-arc plist nil from #1601# to #1560# cost 1.64219) #s(costed-arc plist nil from #1601# to #1561# cost 1.59366) #s(costed-arc plist nil from #1601# to #1562# cost 1.88465)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(261.99 9.6502 -20.2598 210.792 -12.2437 -119.092 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833872 -0.551958 0.0) (0.551958 0.833872 0.0) (0.0 0.0 1.0)) pos #f(-28.3201 -574.245 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 2.67729)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose #f(237.106 50.0331 73.9006 -31.0118 -103.047 98.4752 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.963989 0.265941 0.0) (-0.265941 0.963989 0.0) (0.0 0.0 1.0)) pos #f(301.28 -543.497 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1602=#s(extended-node plist ((:name . "l-1-0-5")) arc-list (#s(costed-arc plist nil from #1602# to #1555# cost 2.21027) #s(costed-arc plist nil from #1602# to #1599# cost 2.30924) #s(costed-arc plist nil from #1602# to #1600# cost 2.35249) #s(costed-arc plist nil from #1602# to #1601# cost 2.64712)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose #f(202.746 58.2812 63.2728 -35.2366 -48.5995 105.791 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(206.15 62.1569 67.5916 -31.4891 -54.4395 101.936 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.961766 0.273873 0.0) (-0.273873 0.961766 0.0) (0.0 0.0 1.0)) pos #f(275.862 -630.365 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.944329 0.329002 0.0) (-0.329002 0.944329 0.0) (0.0 0.0 1.0)) pos #f(285.162 -616.74 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-6")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-7")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-8")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-9")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-10")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-11")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-12")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-13")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-14")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-15")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-16")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-17")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-18")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-19")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-20")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-21")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-22")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-0-23")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-0")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1601# #s(extended-node plist ((:name . "l-1-1-2")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1600# #1599# #1555# #s(extended-node plist ((:name . "l-1-1-6")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-7")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-8")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-9")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-10")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-11")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-12")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-13")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-14")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-15")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-16")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-17")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-18")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-19")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-20")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-21")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-22")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-1-23")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1562# #1561# #1560# #s(extended-node plist ((:name . "l-1-2-3")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1483# #1479# #s(extended-node plist ((:name . "l-1-2-6")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-7")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-8")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-9")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-10")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-11")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-12")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-13")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-14")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-15")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-16")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-17")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-18")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-19")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-20")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-21")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-22")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-2-23")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-0")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1276# #1282# #s(extended-node plist ((:name . "l-1-3-3")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1268# #1289# #s(extended-node plist ((:name . "l-1-3-6")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-7")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-8")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-9")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-10")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-11")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-12")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-13")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-14")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-15")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-16")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-17")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-18")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-19")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-20")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-21")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-22")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-3-23")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-0")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1176# #1179# #s(extended-node plist ((:name . "l-1-4-3")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1049# #1040# #s(extended-node plist ((:name . "l-1-4-6")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-7")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-8")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-9")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-10")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-11")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-12")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-13")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-14")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-15")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-16")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-17")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-18")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-19")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-20")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-21")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-22")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-1-4-23")) arc-list nil arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-0")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-1")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-2")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-3")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-4")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-5")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-6")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-7")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-8")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-9")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-10")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-11")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-12")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-13")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-14")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-15")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-16")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-17")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-18")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-19")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-20")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-21")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-22")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-0-23")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 0 door-angle -20 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-0")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-1")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-2")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-3")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-4")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-5")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-6")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-7")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-8")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-9")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-10")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 10 object-coords #497# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-11")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-12")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-13")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-14")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-15")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-16")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-17")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-18")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-19")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-20")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-21")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-22")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-1-23")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-2-0")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1603=#s(extended-node plist ((:name . "l-2-2-1")) arc-list (#s(costed-arc plist nil from #1603# to #1521# cost 1.00439) #s(costed-arc plist nil from #1603# to #1522# cost 0.824478) #s(costed-arc plist nil from #1603# to #1523# cost 0.638745) #s(costed-arc plist nil from #1603# to #1524# cost 0.524057) #s(costed-arc plist nil from #1603# to #1525# cost 0.500363) #s(costed-arc plist nil from #1603# to #1526# cost 0.853558) #s(costed-arc plist nil from #1603# to #1527# cost 0.643208) #s(costed-arc plist nil from #1603# to #1528# cost 0.524078) #s(costed-arc plist nil from #1603# to #1359# cost 0.39194) #s(costed-arc plist nil from #1603# to #1529# cost 0.350586) #s(costed-arc plist nil from #1603# to #1530# cost 0.744585) #s(costed-arc plist nil from #1603# to #1353# cost 0.560733) #s(costed-arc plist nil from #1603# to #1531# cost 0.429076) #s(costed-arc plist nil from #1603# to #1532# cost 0.377319) #s(costed-arc plist nil from #1603# to #1533# cost 0.279741) #s(costed-arc plist nil from #1603# to #1264# cost 0.707562) #s(costed-arc plist nil from #1603# to #1534# cost 0.515892) #s(costed-arc plist nil from #1603# to #1535# cost 0.370731) #s(costed-arc plist nil from #1603# to #1536# cost 0.278561) #s(costed-arc plist nil from #1603# to #1537# cost 0.258833)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(245.638 41.8943 -20.1471 151.23 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999951 0.009943 0.0) (-0.009943 0.999951 0.0) (0.0 0.0 1.0)) pos #f(-264.55 -361.973 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #218# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1604=#s(extended-node plist ((:name . "l-2-2-2")) arc-list (#s(costed-arc plist nil from #1604# to #1521# cost 0.899942) #s(costed-arc plist nil from #1604# to #1522# cost 0.716465) #s(costed-arc plist nil from #1604# to #1523# cost 0.538242) #s(costed-arc plist nil from #1604# to #1524# cost 0.448098) #s(costed-arc plist nil from #1604# to #1525# cost 0.54214) #s(costed-arc plist nil from #1604# to #1526# cost 0.759617) #s(costed-arc plist nil from #1604# to #1527# cost 0.549303) #s(costed-arc plist nil from #1604# to #1528# cost 0.407234) #s(costed-arc plist nil from #1604# to #1359# cost 0.326833) #s(costed-arc plist nil from #1604# to #1529# cost 0.412213) #s(costed-arc plist nil from #1604# to #1530# cost 0.65728) #s(costed-arc plist nil from #1604# to #1353# cost 0.47959) #s(costed-arc plist nil from #1604# to #1531# cost 0.32952) #s(costed-arc plist nil from #1604# to #1532# cost 0.269534) #s(costed-arc plist nil from #1604# to #1533# cost 0.363904) #s(costed-arc plist nil from #1604# to #1264# cost 0.651681) #s(costed-arc plist nil from #1604# to #1534# cost 0.4562) #s(costed-arc plist nil from #1604# to #1535# cost 0.31543) #s(costed-arc plist nil from #1604# to #1536# cost 0.260569) #s(costed-arc plist nil from #1604# to #1537# cost 0.347215)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(244.421 55.0947 -1.68463 138.186 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((1.0 -0.000212 0.0) (0.000212 1.0 0.0) (0.0 0.0 1.0)) pos #f(-169.913 -481.641 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #249# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1605=#s(extended-node plist ((:name . "l-2-2-3")) arc-list (#s(costed-arc plist nil from #1605# to #1521# cost 0.778283) #s(costed-arc plist nil from #1605# to #1522# cost 0.597661) #s(costed-arc plist nil from #1605# to #1523# cost 0.480605) #s(costed-arc plist nil from #1605# to #1524# cost 0.522114) #s(costed-arc plist nil from #1605# to #1525# cost 0.635361) #s(costed-arc plist nil from #1605# to #1526# cost 0.645728) #s(costed-arc plist nil from #1605# to #1527# cost 0.447283) #s(costed-arc plist nil from #1605# to #1528# cost 0.331672) #s(costed-arc plist nil from #1605# to #1359# cost 0.413191) #s(costed-arc plist nil from #1605# to #1529# cost 0.517532) #s(costed-arc plist nil from #1605# to #1530# cost 0.556051) #s(costed-arc plist nil from #1605# to #1353# cost 0.401442) #s(costed-arc plist nil from #1605# to #1531# cost 0.303414) #s(costed-arc plist nil from #1605# to #1532# cost 0.322315) #s(costed-arc plist nil from #1605# to #1533# cost 0.482243) #s(costed-arc plist nil from #1605# to #1264# cost 0.575172) #s(costed-arc plist nil from #1605# to #1534# cost 0.39439) #s(costed-arc plist nil from #1605# to #1535# cost 0.321473) #s(costed-arc plist nil from #1605# to #1536# cost 0.368602) #s(costed-arc plist nil from #1605# to #1537# cost 0.474308)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(241.11 60.4925 16.8143 126.804 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((1.0 -0.000819 0.0) (0.000819 1.0 0.0) (0.0 0.0 1.0)) pos #f(-111.156 -497.404 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #280# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1606=#s(extended-node plist ((:name . "l-2-2-4")) arc-list (#s(costed-arc plist nil from #1606# to #1521# cost 0.623073) #s(costed-arc plist nil from #1606# to #1522# cost 0.48363) #s(costed-arc plist nil from #1606# to #1523# cost 0.490421) #s(costed-arc plist nil from #1606# to #1524# cost 0.56634) #s(costed-arc plist nil from #1606# to #1525# cost 0.686226) #s(costed-arc plist nil from #1606# to #1526# cost 0.493193) #s(costed-arc plist nil from #1606# to #1527# cost 0.35528) #s(costed-arc plist nil from #1606# to #1528# cost 0.360117) #s(costed-arc plist nil from #1606# to #1359# cost 0.470715) #s(costed-arc plist nil from #1606# to #1529# cost 0.577116) #s(costed-arc plist nil from #1606# to #1530# cost 0.423807) #s(costed-arc plist nil from #1606# to #1353# cost 0.338823) #s(costed-arc plist nil from #1606# to #1531# cost 0.343926) #s(costed-arc plist nil from #1606# to #1532# cost 0.393) #s(costed-arc plist nil from #1606# to #1533# cost 0.554907) #s(costed-arc plist nil from #1606# to #1264# cost 0.469536) #s(costed-arc plist nil from #1606# to #1534# cost 0.347334) #s(costed-arc plist nil from #1606# to #1535# cost 0.37667) #s(costed-arc plist nil from #1606# to #1536# cost 0.457453) #s(costed-arc plist nil from #1606# to #1537# cost 0.563647)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(234.349 62.6714 36.9493 120.502 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(161.154 28.2271 26.8705 115.022 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999978 0.006643 0.0) (-0.006643 0.999978 0.0) (0.0 0.0 1.0)) pos #f(-60.5243 -439.984 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.869336 -0.494222 0.0) (0.494222 0.869336 0.0) (0.0 0.0 1.0)) pos #f(-30.3257 -410.184 0.0)) object-coords-index 4 object-coords #311# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1607=#s(extended-node plist ((:name . "l-2-2-5")) arc-list (#s(costed-arc plist nil from #1607# to #1521# cost 0.495547) #s(costed-arc plist nil from #1607# to #1522# cost 0.462102) #s(costed-arc plist nil from #1607# to #1523# cost 0.484793) #s(costed-arc plist nil from #1607# to #1524# cost 0.562449) #s(costed-arc plist nil from #1607# to #1525# cost 0.688446) #s(costed-arc plist nil from #1607# to #1526# cost 0.342585) #s(costed-arc plist nil from #1607# to #1527# cost 0.328955) #s(costed-arc plist nil from #1607# to #1528# cost 0.382855) #s(costed-arc plist nil from #1607# to #1359# cost 0.489614) #s(costed-arc plist nil from #1607# to #1529# cost 0.59853) #s(costed-arc plist nil from #1607# to #1530# cost 0.282153) #s(costed-arc plist nil from #1607# to #1353# cost 0.321757) #s(costed-arc plist nil from #1607# to #1531# cost 0.379258) #s(costed-arc plist nil from #1607# to #1532# cost 0.452724) #s(costed-arc plist nil from #1607# to #1533# cost 0.601807) #s(costed-arc plist nil from #1607# to #1264# cost 0.341026) #s(costed-arc plist nil from #1607# to #1534# cost 0.357329) #s(costed-arc plist nil from #1607# to #1535# cost 0.463452) #s(costed-arc plist nil from #1607# to #1536# cost 0.564021) #s(costed-arc plist nil from #1607# to #1537# cost 0.658587)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(198.509 66.3546 59.0854 126.553 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(225.166 102.627 65.5664 133.249 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999807 0.019649 0.0) (-0.019649 0.999807 0.0) (0.0 0.0 1.0)) pos #f(16.4913 -326.951 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.882314 0.470662 0.0) (-0.470662 0.882314 0.0) (0.0 0.0 1.0)) pos #f(-6.37896 -299.264 0.0)) object-coords-index 5 object-coords #342# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-2-6")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1608=#s(extended-node plist ((:name . "l-2-2-7")) arc-list (#s(costed-arc plist nil from #1608# to #1521# cost 0.827651) #s(costed-arc plist nil from #1608# to #1522# cost 0.658654) #s(costed-arc plist nil from #1608# to #1523# cost 0.497796) #s(costed-arc plist nil from #1608# to #1524# cost 0.390447) #s(costed-arc plist nil from #1608# to #1525# cost 0.361947) #s(costed-arc plist nil from #1608# to #1526# cost 0.720967) #s(costed-arc plist nil from #1608# to #1527# cost 0.556439) #s(costed-arc plist nil from #1608# to #1528# cost 0.44238) #s(costed-arc plist nil from #1608# to #1359# cost 0.330623) #s(costed-arc plist nil from #1608# to #1529# cost 0.286195) #s(costed-arc plist nil from #1608# to #1530# cost 0.691533) #s(costed-arc plist nil from #1608# to #1353# cost 0.526853) #s(costed-arc plist nil from #1608# to #1531# cost 0.382213) #s(costed-arc plist nil from #1608# to #1532# cost 0.324202) #s(costed-arc plist nil from #1608# to #1533# cost 0.236681) #s(costed-arc plist nil from #1608# to #1264# cost 0.709595) #s(costed-arc plist nil from #1608# to #1534# cost 0.552865) #s(costed-arc plist nil from #1608# to #1535# cost 0.443427) #s(costed-arc plist nil from #1608# to #1536# cost 0.34522) #s(costed-arc plist nil from #1608# to #1537# cost 0.256338)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(250.339 56.6063 -20.2543 154.968 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997685 0.06801 0.0) (-0.06801 0.997685 0.0) (0.0 0.0 1.0)) pos #f(-12.3028 -339.723 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #404# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1609=#s(extended-node plist ((:name . "l-2-2-8")) arc-list (#s(costed-arc plist nil from #1609# to #1521# cost 0.71256) #s(costed-arc plist nil from #1609# to #1522# cost 0.566622) #s(costed-arc plist nil from #1609# to #1523# cost 0.464415) #s(costed-arc plist nil from #1609# to #1524# cost 0.437181) #s(costed-arc plist nil from #1609# to #1525# cost 0.479429) #s(costed-arc plist nil from #1609# to #1526# cost 0.664289) #s(costed-arc plist nil from #1609# to #1527# cost 0.520628) #s(costed-arc plist nil from #1609# to #1528# cost 0.410092) #s(costed-arc plist nil from #1609# to #1359# cost 0.423568) #s(costed-arc plist nil from #1609# to #1529# cost 0.46103) #s(costed-arc plist nil from #1609# to #1530# cost 0.669825) #s(costed-arc plist nil from #1609# to #1353# cost 0.541623) #s(costed-arc plist nil from #1609# to #1531# cost 0.423555) #s(costed-arc plist nil from #1609# to #1532# cost 0.334022) #s(costed-arc plist nil from #1609# to #1533# cost 0.482621) #s(costed-arc plist nil from #1609# to #1264# cost 0.729417) #s(costed-arc plist nil from #1609# to #1534# cost 0.579874) #s(costed-arc plist nil from #1609# to #1535# cost 0.500681) #s(costed-arc plist nil from #1609# to #1536# cost 0.482975) #s(costed-arc plist nil from #1609# to #1537# cost 0.530594)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(249.238 68.1762 -2.64268 121.411 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.995929 0.090143 0.0) (-0.090143 0.995929 0.0) (0.0 0.0 1.0)) pos #f(64.9769 -431.54 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #435# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1610=#s(extended-node plist ((:name . "l-2-2-9")) arc-list (#s(costed-arc plist nil from #1610# to #1521# cost 0.645076) #s(costed-arc plist nil from #1610# to #1522# cost 0.482828) #s(costed-arc plist nil from #1610# to #1523# cost 0.368551) #s(costed-arc plist nil from #1610# to #1524# cost 0.388545) #s(costed-arc plist nil from #1610# to #1525# cost 0.48562) #s(costed-arc plist nil from #1610# to #1526# cost 0.535151) #s(costed-arc plist nil from #1610# to #1527# cost 0.393103) #s(costed-arc plist nil from #1610# to #1528# cost 0.319385) #s(costed-arc plist nil from #1610# to #1359# cost 0.371182) #s(costed-arc plist nil from #1610# to #1529# cost 0.459106) #s(costed-arc plist nil from #1610# to #1530# cost 0.532995) #s(costed-arc plist nil from #1610# to #1353# cost 0.399162) #s(costed-arc plist nil from #1610# to #1531# cost 0.294973) #s(costed-arc plist nil from #1610# to #1532# cost 0.336685) #s(costed-arc plist nil from #1610# to #1533# cost 0.473303) #s(costed-arc plist nil from #1610# to #1264# cost 0.581027) #s(costed-arc plist nil from #1610# to #1534# cost 0.43026) #s(costed-arc plist nil from #1610# to #1535# cost 0.362776) #s(costed-arc plist nil from #1610# to #1536# cost 0.421809) #s(costed-arc plist nil from #1610# to #1537# cost 0.51691)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(231.026 66.0913 15.9905 135.837 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998498 0.054781 0.0) (-0.054781 0.998498 0.0) (0.0 0.0 1.0)) pos #f(68.8592 -413.554 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #466# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1520# #1611=#s(extended-node plist ((:name . "l-2-2-11")) arc-list (#s(costed-arc plist nil from #1611# to #1521# cost 0.357675) #s(costed-arc plist nil from #1611# to #1522# cost 0.316081) #s(costed-arc plist nil from #1611# to #1523# cost 0.381135) #s(costed-arc plist nil from #1611# to #1524# cost 0.467397) #s(costed-arc plist nil from #1611# to #1525# cost 0.575383) #s(costed-arc plist nil from #1611# to #1526# cost 0.279234) #s(costed-arc plist nil from #1611# to #1527# cost 0.300935) #s(costed-arc plist nil from #1611# to #1528# cost 0.363424) #s(costed-arc plist nil from #1611# to #1359# cost 0.497363) #s(costed-arc plist nil from #1611# to #1529# cost 0.584122) #s(costed-arc plist nil from #1611# to #1530# cost 0.320177) #s(costed-arc plist nil from #1611# to #1353# cost 0.387275) #s(costed-arc plist nil from #1611# to #1531# cost 0.466412) #s(costed-arc plist nil from #1611# to #1532# cost 0.532749) #s(costed-arc plist nil from #1611# to #1533# cost 0.673877) #s(costed-arc plist nil from #1611# to #1264# cost 0.450738) #s(costed-arc plist nil from #1611# to #1534# cost 0.479952) #s(costed-arc plist nil from #1611# to #1535# cost 0.591755) #s(costed-arc plist nil from #1611# to #1536# cost 0.690168) #s(costed-arc plist nil from #1611# to #1537# cost 0.774335)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(175.924 66.8663 54.1494 117.449 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(194.403 73.5114 58.0412 122.402 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997618 0.068987 0.0) (-0.068987 0.997618 0.0) (0.0 0.0 1.0)) pos #f(152.158 -253.903 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.991426 0.130669 0.0) (-0.130669 0.991426 0.0) (0.0 0.0 1.0)) pos #f(169.812 -239.774 0.0)) object-coords-index 11 object-coords #528# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-2-12")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1612=#s(extended-node plist ((:name . "l-2-2-13")) arc-list (#s(costed-arc plist nil from #1612# to #1521# cost 0.69168) #s(costed-arc plist nil from #1612# to #1522# cost 0.568501) #s(costed-arc plist nil from #1612# to #1523# cost 0.424293) #s(costed-arc plist nil from #1612# to #1524# cost 0.322879) #s(costed-arc plist nil from #1612# to #1525# cost 0.291884) #s(costed-arc plist nil from #1612# to #1526# cost 0.659753) #s(costed-arc plist nil from #1612# to #1527# cost 0.528894) #s(costed-arc plist nil from #1612# to #1528# cost 0.43926) #s(costed-arc plist nil from #1612# to #1359# cost 0.364297) #s(costed-arc plist nil from #1612# to #1529# cost 0.302125) #s(costed-arc plist nil from #1612# to #1530# cost 0.701275) #s(costed-arc plist nil from #1612# to #1353# cost 0.602445) #s(costed-arc plist nil from #1612# to #1531# cost 0.495065) #s(costed-arc plist nil from #1612# to #1532# cost 0.43602) #s(costed-arc plist nil from #1612# to #1533# cost 0.363008) #s(costed-arc plist nil from #1612# to #1264# cost 0.790576) #s(costed-arc plist nil from #1612# to #1534# cost 0.688759) #s(costed-arc plist nil from #1612# to #1535# cost 0.603683) #s(costed-arc plist nil from #1612# to #1536# cost 0.509759) #s(costed-arc plist nil from #1612# to #1537# cost 0.422931)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(251.898 63.9354 -20.1695 150.405 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.993617 0.112802 0.0) (-0.112802 0.993617 0.0) (0.0 0.0 1.0)) pos #f(189.03 -267.84 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #590# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1613=#s(extended-node plist ((:name . "l-2-2-14")) arc-list (#s(costed-arc plist nil from #1613# to #1521# cost 0.614926) #s(costed-arc plist nil from #1613# to #1522# cost 0.499772) #s(costed-arc plist nil from #1613# to #1523# cost 0.358931) #s(costed-arc plist nil from #1613# to #1524# cost 0.289286) #s(costed-arc plist nil from #1613# to #1525# cost 0.34613) #s(costed-arc plist nil from #1613# to #1526# cost 0.576715) #s(costed-arc plist nil from #1613# to #1527# cost 0.442556) #s(costed-arc plist nil from #1613# to #1528# cost 0.358881) #s(costed-arc plist nil from #1613# to #1359# cost 0.313321) #s(costed-arc plist nil from #1613# to #1529# cost 0.348893) #s(costed-arc plist nil from #1613# to #1530# cost 0.60582) #s(costed-arc plist nil from #1613# to #1353# cost 0.496989) #s(costed-arc plist nil from #1613# to #1531# cost 0.3857) #s(costed-arc plist nil from #1613# to #1532# cost 0.37458) #s(costed-arc plist nil from #1613# to #1533# cost 0.40969) #s(costed-arc plist nil from #1613# to #1264# cost 0.683887) #s(costed-arc plist nil from #1613# to #1534# cost 0.572162) #s(costed-arc plist nil from #1613# to #1535# cost 0.482957) #s(costed-arc plist nil from #1613# to #1536# cost 0.40845) #s(costed-arc plist nil from #1613# to #1537# cost 0.486161)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(249.803 63.3246 -0.760233 147.892 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994431 0.105388 0.0) (-0.105388 0.994431 0.0) (0.0 0.0 1.0)) pos #f(169.023 -298.63 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #621# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1614=#s(extended-node plist ((:name . "l-2-2-15")) arc-list (#s(costed-arc plist nil from #1614# to #1521# cost 0.523465) #s(costed-arc plist nil from #1614# to #1522# cost 0.412584) #s(costed-arc plist nil from #1614# to #1523# cost 0.39448) #s(costed-arc plist nil from #1614# to #1524# cost 0.434475) #s(costed-arc plist nil from #1614# to #1525# cost 0.504139) #s(costed-arc plist nil from #1614# to #1526# cost 0.523055) #s(costed-arc plist nil from #1614# to #1527# cost 0.440002) #s(costed-arc plist nil from #1614# to #1528# cost 0.399578) #s(costed-arc plist nil from #1614# to #1359# cost 0.501939) #s(costed-arc plist nil from #1614# to #1529# cost 0.555446) #s(costed-arc plist nil from #1614# to #1530# cost 0.590028) #s(costed-arc plist nil from #1614# to #1353# cost 0.543351) #s(costed-arc plist nil from #1614# to #1531# cost 0.508571) #s(costed-arc plist nil from #1614# to #1532# cost 0.494813) #s(costed-arc plist nil from #1614# to #1533# cost 0.649873) #s(costed-arc plist nil from #1614# to #1264# cost 0.711995) #s(costed-arc plist nil from #1614# to #1534# cost 0.631762) #s(costed-arc plist nil from #1614# to #1535# cost 0.633297) #s(costed-arc plist nil from #1614# to #1536# cost 0.678435) #s(costed-arc plist nil from #1614# to #1537# cost 0.743064)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(246.478 71.7104 16.8649 113.448 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99183 0.12757 0.0) (-0.12757 0.99183 0.0) (0.0 0.0 1.0)) pos #f(245.653 -320.801 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #652# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1615=#s(extended-node plist ((:name . "l-2-2-16")) arc-list (#s(costed-arc plist nil from #1615# to #1521# cost 0.376436) #s(costed-arc plist nil from #1615# to #1522# cost 0.303242) #s(costed-arc plist nil from #1615# to #1523# cost 0.334526) #s(costed-arc plist nil from #1615# to #1524# cost 0.409435) #s(costed-arc plist nil from #1615# to #1525# cost 0.501103) #s(costed-arc plist nil from #1615# to #1526# cost 0.373372) #s(costed-arc plist nil from #1615# to #1527# cost 0.33104) #s(costed-arc plist nil from #1615# to #1528# cost 0.367808) #s(costed-arc plist nil from #1615# to #1359# cost 0.49846) #s(costed-arc plist nil from #1615# to #1529# cost 0.569534) #s(costed-arc plist nil from #1615# to #1530# cost 0.452114) #s(costed-arc plist nil from #1615# to #1353# cost 0.448714) #s(costed-arc plist nil from #1615# to #1531# cost 0.48566) #s(costed-arc plist nil from #1615# to #1532# cost 0.537372) #s(costed-arc plist nil from #1615# to #1533# cost 0.678333) #s(costed-arc plist nil from #1615# to #1264# cost 0.586666) #s(costed-arc plist nil from #1615# to #1534# cost 0.544702) #s(costed-arc plist nil from #1615# to #1535# cost 0.613185) #s(costed-arc plist nil from #1615# to #1536# cost 0.699487) #s(costed-arc plist nil from #1615# to #1537# cost 0.779912)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(216.891 68.8439 34.5315 120.902 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(140.0 31.2233 23.8367 107.559 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.994328 0.106354 0.0) (-0.106354 0.994328 0.0) (0.0 0.0 1.0)) pos #f(261.544 -258.186 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.914314 -0.405006 0.0) (0.405006 0.914314 0.0) (0.0 0.0 1.0)) pos #f(271.894 -229.122 0.0)) object-coords-index 16 object-coords #683# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1616=#s(extended-node plist ((:name . "l-2-2-17")) arc-list (#s(costed-arc plist nil from #1616# to #1521# cost 0.285466) #s(costed-arc plist nil from #1616# to #1522# cost 0.298947) #s(costed-arc plist nil from #1616# to #1523# cost 0.394176) #s(costed-arc plist nil from #1616# to #1524# cost 0.485062) #s(costed-arc plist nil from #1616# to #1525# cost 0.568404) #s(costed-arc plist nil from #1616# to #1526# cost 0.308005) #s(costed-arc plist nil from #1616# to #1527# cost 0.388025) #s(costed-arc plist nil from #1616# to #1528# cost 0.484505) #s(costed-arc plist nil from #1616# to #1359# cost 0.620942) #s(costed-arc plist nil from #1616# to #1529# cost 0.688264) #s(costed-arc plist nil from #1616# to #1530# cost 0.422054) #s(costed-arc plist nil from #1616# to #1353# cost 0.528526) #s(costed-arc plist nil from #1616# to #1531# cost 0.622069) #s(costed-arc plist nil from #1616# to #1532# cost 0.691403) #s(costed-arc plist nil from #1616# to #1533# cost 0.819278) #s(costed-arc plist nil from #1616# to #1264# cost 0.580387) #s(costed-arc plist nil from #1616# to #1534# cost 0.634904) #s(costed-arc plist nil from #1616# to #1535# cost 0.75281) #s(costed-arc plist nil from #1616# to #1536# cost 0.851305) #s(costed-arc plist nil from #1616# to #1537# cost 0.931255)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(170.235 71.2336 53.1126 118.371 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(185.856 69.9195 56.1163 118.237 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.991749 0.128196 0.0) (-0.128196 0.991749 0.0) (0.0 0.0 1.0)) pos #f(314.928 -165.912 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.994156 0.107951 0.0) (-0.107951 0.994156 0.0) (0.0 0.0 1.0)) pos #f(327.608 -146.305 0.0)) object-coords-index 17 object-coords #714# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-2-18")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1617=#s(extended-node plist ((:name . "l-2-2-19")) arc-list (#s(costed-arc plist nil from #1617# to #1521# cost 0.621624) #s(costed-arc plist nil from #1617# to #1522# cost 0.518824) #s(costed-arc plist nil from #1617# to #1523# cost 0.412147) #s(costed-arc plist nil from #1617# to #1524# cost 0.319079) #s(costed-arc plist nil from #1617# to #1525# cost 0.263253) #s(costed-arc plist nil from #1617# to #1526# cost 0.646554) #s(costed-arc plist nil from #1617# to #1527# cost 0.578524) #s(costed-arc plist nil from #1617# to #1528# cost 0.524217) #s(costed-arc plist nil from #1617# to #1359# cost 0.451962) #s(costed-arc plist nil from #1617# to #1529# cost 0.371969) #s(costed-arc plist nil from #1617# to #1530# cost 0.757463) #s(costed-arc plist nil from #1617# to #1353# cost 0.704396) #s(costed-arc plist nil from #1617# to #1531# cost 0.619464) #s(costed-arc plist nil from #1617# to #1532# cost 0.562967) #s(costed-arc plist nil from #1617# to #1533# cost 0.474726) #s(costed-arc plist nil from #1617# to #1264# cost 0.882638) #s(costed-arc plist nil from #1617# to #1534# cost 0.813529) #s(costed-arc plist nil from #1617# to #1535# cost 0.740413) #s(costed-arc plist nil from #1617# to #1536# cost 0.648594) #s(costed-arc plist nil from #1617# to #1537# cost 0.559192)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(253.085 62.796 -20.049 149.353 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.985956 0.167004 0.0) (-0.167004 0.985956 0.0) (0.0 0.0 1.0)) pos #f(316.257 -148.823 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #776# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1618=#s(extended-node plist ((:name . "l-2-2-20")) arc-list (#s(costed-arc plist nil from #1618# to #1521# cost 0.54444) #s(costed-arc plist nil from #1618# to #1522# cost 0.448188) #s(costed-arc plist nil from #1618# to #1523# cost 0.337929) #s(costed-arc plist nil from #1618# to #1524# cost 0.275602) #s(costed-arc plist nil from #1618# to #1525# cost 0.31462) #s(costed-arc plist nil from #1618# to #1526# cost 0.556847) #s(costed-arc plist nil from #1618# to #1527# cost 0.479901) #s(costed-arc plist nil from #1618# to #1528# cost 0.433092) #s(costed-arc plist nil from #1618# to #1359# cost 0.394504) #s(costed-arc plist nil from #1618# to #1529# cost 0.412642) #s(costed-arc plist nil from #1618# to #1530# cost 0.653726) #s(costed-arc plist nil from #1618# to #1353# cost 0.593181) #s(costed-arc plist nil from #1618# to #1531# cost 0.507145) #s(costed-arc plist nil from #1618# to #1532# cost 0.503569) #s(costed-arc plist nil from #1618# to #1533# cost 0.522059) #s(costed-arc plist nil from #1618# to #1264# cost 0.770363) #s(costed-arc plist nil from #1618# to #1534# cost 0.694183) #s(costed-arc plist nil from #1618# to #1535# cost 0.618426) #s(costed-arc plist nil from #1618# to #1536# cost 0.546454) #s(costed-arc plist nil from #1618# to #1537# cost 0.618939)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(251.213 63.3726 -0.589016 148.294 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.988373 0.152046 0.0) (-0.152046 0.988373 0.0) (0.0 0.0 1.0)) pos #f(308.619 -186.32 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #807# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1619=#s(extended-node plist ((:name . "l-2-2-21")) arc-list (#s(costed-arc plist nil from #1619# to #1521# cost 0.434939) #s(costed-arc plist nil from #1619# to #1522# cost 0.349016) #s(costed-arc plist nil from #1619# to #1523# cost 0.27478) #s(costed-arc plist nil from #1619# to #1524# cost 0.305519) #s(costed-arc plist nil from #1619# to #1525# cost 0.386376) #s(costed-arc plist nil from #1619# to #1526# cost 0.450882) #s(costed-arc plist nil from #1619# to #1527# cost 0.384876) #s(costed-arc plist nil from #1619# to #1528# cost 0.370151) #s(costed-arc plist nil from #1619# to #1359# cost 0.436429) #s(costed-arc plist nil from #1619# to #1529# cost 0.499147) #s(costed-arc plist nil from #1619# to #1530# cost 0.5542) #s(costed-arc plist nil from #1619# to #1353# cost 0.503232) #s(costed-arc plist nil from #1619# to #1531# cost 0.44673) #s(costed-arc plist nil from #1619# to #1532# cost 0.526649) #s(costed-arc plist nil from #1619# to #1533# cost 0.6235) #s(costed-arc plist nil from #1619# to #1264# cost 0.680767) #s(costed-arc plist nil from #1619# to #1534# cost 0.606452) #s(costed-arc plist nil from #1619# to #1535# cost 0.566805) #s(costed-arc plist nil from #1619# to #1536# cost 0.650721) #s(costed-arc plist nil from #1619# to #1537# cost 0.732853)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(242.548 62.9765 17.4619 139.265 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.987221 0.15936 0.0) (-0.15936 0.987221 0.0) (0.0 0.0 1.0)) pos #f(312.8 -170.247 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #838# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1620=#s(extended-node plist ((:name . "l-2-2-22")) arc-list (#s(costed-arc plist nil from #1620# to #1521# cost 0.598506) #s(costed-arc plist nil from #1620# to #1522# cost 0.512149) #s(costed-arc plist nil from #1620# to #1523# cost 0.560995) #s(costed-arc plist nil from #1620# to #1524# cost 0.622792) #s(costed-arc plist nil from #1620# to #1525# cost 0.681346) #s(costed-arc plist nil from #1620# to #1526# cost 0.617326) #s(costed-arc plist nil from #1620# to #1527# cost 0.616475) #s(costed-arc plist nil from #1620# to #1528# cost 0.642447) #s(costed-arc plist nil from #1620# to #1359# cost 0.763983) #s(costed-arc plist nil from #1620# to #1529# cost 0.803958) #s(costed-arc plist nil from #1620# to #1530# cost 0.736348) #s(costed-arc plist nil from #1620# to #1353# cost 0.77477) #s(costed-arc plist nil from #1620# to #1531# cost 0.802627) #s(costed-arc plist nil from #1620# to #1532# cost 0.807373) #s(costed-arc plist nil from #1620# to #1533# cost 0.944321) #s(costed-arc plist nil from #1620# to #1264# cost 0.900593) #s(costed-arc plist nil from #1620# to #1534# cost 0.891963) #s(costed-arc plist nil from #1620# to #1535# cost 0.945177) #s(costed-arc plist nil from #1620# to #1536# cost 1.00619) #s(costed-arc plist nil from #1620# to #1537# cost 1.06326)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(169.025 76.9227 27.2428 101.769 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(89.5245 41.7848 17.0133 95.3723 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.909995 0.41462 0.0) (-0.41462 0.909995 0.0) (0.0 0.0 1.0)) pos #f(271.535 -143.356 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.995395 -0.095857 0.0) (0.095857 0.995395 0.0) (0.0 0.0 1.0)) pos #f(311.273 -128.494 0.0)) object-coords-index 22 object-coords #869# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1621=#s(extended-node plist ((:name . "l-2-2-23")) arc-list (#s(costed-arc plist nil from #1621# to #1521# cost 1.17816) #s(costed-arc plist nil from #1621# to #1522# cost 1.13327) #s(costed-arc plist nil from #1621# to #1523# cost 1.17656) #s(costed-arc plist nil from #1621# to #1524# cost 1.22316) #s(costed-arc plist nil from #1621# to #1525# cost 1.25859) #s(costed-arc plist nil from #1621# to #1526# cost 1.18195) #s(costed-arc plist nil from #1621# to #1527# cost 1.23242) #s(costed-arc plist nil from #1621# to #1528# cost 1.28244) #s(costed-arc plist nil from #1621# to #1359# cost 1.37648) #s(costed-arc plist nil from #1621# to #1529# cost 1.39779) #s(costed-arc plist nil from #1621# to #1530# cost 1.30104) #s(costed-arc plist nil from #1621# to #1353# cost 1.3773) #s(costed-arc plist nil from #1621# to #1531# cost 1.41445) #s(costed-arc plist nil from #1621# to #1532# cost 1.43393) #s(costed-arc plist nil from #1621# to #1533# cost 1.53087) #s(costed-arc plist nil from #1621# to #1264# cost 1.4381) #s(costed-arc plist nil from #1621# to #1534# cost 1.47211) #s(costed-arc plist nil from #1621# to #1535# cost 1.53568) #s(costed-arc plist nil from #1621# to #1536# cost 1.58898) #s(costed-arc plist nil from #1621# to #1537# cost 1.63142)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(71.9386 122.349 36.8071 107.553 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(56.4928 84.9309 34.5003 104.432 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.496118 0.868255 0.0) (-0.868255 0.496118 0.0) (0.0 0.0 1.0)) pos #f(268.434 -99.0409 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.863778 0.503872 0.0) (-0.503872 0.863778 0.0) (0.0 0.0 1.0)) pos #f(293.107 -118.702 0.0)) object-coords-index 23 object-coords #900# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #s(extended-node plist ((:name . "l-2-3-0")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1537# #1536# #1535# #1534# #1264# #s(extended-node plist ((:name . "l-2-3-6")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1533# #1532# #1531# #1353# #1530# #s(extended-node plist ((:name . "l-2-3-12")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1529# #1359# #1528# #1527# #1526# #s(extended-node plist ((:name . "l-2-3-18")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1525# #1524# #1523# #1522# #1521# #s(extended-node plist ((:name . "l-2-4-0")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 0 object-coords #187# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1351# #1182# #1188# #984# #1080# #s(extended-node plist ((:name . "l-2-4-6")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 6 object-coords #373# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1350# #1349# #1348# #1117# #1347# #s(extended-node plist ((:name . "l-2-4-12")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 12 object-coords #559# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1346# #1345# #1344# #1343# #1342# #s(extended-node plist ((:name . "l-2-4-18")) arc-list nil arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index 18 object-coords #745# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #1341# #1340# #1339# #1338# #1337#))
(setq *bridge-nodes* '(#1=#s(extended-node plist ((:name . "r-2-1-10<->-l-1-1-5")) arc-list (#s(costed-arc plist nil from #1# to #2=#s(extended-node plist ((:name . #1458="l-1-1-5")) arc-list (#s(costed-arc plist nil from #2# to #3=#s(extended-node plist ((:name . "r-2-1-9<->-l-1-1-5")) arc-list (#s(costed-arc plist nil from #3# to #2# cost 0) #s(costed-arc plist nil from #3# to #4=#s(extended-node plist ((:name . #1457="r-2-1-9")) arc-list (#s(costed-arc plist nil from #4# to #3# cost 0) #s(costed-arc plist nil from #4# to #5=#s(extended-node plist ((:name . #1425="r-2-2-21")) arc-list (#s(costed-arc plist nil from #5# to #6=#s(extended-node plist ((:name . "r-2-2-21<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #6# to #7=#s(extended-node plist ((:name . #16="l-1-2-5")) arc-list (#s(costed-arc plist nil from #7# to #8=#s(extended-node plist ((:name . "r-2-2-7<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #8# to #7# cost 0) #s(costed-arc plist nil from #8# to #9=#s(extended-node plist ((:name . #1421="r-2-2-7")) arc-list (#s(costed-arc plist nil from #9# to #10=#s(extended-node plist ((:name . "r-2-2-7<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #10# to #11=#s(extended-node plist ((:name . #1409="l-1-2-4")) arc-list (#s(costed-arc plist nil from #11# to #10# cost 0) #s(costed-arc plist nil from #11# to #12=#s(extended-node plist ((:name . "r-2-2-13<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #12# to #11# cost 0) #s(costed-arc plist nil from #12# to #13=#s(extended-node plist ((:name . #15="r-2-2-13")) arc-list (#s(costed-arc plist nil from #13# to #12# cost 0) #s(costed-arc plist nil from #13# to #14=#s(extended-node plist ((:name . "r-2-2-13<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #14# to #7# cost 0) #s(costed-arc plist nil from #14# to #13# cost 0)) arm :arms islands (#15# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(262.651 17.0484 52.6399 120.818 -45.2061 36.5576 -30.0 180.0 2.97665 -18.6711 -146.474 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #13# to #17=#s(extended-node plist ((:name . #1335="r-2-3-22")) arc-list (#s(costed-arc plist nil from #17# to #18=#s(extended-node plist ((:name . "r-2-3-22<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #18# to #19=#s(extended-node plist ((:name . #1247="l-0-3-4")) arc-list (#s(costed-arc plist nil from #19# to #20=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #20# to #19# cost 0) #s(costed-arc plist nil from #20# to #21=#s(extended-node plist ((:name . #29="r-0-3-3")) arc-list (#s(costed-arc plist nil from #21# to #22=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #22# to #23=#s(extended-node plist ((:name . #35="l-0-3-0")) arc-list (#s(costed-arc plist nil from #23# to #22# cost 0) #s(costed-arc plist nil from #23# to #24=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #24# to #23# cost 0) #s(costed-arc plist nil from #24# to #25=#s(extended-node plist ((:name . #41="r-0-3-4")) arc-list (#s(costed-arc plist nil from #25# to #24# cost 0) #s(costed-arc plist nil from #25# to #26=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #26# to #27=#s(extended-node plist ((:name . #30="l-0-3-1")) arc-list (#s(costed-arc plist nil from #27# to #28=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #28# to #27# cost 0) #s(costed-arc plist nil from #28# to #21# cost 0)) arm :arms islands (#29# #30#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(164.861 -19.6342 14.895 29.3169 -82.742 -101.71 -65.0838 199.917 -33.9772 38.0854 -64.1868 -86.5054 -12.2115 -39.9011 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #27# to #26# cost 0) #s(costed-arc plist nil from #27# to #31=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-1")) arc-list (#s(costed-arc plist nil from #31# to #27# cost 0) #s(costed-arc plist nil from #31# to #32=#s(extended-node plist ((:name . #34="r-0-3-5")) arc-list (#s(costed-arc plist nil from #32# to #33=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-0")) arc-list (#s(costed-arc plist nil from #33# to #23# cost 0) #s(costed-arc plist nil from #33# to #32# cost 0)) arm :arms islands (#34# #35#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(126.076 -15.1359 -3.35762 7.7412 -82.5431 179.949 -32.8009 339.803 -35.5361 49.7625 -84.123 -69.7691 -21.5633 -40.6165 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #32# to #31# cost 0) #s(costed-arc plist nil from #32# to #36=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #36# to #37=#s(extended-node plist ((:name . #39="l-0-3-2")) arc-list (#s(costed-arc plist nil from #37# to #38=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #38# to #37# cost 0) #s(costed-arc plist nil from #38# to #21# cost 0)) arm :arms islands (#29# #39#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(162.878 -20.5096 32.5914 30.2756 -90.2425 -98.6118 -73.0077 199.917 -33.9201 38.0267 -64.0159 -86.6537 -12.1818 -39.6917 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #37# to #40=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-2")) arc-list (#s(costed-arc plist nil from #40# to #37# cost 0) #s(costed-arc plist nil from #40# to #25# cost 0)) arm :arms islands (#41# #39#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(175.318 -20.2169 34.1003 28.467 -83.8226 -84.6852 -71.6394 194.347 -36.4466 44.9871 -76.1554 -75.5776 -15.7279 -40.3684 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #37# to #36# cost 0) #s(costed-arc plist nil from #37# to #42=#s(extended-node plist ((:name . "l-0-4-rk")) arc-list (#s(costed-arc plist nil from #42# to #980=#s(extended-node plist ((:name . "goal")) arc-list nil arm nil islands nil contact-point-index nil contact-point nil contact-type nil graph-depth nil door-angle nil solved nil robot-pose nil robot-pose-optimized nil base-coords nil base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(239.642 53.4413 54.5777 1.19068 -121.537 -152.957 -69.4648 259.036 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(239.686 27.7765 46.6293 13.7959 -102.887 -146.987 -64.7126 243.739 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999346 -0.036167 0.0) (0.036167 0.999346 0.0) (0.0 0.0 1.0)) pos #f(-195.795 -38.4558 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.847375 -0.530994 0.0) (0.530994 0.847375 0.0) (0.0 0.0 1.0)) pos #f(-181.571 -45.933 0.0)) object-coords-index rk object-coords #185=#s(cascaded-coords plist ((:name . "rear-knob-coords")) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #47=#s(bodyset-link plist ((:pqpmodel . 113717632) (:name . rear-knob) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(125.0 0.0 0.0) parent #46=#s(bodyset-link plist ((:pqpmodel . 113603696) (:name . front-knob) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(-37.5 -700.0 1000.0) parent #45=#s(bodyset-link plist ((:pqpmodel . 106584976) (:name . door-plate) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0) parent #43=#s(bodyset-link plist ((:pqpmodel . 114135392) (:name . door-hinge) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 0.0 0.0) parent #44=#s(door plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0) parent nil descendants (#43#) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0)) manager #44# changed nil links (#43# #45# #46# #47# #48=#s(bodyset-link plist ((:pqpmodel . 106584608) (:name . wall) (:i-til . #2f((0.0 0.0 0.0) (0.0 0.0 0.0) (0.0 0.0 0.0))) (:c-til . #f(0.0 0.0 0.0)) (:m-til . 0)) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0) parent #43# descendants (#49=#s(body plist ((:face-color . #f(0.742188 0.742188 0.742188 0.8)) (:gl-displaylist-id (106107744 . 72)) (:volume . 7.950000e+07) (:centroid . #f(0.0 -1.464344e-16 -1.862645e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(25.0 -1192.5 1000.0) parent #48# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(725.0 -517.5 1000.0)) manager #49# changed nil box #s(bounding-box geometry::minpoint #f(699.6 -921.36 -16.0) geometry::maxpoint #f(750.4 -113.64 2016.0)) faces (#55=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 0.0 convexp t edges (#70=#s(edge plist nil pvert #50=#f(750.0 -120.0 0.0) nvert #51=#f(700.0 -120.0 0.0) pface #53=#s(face plist nil normal #f(0.0 1.0 0.0) distance 120.0 convexp t edges (#68=#s(edge plist nil pvert #50# nvert #59=#f(750.0 -120.0 2000.0) pface #64=#s(face plist nil normal #f(1.0 0.0 0.0) distance -750.0 convexp t edges (#66=#s(edge plist nil pvert #65=#f(750.0 -915.0 0.0) nvert #62=#f(750.0 -915.0 2000.0) pface #63=#s(face plist nil normal #f(0.0 -1.0 0.0) distance -915.0 convexp t edges (#56=#s(edge plist nil pvert #54=#f(700.0 -915.0 0.0) nvert #58=#f(700.0 -915.0 2000.0) pface #52=#s(face plist nil normal #f(-1.0 0.0 0.0) distance 700.0 convexp t edges (#71=#s(edge plist nil pvert #57=#f(700.0 -120.0 2000.0) nvert #51# pface #52# nface #53# angle 1.5708 flags 0) #75=#s(edge plist nil pvert #51# nvert #54# pface #52# nface #55# angle 1.5708 flags 0) #56# #61=#s(edge plist nil pvert #57# nvert #58# pface #60=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#72=#s(edge plist nil pvert #59# nvert #57# pface #60# nface #53# angle 1.5708 flags 0) #61# #67=#s(edge plist nil pvert #58# nvert #62# pface #60# nface #63# angle 1.5708 flags 0) #69=#s(edge plist nil pvert #62# nvert #59# pface #60# nface #64# angle 1.5708 flags 0)) vertices (#59# #57# #58# #62# #59#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #49# primitive-face #60# id (:top)) nface #52# angle 1.5708 flags 0)) vertices (#57# #51# #54# #58# #57#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #49# primitive-face #52# id (:side 0 :-x)) nface #63# angle 1.5708 flags 0) #74=#s(edge plist nil pvert #54# nvert #65# pface #63# nface #55# angle 1.5708 flags 0) #66# #67#) vertices (#58# #54# #65# #62# #58#) model-normal #f(0.0 -1.0 0.0) model-distance -397.5 holes nil mbody #49# primitive-face #63# id (:side 1 :-y)) nface #64# angle 1.5708 flags 0) #73=#s(edge plist nil pvert #65# nvert #50# pface #64# nface #55# angle 1.5708 flags 0) #68# #69#) vertices (#62# #65# #50# #59# #62#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #49# primitive-face #64# id (:side 2 :x)) nface #53# angle 1.5708 flags 0) #70# #71# #72#) vertices (#59# #50# #51# #57# #59#) model-normal #f(0.0 1.0 0.0) model-distance -397.5 holes nil mbody #49# primitive-face #53# id (:side 3 :y)) nface #55# angle 1.5708 flags 0) #73# #74# #75#) vertices (#51# #50# #65# #54# #51#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #49# primitive-face #55# id (:bottom)) #60# #53# #64# #63# #52#) edges (#70# #72# #73# #68# #69# #74# #66# #67# #71# #75# #56# #61#) vertices (#50# #59# #65# #62# #51# #54# #58# #57#) model-vertices (#f(25.0 397.5 -1000.0) #f(25.0 397.5 1000.0) #f(25.0 -397.5 -1000.0) #f(25.0 -397.5 1000.0) #f(-25.0 397.5 -1000.0) #f(-25.0 -397.5 -1000.0) #f(-25.0 -397.5 1000.0) #f(-25.0 397.5 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 795.0 2000.0)))) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 675.0 0.0)) manager #48# changed nil geometry::bodies (#49#) joint nil parent-link nil child-links nil analysis-level :body default-coords nil weight 1 acentroid #968=#f(0.0 0.0 0.0) inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0))) joint-list (#198=#s(rotational-joint plist ((:name . j1)) parent-link #43# child-link #45# joint-angle -20 min-angle -100 max-angle 100 default-coords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 -25.0 0.0)) joint-velocity 0.0 joint-acceleration 0.0 joint-torque 0.0 max-joint-velocity 5 max-joint-torque 100 joint-min-max-table nil joint-min-max-target nil axis :z) #199=#s(rotational-joint plist ((:name . j1)) parent-link #45# child-link #46# joint-angle 0.0 min-angle -60 max-angle 0 default-coords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(-37.5 -700.0 1000.0)) joint-velocity 0.0 joint-acceleration 0.0 joint-torque 0.0 max-joint-velocity 5 max-joint-torque 100 joint-min-max-table nil joint-min-max-target nil axis :x)) bodies (#76=#s(body plist ((:face-color . #f(0.742188 0.742188 0.742188)) (:gl-displaylist-id (106107744 . 68)) (:volume . 5.000000e+06) (:centroid . #f(0.0 -2.182787e-16 -3.725290e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 0.0 1000.0) parent #43# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 1000.0)) manager #76# changed nil box #s(bounding-box geometry::minpoint #f(674.6 674.6 -16.0) geometry::maxpoint #f(725.4 725.4 2016.0)) faces (#82=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 0.0 convexp t edges (#97=#s(edge plist nil pvert #77=#f(725.0 725.0 0.0) nvert #78=#f(675.0 725.0 0.0) pface #80=#s(face plist nil normal #f(0.0 1.0 0.0) distance -725.0 convexp t edges (#95=#s(edge plist nil pvert #77# nvert #86=#f(725.0 725.0 2000.0) pface #91=#s(face plist nil normal #f(1.0 0.0 0.0) distance -725.0 convexp t edges (#93=#s(edge plist nil pvert #92=#f(725.0 675.0 0.0) nvert #89=#f(725.0 675.0 2000.0) pface #90=#s(face plist nil normal #f(0.0 -1.0 0.0) distance 675.0 convexp t edges (#83=#s(edge plist nil pvert #81=#f(675.0 675.0 0.0) nvert #85=#f(675.0 675.0 2000.0) pface #79=#s(face plist nil normal #f(-1.0 0.0 0.0) distance 675.0 convexp t edges (#98=#s(edge plist nil pvert #84=#f(675.0 725.0 2000.0) nvert #78# pface #79# nface #80# angle 1.5708 flags 0) #102=#s(edge plist nil pvert #78# nvert #81# pface #79# nface #82# angle 1.5708 flags 0) #83# #88=#s(edge plist nil pvert #84# nvert #85# pface #87=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#99=#s(edge plist nil pvert #86# nvert #84# pface #87# nface #80# angle 1.5708 flags 0) #88# #94=#s(edge plist nil pvert #85# nvert #89# pface #87# nface #90# angle 1.5708 flags 0) #96=#s(edge plist nil pvert #89# nvert #86# pface #87# nface #91# angle 1.5708 flags 0)) vertices (#86# #84# #85# #89# #86#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #76# primitive-face #87# id (:top)) nface #79# angle 1.5708 flags 0)) vertices (#84# #78# #81# #85# #84#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #76# primitive-face #79# id (:side 0 :-x)) nface #90# angle 1.5708 flags 0) #101=#s(edge plist nil pvert #81# nvert #92# pface #90# nface #82# angle 1.5708 flags 0) #93# #94#) vertices (#85# #81# #92# #89# #85#) model-normal #f(0.0 -1.0 0.0) model-distance -25.0 holes nil mbody #76# primitive-face #90# id (:side 1 :-y)) nface #91# angle 1.5708 flags 0) #100=#s(edge plist nil pvert #92# nvert #77# pface #91# nface #82# angle 1.5708 flags 0) #95# #96#) vertices (#89# #92# #77# #86# #89#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #76# primitive-face #91# id (:side 2 :x)) nface #80# angle 1.5708 flags 0) #97# #98# #99#) vertices (#86# #77# #78# #84# #86#) model-normal #f(0.0 1.0 0.0) model-distance -25.0 holes nil mbody #76# primitive-face #80# id (:side 3 :y)) nface #82# angle 1.5708 flags 0) #100# #101# #102#) vertices (#78# #77# #92# #81# #78#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #76# primitive-face #82# id (:bottom)) #87# #80# #91# #90# #79#) edges (#97# #99# #100# #95# #96# #101# #93# #94# #98# #102# #83# #88#) vertices (#77# #86# #92# #89# #78# #81# #85# #84#) model-vertices (#f(25.0 25.0 -1000.0) #f(25.0 25.0 1000.0) #f(25.0 -25.0 -1000.0) #f(25.0 -25.0 1000.0) #f(-25.0 25.0 -1000.0) #f(-25.0 -25.0 -1000.0) #f(-25.0 -25.0 1000.0) #f(-25.0 25.0 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 50.0 2000.0))) #103=#s(body plist ((:face-color . #f(0.996094 0.996094 0.0 0.8)) (:gl-displaylist-id (106107744 . 69)) (:volume . 7.950000e+07) (:centroid . #f(0.0 -1.464344e-16 -1.862645e-14))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(25.0 -397.5 1000.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(587.539 292.922 1000.0)) manager #103# changed nil box #s(bounding-box geometry::minpoint #f(425.543 -95.2699 -16.0) geometry::maxpoint #f(749.536 681.113 2016.0)) faces (#109=#s(face plist nil normal #f(0.0 0.0 -1.0) distance -2.273737e-13 convexp t edges (#124=#s(edge plist nil pvert #104=#f(746.985 657.899 -2.273737e-13) nvert #105=#f(700.0 675.0 -2.273737e-13) pface #107=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -873.707 convexp t edges (#122=#s(edge plist nil pvert #104# nvert #113=#f(746.985 657.899 2000.0) pface #118=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -476.921 convexp t edges (#120=#s(edge plist nil pvert #119=#f(475.079 -89.1566 -2.273737e-13) nvert #116=#f(475.079 -89.1566 2000.0) pface #117=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 78.7066 convexp t edges (#110=#s(edge plist nil pvert #108=#f(428.094 -72.0556 -2.273737e-13) nvert #112=#f(428.094 -72.0556 2000.0) pface #106=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 426.921 convexp t edges (#125=#s(edge plist nil pvert #111=#f(700.0 675.0 2000.0) nvert #105# pface #106# nface #107# angle 1.5708 flags 0) #129=#s(edge plist nil pvert #105# nvert #108# pface #106# nface #109# angle 1.5708 flags 0) #110# #115=#s(edge plist nil pvert #111# nvert #112# pface #114=#s(face plist nil normal #f(0.0 0.0 1.0) distance -2000.0 convexp t edges (#126=#s(edge plist nil pvert #113# nvert #111# pface #114# nface #107# angle 1.5708 flags 0) #115# #121=#s(edge plist nil pvert #112# nvert #116# pface #114# nface #117# angle 1.5708 flags 0) #123=#s(edge plist nil pvert #116# nvert #113# pface #114# nface #118# angle 1.5708 flags 0)) vertices (#113# #111# #112# #116# #113#) model-normal #f(0.0 0.0 1.0) model-distance -1000.0 holes nil mbody #103# primitive-face #114# id (:top)) nface #106# angle 1.5708 flags 0)) vertices (#111# #105# #108# #112# #111#) model-normal #f(-1.0 0.0 0.0) model-distance -25.0 holes nil mbody #103# primitive-face #106# id (:side 0 :-x)) nface #117# angle 1.5708 flags 0) #128=#s(edge plist nil pvert #108# nvert #119# pface #117# nface #109# angle 1.5708 flags 0) #120# #121#) vertices (#112# #108# #119# #116# #112#) model-normal #f(0.0 -1.0 0.0) model-distance -397.5 holes nil mbody #103# primitive-face #117# id (:side 1 :-y)) nface #118# angle 1.5708 flags 0) #127=#s(edge plist nil pvert #119# nvert #104# pface #118# nface #109# angle 1.5708 flags 0) #122# #123#) vertices (#116# #119# #104# #113# #116#) model-normal #f(1.0 0.0 0.0) model-distance -25.0 holes nil mbody #103# primitive-face #118# id (:side 2 :x)) nface #107# angle 1.5708 flags 0) #124# #125# #126#) vertices (#113# #104# #105# #111# #113#) model-normal #f(0.0 1.0 0.0) model-distance -397.5 holes nil mbody #103# primitive-face #107# id (:side 3 :y)) nface #109# angle 1.5708 flags 0) #127# #128# #129#) vertices (#105# #104# #119# #108# #105#) model-normal #f(0.0 0.0 -1.0) model-distance -1000.0 holes nil mbody #103# primitive-face #109# id (:bottom)) #114# #107# #118# #117# #106#) edges (#124# #126# #127# #122# #123# #128# #120# #121# #125# #129# #110# #115#) vertices (#104# #113# #119# #116# #105# #108# #112# #111#) model-vertices (#f(25.0 397.5 -1000.0) #f(25.0 397.5 1000.0) #f(25.0 -397.5 -1000.0) #f(25.0 -397.5 1000.0) #f(-25.0 397.5 -1000.0) #f(-25.0 -397.5 -1000.0) #f(-25.0 -397.5 1000.0) #f(-25.0 397.5 1000.0)) convexp t geometry::evertedp nil csg ((:cube 50.0 795.0 2000.0))) #130=#s(body plist ((:face-color . #157=#f(0.996094 0.0 0.0)) (:gl-displaylist-id (106107744 . 70)) (:volume . 75000.0) (:centroid . #f(0.0 -2.728484e-16 -1.818989e-16))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #46# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(442.448 77.0256 1000.0)) manager #130# changed nil box #s(bounding-box geometry::minpoint #f(410.753 24.0768 987.3) geometry::maxpoint #f(474.144 129.974 1012.7)) faces (#136=#s(face plist nil normal #f(2.425319e-15 0.0 -1.0) distance 987.5 convexp t edges (#151=#s(edge plist nil pvert #131=#f(473.645 118.88 987.5) nvert #132=#f(445.454 129.14 987.5) pface #134=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -273.707 convexp t edges (#149=#s(edge plist nil pvert #131# nvert #140=#f(473.645 118.88 1012.5) pface #145=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -404.421 convexp t edges (#147=#s(edge plist nil pvert #146=#f(439.443 24.9106 987.5) nvert #143=#f(439.443 24.9106 1012.5) pface #144=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 173.707 convexp t edges (#137=#s(edge plist nil pvert #135=#f(411.252 35.1712 987.5) nvert #139=#f(411.252 35.1712 1012.5) pface #133=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 374.421 convexp t edges (#152=#s(edge plist nil pvert #138=#f(445.454 129.14 1012.5) nvert #132# pface #133# nface #134# angle 1.5708 flags 0) #156=#s(edge plist nil pvert #132# nvert #135# pface #133# nface #136# angle 1.5708 flags 0) #137# #142=#s(edge plist nil pvert #138# nvert #139# pface #141=#s(face plist nil normal #f(0.0 0.0 1.0) distance -1012.5 convexp t edges (#153=#s(edge plist nil pvert #140# nvert #138# pface #141# nface #134# angle 1.5708 flags 0) #142# #148=#s(edge plist nil pvert #139# nvert #143# pface #141# nface #144# angle 1.5708 flags 0) #150=#s(edge plist nil pvert #143# nvert #140# pface #141# nface #145# angle 1.5708 flags 0)) vertices (#140# #138# #139# #143# #140#) model-normal #f(0.0 0.0 1.0) model-distance -12.5 holes nil mbody #130# primitive-face #141# id (:top)) nface #133# angle 1.5708 flags 0)) vertices (#138# #132# #135# #139# #138#) model-normal #f(-1.0 0.0 0.0) model-distance -15.0 holes nil mbody #130# primitive-face #133# id (:side 0 :-x)) nface #144# angle 1.5708 flags 0) #155=#s(edge plist nil pvert #135# nvert #146# pface #144# nface #136# angle 1.5708 flags 0) #147# #148#) vertices (#139# #135# #146# #143# #139#) model-normal #f(0.0 -1.0 0.0) model-distance -50.0 holes nil mbody #130# primitive-face #144# id (:side 1 :-y)) nface #145# angle 1.5708 flags 0) #154=#s(edge plist nil pvert #146# nvert #131# pface #145# nface #136# angle 1.5708 flags 0) #149# #150#) vertices (#143# #146# #131# #140# #143#) model-normal #f(1.0 0.0 0.0) model-distance -15.0 holes nil mbody #130# primitive-face #145# id (:side 2 :x)) nface #134# angle 1.5708 flags 0) #151# #152# #153#) vertices (#140# #131# #132# #138# #140#) model-normal #f(0.0 1.0 0.0) model-distance -50.0 holes nil mbody #130# primitive-face #134# id (:side 3 :y)) nface #136# angle 1.5708 flags 0) #154# #155# #156#) vertices (#132# #131# #146# #135# #132#) model-normal #f(0.0 0.0 -1.0) model-distance -12.5 holes nil mbody #130# primitive-face #136# id (:bottom)) #141# #134# #145# #144# #133#) edges (#151# #153# #154# #149# #150# #155# #147# #148# #152# #156# #137# #142#) vertices (#131# #140# #146# #143# #132# #135# #139# #138#) model-vertices (#f(15.0 50.0 -12.5) #f(15.0 50.0 12.5) #f(15.0 -50.0 -12.5) #f(15.0 -50.0 12.5) #f(-15.0 50.0 -12.5) #f(-15.0 -50.0 -12.5) #f(-15.0 -50.0 12.5) #f(-15.0 50.0 12.5)) convexp t geometry::evertedp nil csg ((:cube 30.0 100.0 25.0))) #158=#s(body plist ((:face-color . #157#) (:gl-displaylist-id (106107744 . 71)) (:volume . 75000.0) (:centroid . #f(0.0 -2.728484e-16 -1.818989e-16))) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #47# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(559.91 34.273 1000.0)) manager #158# changed nil box #s(bounding-box geometry::minpoint #f(528.214 -18.6757 987.3) geometry::maxpoint #f(591.606 87.2218 1012.7)) faces (#164=#s(face plist nil normal #f(0.0 0.0 -1.0) distance 987.5 convexp t edges (#179=#s(edge plist nil pvert #159=#f(591.106 76.1274 987.5) nvert #160=#f(562.916 86.388 987.5) pface #162=#s(face plist nil normal #f(0.34202 0.939693 0.0) distance -273.707 convexp t edges (#177=#s(edge plist nil pvert #159# nvert #168=#f(591.106 76.1274 1012.5) pface #173=#s(face plist nil normal #f(0.939693 -0.34202 0.0) distance -529.421 convexp t edges (#175=#s(edge plist nil pvert #174=#f(556.904 -17.8419 987.5) nvert #171=#f(556.904 -17.8419 1012.5) pface #172=#s(face plist nil normal #f(-0.34202 -0.939693 0.0) distance 173.707 convexp t edges (#165=#s(edge plist nil pvert #163=#f(528.714 -7.58129 987.5) nvert #167=#f(528.714 -7.58129 1012.5) pface #161=#s(face plist nil normal #f(-0.939693 0.34202 0.0) distance 499.421 convexp t edges (#180=#s(edge plist nil pvert #166=#f(562.916 86.388 1012.5) nvert #160# pface #161# nface #162# angle 1.5708 flags 0) #184=#s(edge plist nil pvert #160# nvert #163# pface #161# nface #164# angle 1.5708 flags 0) #165# #170=#s(edge plist nil pvert #166# nvert #167# pface #169=#s(face plist nil normal #f(2.425319e-15 0.0 1.0) distance -1012.5 convexp t edges (#181=#s(edge plist nil pvert #168# nvert #166# pface #169# nface #162# angle 1.5708 flags 0) #170# #176=#s(edge plist nil pvert #167# nvert #171# pface #169# nface #172# angle 1.5708 flags 0) #178=#s(edge plist nil pvert #171# nvert #168# pface #169# nface #173# angle 1.5708 flags 0)) vertices (#168# #166# #167# #171# #168#) model-normal #f(0.0 0.0 1.0) model-distance -12.5 holes nil mbody #158# primitive-face #169# id (:top)) nface #161# angle 1.5708 flags 0)) vertices (#166# #160# #163# #167# #166#) model-normal #f(-1.0 0.0 0.0) model-distance -15.0 holes nil mbody #158# primitive-face #161# id (:side 0 :-x)) nface #172# angle 1.5708 flags 0) #183=#s(edge plist nil pvert #163# nvert #174# pface #172# nface #164# angle 1.5708 flags 0) #175# #176#) vertices (#167# #163# #174# #171# #167#) model-normal #f(0.0 -1.0 0.0) model-distance -50.0 holes nil mbody #158# primitive-face #172# id (:side 1 :-y)) nface #173# angle 1.5708 flags 0) #182=#s(edge plist nil pvert #174# nvert #159# pface #173# nface #164# angle 1.5708 flags 0) #177# #178#) vertices (#171# #174# #159# #168# #171#) model-normal #f(1.0 0.0 0.0) model-distance -15.0 holes nil mbody #158# primitive-face #173# id (:side 2 :x)) nface #162# angle 1.5708 flags 0) #179# #180# #181#) vertices (#168# #159# #160# #166# #168#) model-normal #f(0.0 1.0 0.0) model-distance -50.0 holes nil mbody #158# primitive-face #162# id (:side 3 :y)) nface #164# angle 1.5708 flags 0) #182# #183# #184#) vertices (#160# #159# #174# #163# #160#) model-normal #f(0.0 0.0 -1.0) model-distance -12.5 holes nil mbody #158# primitive-face #164# id (:bottom)) #169# #162# #173# #172# #161#) edges (#179# #181# #182# #177# #178# #183# #175# #176# #180# #184# #165# #170#) vertices (#159# #168# #174# #171# #160# #163# #167# #166#) model-vertices (#f(15.0 50.0 -12.5) #f(15.0 50.0 12.5) #f(15.0 -50.0 -12.5) #f(15.0 -50.0 12.5) #f(-15.0 50.0 -12.5) #f(-15.0 -50.0 -12.5) #f(-15.0 -50.0 12.5) #f(-15.0 50.0 12.5)) convexp t geometry::evertedp nil csg ((:cube 30.0 100.0 25.0))) #49#) collision-avoidance-links nil end-coords-list nil rear-knob-coords #185# front-knob-coords #186=#s(cascaded-coords plist ((:name . "front-knob-coords")) rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #46# descendants (#187=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 -0.984808) (-0.984808 -5.551115e-17 0.173648) (0.0 1.0 1.665335e-16)) pos #f(66.3868 824.802 1000.0)) manager #187# changed t) #188=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 -0.984808) (-0.984808 5.551115e-17 -0.173648) (5.551115e-17 1.0 1.665335e-16)) pos #f(53.3632 599.059 1000.0)) manager #188# changed t) #189=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 1.665335e-16 -0.866025) (-0.866025 1.110223e-16 -0.5) (0.0 1.0 2.081668e-16)) pos #f(118.333 382.476 1000.0)) manager #189# changed t) #190=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 1.110223e-16 -0.642788) (-0.642788 1.387779e-16 -0.766044) (0.0 1.0 1.942890e-16)) pos #f(253.461 201.176 1000.0)) manager #190# changed t) #191=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 5.551115e-17 -0.34202) (-0.34202 1.630640e-16 -0.939693) (0.0 1.0 1.700029e-16)) pos #f(442.448 77.0256 1000.0)) manager #191# changed t) #192=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 -0.984808) (-0.984808 -5.551115e-17 0.173648) (0.0 1.0 1.665335e-16)) pos #f(66.3868 824.802 1000.0)) manager #192# changed t) #193=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 -0.984808) (-0.984808 5.551115e-17 -0.173648) (5.551115e-17 1.0 1.665335e-16)) pos #f(53.3632 599.059 1000.0)) manager #193# changed t) #194=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 1.665335e-16 -0.866025) (-0.866025 1.110223e-16 -0.5) (0.0 1.0 2.081668e-16)) pos #f(118.333 382.476 1000.0)) manager #194# changed t) #195=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 1.110223e-16 -0.642788) (-0.642788 1.387779e-16 -0.766044) (0.0 1.0 1.942890e-16)) pos #f(253.461 201.176 1000.0)) manager #195# changed t) #196=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) pos #f(0.0 0.0 0.0) parent #186# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 5.551115e-17 -0.34202) (-0.34202 1.630640e-16 -0.939693) (0.0 1.0 1.700029e-16)) pos #f(442.448 77.0256 1000.0)) manager #196# changed t)) worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(66.3868 824.802 1000.0)) manager #186# changed t) end-coords #197=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0) parent #46# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(0.0 50.0 0.0)) manager #197# changed t) l1 #43# l2 #45# l3 #46# j1 #198# j2 #199# door-radius nil door-width 795 door-thickness 50 knob-height nil knob-radius nil front-touch-cds-list (#200=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1250.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1250.0)) manager #200# changed t) #201=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1167.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1167.0)) manager #201# changed t) #202=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1084.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1084.0)) manager #202# changed t) #203=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 1001.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 1001.0)) manager #203# changed t) #204=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 918.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 918.0)) manager #204# changed t) #205=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -750.0 835.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -775.0 835.0)) manager #205# changed t) #206=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1250.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1250.0)) manager #206# changed t) #207=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1167.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1167.0)) manager #207# changed t) #208=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1084.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1084.0)) manager #208# changed t) #209=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 1001.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 1001.0)) manager #209# changed t) #210=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 918.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 918.0)) manager #210# changed t) #211=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -849.0 835.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -874.0 835.0)) manager #211# changed t) #212=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1250.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1250.0)) manager #212# changed t) #213=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1167.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1167.0)) manager #213# changed t) #214=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1084.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1084.0)) manager #214# changed t) #215=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 1001.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 1001.0)) manager #215# changed t) #216=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 918.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 918.0)) manager #216# changed t) #217=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -948.0 835.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -973.0 835.0)) manager #217# changed t) #218=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1250.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1250.0)) manager #218# changed t) #219=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1167.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1167.0)) manager #219# changed t) #220=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1084.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1084.0)) manager #220# changed t) #221=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 1001.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 1001.0)) manager #221# changed t) #222=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 918.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 918.0)) manager #222# changed t) #223=#s(cascaded-coords plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1047.0 835.0) parent #45# descendants nil worldcoords #s(coordinates plist nil rot #2f((-1.0 -1.224606e-16 0.0) (1.224606e-16 -1.0 0.0) (0.0 0.0 1.0)) pos #f(-10.0 -1072.0 835.0)) manager #223# changed t)) rear-touch-cds-list (#224=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1400.0) parent #45# descendants (#225=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #225# changed t) #226=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #226# changed t) #227=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #227# changed t) #228=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #228# changed t) #229=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #229# changed t) #230=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #230# changed t) #231=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #231# changed t) #232=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #232# changed t) #233=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #233# changed t) #234=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #234# changed t) #235=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1400.0)) manager #235# changed t) #236=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1400.0)) manager #236# changed t) #237=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1400.0)) manager #237# changed t) #238=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1400.0)) manager #238# changed t) #239=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1400.0)) manager #239# changed t) #240=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #240# changed t) #241=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #241# changed t) #242=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #242# changed t) #243=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #243# changed t) #244=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #244# changed t) #245=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1400.0)) manager #245# changed t) #246=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1400.0)) manager #246# changed t) #247=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1400.0)) manager #247# changed t) #248=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1400.0)) manager #248# changed t) #249=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1400.0)) manager #249# changed t) #250=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1400.0)) manager #250# changed t) #251=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1400.0)) manager #251# changed t) #252=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1400.0)) manager #252# changed t) #253=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1400.0)) manager #253# changed t) #254=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #224# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1400.0)) manager #254# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1400.0)) manager #224# changed nil) #255=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1234.37) parent #45# descendants (#256=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #256# changed t) #257=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #257# changed t) #258=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #258# changed t) #259=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #259# changed t) #260=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #260# changed t) #261=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #261# changed t) #262=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #262# changed t) #263=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #263# changed t) #264=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #264# changed t) #265=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #265# changed t) #266=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1234.37)) manager #266# changed t) #267=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1234.37)) manager #267# changed t) #268=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1234.37)) manager #268# changed t) #269=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1234.37)) manager #269# changed t) #270=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1234.37)) manager #270# changed t) #271=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #271# changed t) #272=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #272# changed t) #273=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #273# changed t) #274=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #274# changed t) #275=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #275# changed t) #276=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1234.37)) manager #276# changed t) #277=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1234.37)) manager #277# changed t) #278=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1234.37)) manager #278# changed t) #279=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1234.37)) manager #279# changed t) #280=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1234.37)) manager #280# changed t) #281=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1234.37)) manager #281# changed t) #282=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1234.37)) manager #282# changed t) #283=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1234.37)) manager #283# changed t) #284=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1234.37)) manager #284# changed t) #285=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #255# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1234.37)) manager #285# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1234.37)) manager #255# changed nil) #286=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 1068.75) parent #45# descendants (#287=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #287# changed t) #288=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #288# changed t) #289=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #289# changed t) #290=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #290# changed t) #291=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #291# changed t) #292=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #292# changed t) #293=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #293# changed t) #294=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #294# changed t) #295=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #295# changed t) #296=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #296# changed t) #297=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1068.75)) manager #297# changed t) #298=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1068.75)) manager #298# changed t) #299=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1068.75)) manager #299# changed t) #300=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1068.75)) manager #300# changed t) #301=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1068.75)) manager #301# changed t) #302=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #302# changed t) #303=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #303# changed t) #304=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #304# changed t) #305=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #305# changed t) #306=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #306# changed t) #307=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 1068.75)) manager #307# changed t) #308=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 1068.75)) manager #308# changed t) #309=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 1068.75)) manager #309# changed t) #310=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 1068.75)) manager #310# changed t) #311=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 1068.75)) manager #311# changed t) #312=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 1068.75)) manager #312# changed t) #313=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 1068.75)) manager #313# changed t) #314=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 1068.75)) manager #314# changed t) #315=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 1068.75)) manager #315# changed t) #316=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #286# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 1068.75)) manager #316# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 1068.75)) manager #286# changed nil) #317=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 903.125) parent #45# descendants (#318=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #318# changed t) #319=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #319# changed t) #320=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #320# changed t) #321=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #321# changed t) #322=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #322# changed t) #323=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #323# changed t) #324=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #324# changed t) #325=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #325# changed t) #326=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #326# changed t) #327=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #327# changed t) #328=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 903.125)) manager #328# changed t) #329=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 903.125)) manager #329# changed t) #330=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 903.125)) manager #330# changed t) #331=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 903.125)) manager #331# changed t) #332=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 903.125)) manager #332# changed t) #333=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #333# changed t) #334=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #334# changed t) #335=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #335# changed t) #336=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #336# changed t) #337=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #337# changed t) #338=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 903.125)) manager #338# changed t) #339=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 903.125)) manager #339# changed t) #340=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 903.125)) manager #340# changed t) #341=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 903.125)) manager #341# changed t) #342=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 903.125)) manager #342# changed t) #343=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 903.125)) manager #343# changed t) #344=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 903.125)) manager #344# changed t) #345=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 903.125)) manager #345# changed t) #346=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 903.125)) manager #346# changed t) #347=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #317# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 903.125)) manager #347# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 903.125)) manager #317# changed nil) #348=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 737.5) parent #45# descendants (#349=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #349# changed t) #350=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #350# changed t) #351=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #351# changed t) #352=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #352# changed t) #353=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #353# changed t) #354=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #354# changed t) #355=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #355# changed t) #356=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #356# changed t) #357=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #357# changed t) #358=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #358# changed t) #359=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 737.5)) manager #359# changed t) #360=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 737.5)) manager #360# changed t) #361=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 737.5)) manager #361# changed t) #362=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 737.5)) manager #362# changed t) #363=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 737.5)) manager #363# changed t) #364=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #364# changed t) #365=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #365# changed t) #366=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #366# changed t) #367=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #367# changed t) #368=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #368# changed t) #369=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 737.5)) manager #369# changed t) #370=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 737.5)) manager #370# changed t) #371=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 737.5)) manager #371# changed t) #372=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 737.5)) manager #372# changed t) #373=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 737.5)) manager #373# changed t) #374=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 737.5)) manager #374# changed t) #375=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 737.5)) manager #375# changed t) #376=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 737.5)) manager #376# changed t) #377=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 737.5)) manager #377# changed t) #378=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #348# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 737.5)) manager #378# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 737.5)) manager #348# changed nil) #379=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -750.0 571.875) parent #45# descendants (#380=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #380# changed t) #381=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #381# changed t) #382=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #382# changed t) #383=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #383# changed t) #384=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #384# changed t) #385=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #385# changed t) #386=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #386# changed t) #387=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #387# changed t) #388=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #388# changed t) #389=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #389# changed t) #390=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 571.875)) manager #390# changed t) #391=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 571.875)) manager #391# changed t) #392=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 571.875)) manager #392# changed t) #393=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 571.875)) manager #393# changed t) #394=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 571.875)) manager #394# changed t) #395=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #395# changed t) #396=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #396# changed t) #397=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #397# changed t) #398=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #398# changed t) #399=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #399# changed t) #400=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(-57.7071 696.907 571.875)) manager #400# changed t) #401=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(-19.5045 436.435 571.875)) manager #401# changed t) #402=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(105.481 204.737 571.875)) manager #402# changed t) #403=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(302.174 29.76 571.875)) manager #403# changed t) #404=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(546.851 -67.3917 571.875)) manager #404# changed t) #405=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(-57.7071 696.907 571.875)) manager #405# changed t) #406=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(-19.5045 436.435 571.875)) manager #406# changed t) #407=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(105.481 204.737 571.875)) manager #407# changed t) #408=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(302.174 29.76 571.875)) manager #408# changed t) #409=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #379# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(546.851 -67.3917 571.875)) manager #409# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(499.866 -50.2907 571.875)) manager #379# changed nil) #410=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1400.0) parent #45# descendants (#411=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #411# changed t) #412=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #412# changed t) #413=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #413# changed t) #414=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #414# changed t) #415=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #415# changed t) #416=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #416# changed t) #417=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #417# changed t) #418=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #418# changed t) #419=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #419# changed t) #420=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #420# changed t) #421=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1400.0)) manager #421# changed t) #422=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1400.0)) manager #422# changed t) #423=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1400.0)) manager #423# changed t) #424=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1400.0)) manager #424# changed t) #425=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1400.0)) manager #425# changed t) #426=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #426# changed t) #427=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #427# changed t) #428=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #428# changed t) #429=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #429# changed t) #430=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #430# changed t) #431=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1400.0)) manager #431# changed t) #432=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1400.0)) manager #432# changed t) #433=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1400.0)) manager #433# changed t) #434=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1400.0)) manager #434# changed t) #435=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1400.0)) manager #435# changed t) #436=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1400.0)) manager #436# changed t) #437=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1400.0)) manager #437# changed t) #438=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1400.0)) manager #438# changed t) #439=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1400.0)) manager #439# changed t) #440=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #410# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1400.0)) manager #440# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1400.0)) manager #410# changed nil) #441=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1234.37) parent #45# descendants (#442=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #442# changed t) #443=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #443# changed t) #444=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #444# changed t) #445=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #445# changed t) #446=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #446# changed t) #447=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #447# changed t) #448=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #448# changed t) #449=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #449# changed t) #450=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #450# changed t) #451=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #451# changed t) #452=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1234.37)) manager #452# changed t) #453=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1234.37)) manager #453# changed t) #454=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1234.37)) manager #454# changed t) #455=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1234.37)) manager #455# changed t) #456=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1234.37)) manager #456# changed t) #457=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #457# changed t) #458=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #458# changed t) #459=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #459# changed t) #460=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #460# changed t) #461=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #461# changed t) #462=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1234.37)) manager #462# changed t) #463=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1234.37)) manager #463# changed t) #464=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1234.37)) manager #464# changed t) #465=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1234.37)) manager #465# changed t) #466=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1234.37)) manager #466# changed t) #467=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1234.37)) manager #467# changed t) #468=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1234.37)) manager #468# changed t) #469=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1234.37)) manager #469# changed t) #470=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1234.37)) manager #470# changed t) #471=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #441# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1234.37)) manager #471# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1234.37)) manager #441# changed nil) #472=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 1068.75) parent #45# descendants (#473=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #473# changed t) #474=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #474# changed t) #475=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #475# changed t) #476=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #476# changed t) #477=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #477# changed t) #478=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #478# changed t) #479=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #479# changed t) #480=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #480# changed t) #481=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #481# changed t) #482=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #482# changed t) #483=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1068.75)) manager #483# changed t) #484=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1068.75)) manager #484# changed t) #485=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1068.75)) manager #485# changed t) #486=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1068.75)) manager #486# changed t) #487=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1068.75)) manager #487# changed t) #488=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #488# changed t) #489=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #489# changed t) #490=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #490# changed t) #491=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #491# changed t) #492=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #492# changed t) #493=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 1068.75)) manager #493# changed t) #494=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 1068.75)) manager #494# changed t) #495=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 1068.75)) manager #495# changed t) #496=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 1068.75)) manager #496# changed t) #497=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 1068.75)) manager #497# changed t) #498=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 1068.75)) manager #498# changed t) #499=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 1068.75)) manager #499# changed t) #500=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 1068.75)) manager #500# changed t) #501=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 1068.75)) manager #501# changed t) #502=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #472# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 1068.75)) manager #502# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 1068.75)) manager #472# changed nil) #503=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 903.125) parent #45# descendants (#504=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #504# changed t) #505=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #505# changed t) #506=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #506# changed t) #507=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #507# changed t) #508=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #508# changed t) #509=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #509# changed t) #510=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #510# changed t) #511=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #511# changed t) #512=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #512# changed t) #513=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #513# changed t) #514=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 903.125)) manager #514# changed t) #515=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 903.125)) manager #515# changed t) #516=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 903.125)) manager #516# changed t) #517=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 903.125)) manager #517# changed t) #518=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 903.125)) manager #518# changed t) #519=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #519# changed t) #520=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #520# changed t) #521=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #521# changed t) #522=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #522# changed t) #523=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #523# changed t) #524=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 903.125)) manager #524# changed t) #525=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 903.125)) manager #525# changed t) #526=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 903.125)) manager #526# changed t) #527=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 903.125)) manager #527# changed t) #528=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 903.125)) manager #528# changed t) #529=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 903.125)) manager #529# changed t) #530=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 903.125)) manager #530# changed t) #531=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 903.125)) manager #531# changed t) #532=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 903.125)) manager #532# changed t) #533=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #503# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 903.125)) manager #533# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 903.125)) manager #503# changed nil) #534=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 737.5) parent #45# descendants (#535=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #535# changed t) #536=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #536# changed t) #537=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #537# changed t) #538=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #538# changed t) #539=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #539# changed t) #540=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #540# changed t) #541=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #541# changed t) #542=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #542# changed t) #543=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #543# changed t) #544=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #544# changed t) #545=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 737.5)) manager #545# changed t) #546=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 737.5)) manager #546# changed t) #547=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 737.5)) manager #547# changed t) #548=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 737.5)) manager #548# changed t) #549=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 737.5)) manager #549# changed t) #550=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #550# changed t) #551=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #551# changed t) #552=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #552# changed t) #553=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #553# changed t) #554=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #554# changed t) #555=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 737.5)) manager #555# changed t) #556=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 737.5)) manager #556# changed t) #557=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 737.5)) manager #557# changed t) #558=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 737.5)) manager #558# changed t) #559=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 737.5)) manager #559# changed t) #560=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 737.5)) manager #560# changed t) #561=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 737.5)) manager #561# changed t) #562=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 737.5)) manager #562# changed t) #563=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 737.5)) manager #563# changed t) #564=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #534# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 737.5)) manager #564# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 737.5)) manager #534# changed nil) #565=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -552.0 571.875) parent #45# descendants (#566=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #566# changed t) #567=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #567# changed t) #568=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #568# changed t) #569=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #569# changed t) #570=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #570# changed t) #571=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #571# changed t) #572=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #572# changed t) #573=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #573# changed t) #574=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #574# changed t) #575=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #575# changed t) #576=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 571.875)) manager #576# changed t) #577=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 571.875)) manager #577# changed t) #578=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 571.875)) manager #578# changed t) #579=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 571.875)) manager #579# changed t) #580=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 571.875)) manager #580# changed t) #581=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #581# changed t) #582=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #582# changed t) #583=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #583# changed t) #584=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #584# changed t) #585=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #585# changed t) #586=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(137.285 662.525 571.875)) manager #586# changed t) #587=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(175.487 470.817 571.875)) manager #587# changed t) #588=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(276.954 303.737 571.875)) manager #588# changed t) #589=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(429.446 181.437 571.875)) manager #589# changed t) #590=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(614.571 118.667 571.875)) manager #590# changed t) #591=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(137.285 662.525 571.875)) manager #591# changed t) #592=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(175.487 470.817 571.875)) manager #592# changed t) #593=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(276.954 303.737 571.875)) manager #593# changed t) #594=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(429.446 181.437 571.875)) manager #594# changed t) #595=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #565# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(614.571 118.667 571.875)) manager #595# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(567.586 135.768 571.875)) manager #565# changed nil) #596=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1400.0) parent #45# descendants (#597=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #597# changed t) #598=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #598# changed t) #599=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #599# changed t) #600=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #600# changed t) #601=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #601# changed t) #602=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #602# changed t) #603=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #603# changed t) #604=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #604# changed t) #605=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #605# changed t) #606=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #606# changed t) #607=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1400.0)) manager #607# changed t) #608=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1400.0)) manager #608# changed t) #609=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1400.0)) manager #609# changed t) #610=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1400.0)) manager #610# changed t) #611=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1400.0)) manager #611# changed t) #612=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #612# changed t) #613=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #613# changed t) #614=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #614# changed t) #615=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #615# changed t) #616=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #616# changed t) #617=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1400.0)) manager #617# changed t) #618=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1400.0)) manager #618# changed t) #619=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1400.0)) manager #619# changed t) #620=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1400.0)) manager #620# changed t) #621=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1400.0)) manager #621# changed t) #622=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1400.0)) manager #622# changed t) #623=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1400.0)) manager #623# changed t) #624=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1400.0)) manager #624# changed t) #625=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1400.0)) manager #625# changed t) #626=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #596# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1400.0)) manager #626# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1400.0)) manager #596# changed nil) #627=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1234.37) parent #45# descendants (#628=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #628# changed t) #629=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #629# changed t) #630=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #630# changed t) #631=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #631# changed t) #632=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #632# changed t) #633=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #633# changed t) #634=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #634# changed t) #635=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #635# changed t) #636=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #636# changed t) #637=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #637# changed t) #638=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1234.37)) manager #638# changed t) #639=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1234.37)) manager #639# changed t) #640=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1234.37)) manager #640# changed t) #641=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1234.37)) manager #641# changed t) #642=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1234.37)) manager #642# changed t) #643=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #643# changed t) #644=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #644# changed t) #645=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #645# changed t) #646=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #646# changed t) #647=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #647# changed t) #648=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1234.37)) manager #648# changed t) #649=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1234.37)) manager #649# changed t) #650=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1234.37)) manager #650# changed t) #651=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1234.37)) manager #651# changed t) #652=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1234.37)) manager #652# changed t) #653=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1234.37)) manager #653# changed t) #654=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1234.37)) manager #654# changed t) #655=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1234.37)) manager #655# changed t) #656=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1234.37)) manager #656# changed t) #657=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #627# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1234.37)) manager #657# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1234.37)) manager #627# changed nil) #658=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 1068.75) parent #45# descendants (#659=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #659# changed t) #660=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #660# changed t) #661=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #661# changed t) #662=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #662# changed t) #663=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #663# changed t) #664=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #664# changed t) #665=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #665# changed t) #666=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #666# changed t) #667=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #667# changed t) #668=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #668# changed t) #669=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1068.75)) manager #669# changed t) #670=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1068.75)) manager #670# changed t) #671=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1068.75)) manager #671# changed t) #672=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1068.75)) manager #672# changed t) #673=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1068.75)) manager #673# changed t) #674=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #674# changed t) #675=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #675# changed t) #676=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #676# changed t) #677=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #677# changed t) #678=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #678# changed t) #679=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 1068.75)) manager #679# changed t) #680=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 1068.75)) manager #680# changed t) #681=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 1068.75)) manager #681# changed t) #682=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 1068.75)) manager #682# changed t) #683=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 1068.75)) manager #683# changed t) #684=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 1068.75)) manager #684# changed t) #685=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 1068.75)) manager #685# changed t) #686=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 1068.75)) manager #686# changed t) #687=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 1068.75)) manager #687# changed t) #688=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #658# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 1068.75)) manager #688# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 1068.75)) manager #658# changed nil) #689=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 903.125) parent #45# descendants (#690=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #690# changed t) #691=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #691# changed t) #692=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #692# changed t) #693=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #693# changed t) #694=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #694# changed t) #695=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #695# changed t) #696=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #696# changed t) #697=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #697# changed t) #698=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #698# changed t) #699=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #699# changed t) #700=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 903.125)) manager #700# changed t) #701=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 903.125)) manager #701# changed t) #702=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 903.125)) manager #702# changed t) #703=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 903.125)) manager #703# changed t) #704=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 903.125)) manager #704# changed t) #705=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #705# changed t) #706=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #706# changed t) #707=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #707# changed t) #708=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #708# changed t) #709=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #709# changed t) #710=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 903.125)) manager #710# changed t) #711=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 903.125)) manager #711# changed t) #712=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 903.125)) manager #712# changed t) #713=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 903.125)) manager #713# changed t) #714=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 903.125)) manager #714# changed t) #715=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 903.125)) manager #715# changed t) #716=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 903.125)) manager #716# changed t) #717=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 903.125)) manager #717# changed t) #718=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 903.125)) manager #718# changed t) #719=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #689# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 903.125)) manager #719# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 903.125)) manager #689# changed nil) #720=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 737.5) parent #45# descendants (#721=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #721# changed t) #722=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #722# changed t) #723=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #723# changed t) #724=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #724# changed t) #725=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #725# changed t) #726=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #726# changed t) #727=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #727# changed t) #728=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #728# changed t) #729=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #729# changed t) #730=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #730# changed t) #731=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 737.5)) manager #731# changed t) #732=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 737.5)) manager #732# changed t) #733=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 737.5)) manager #733# changed t) #734=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 737.5)) manager #734# changed t) #735=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 737.5)) manager #735# changed t) #736=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #736# changed t) #737=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #737# changed t) #738=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #738# changed t) #739=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #739# changed t) #740=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #740# changed t) #741=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 737.5)) manager #741# changed t) #742=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 737.5)) manager #742# changed t) #743=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 737.5)) manager #743# changed t) #744=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 737.5)) manager #744# changed t) #745=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 737.5)) manager #745# changed t) #746=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 737.5)) manager #746# changed t) #747=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 737.5)) manager #747# changed t) #748=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 737.5)) manager #748# changed t) #749=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 737.5)) manager #749# changed t) #750=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #720# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 737.5)) manager #750# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 737.5)) manager #720# changed nil) #751=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -354.0 571.875) parent #45# descendants (#752=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #752# changed t) #753=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #753# changed t) #754=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #754# changed t) #755=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #755# changed t) #756=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #756# changed t) #757=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #757# changed t) #758=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #758# changed t) #759=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #759# changed t) #760=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #760# changed t) #761=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #761# changed t) #762=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 571.875)) manager #762# changed t) #763=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 571.875)) manager #763# changed t) #764=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 571.875)) manager #764# changed t) #765=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 571.875)) manager #765# changed t) #766=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 571.875)) manager #766# changed t) #767=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #767# changed t) #768=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #768# changed t) #769=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #769# changed t) #770=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #770# changed t) #771=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #771# changed t) #772=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(332.277 628.143 571.875)) manager #772# changed t) #773=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(370.479 505.2 571.875)) manager #773# changed t) #774=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(448.427 402.737 571.875)) manager #774# changed t) #775=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(556.718 333.114 571.875)) manager #775# changed t) #776=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(682.291 304.727 571.875)) manager #776# changed t) #777=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(332.277 628.143 571.875)) manager #777# changed t) #778=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(370.479 505.2 571.875)) manager #778# changed t) #779=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(448.427 402.737 571.875)) manager #779# changed t) #780=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(556.718 333.114 571.875)) manager #780# changed t) #781=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #751# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(682.291 304.727 571.875)) manager #781# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(635.306 321.828 571.875)) manager #751# changed nil) #782=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1400.0) parent #45# descendants (#783=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #783# changed t) #784=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #784# changed t) #785=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #785# changed t) #786=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #786# changed t) #787=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #787# changed t) #788=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #788# changed t) #789=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #789# changed t) #790=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #790# changed t) #791=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #791# changed t) #792=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #792# changed t) #793=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1400.0)) manager #793# changed t) #794=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1400.0)) manager #794# changed t) #795=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1400.0)) manager #795# changed t) #796=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1400.0)) manager #796# changed t) #797=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1400.0)) manager #797# changed t) #798=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #798# changed t) #799=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #799# changed t) #800=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #800# changed t) #801=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #801# changed t) #802=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #802# changed t) #803=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1400.0)) manager #803# changed t) #804=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1400.0)) manager #804# changed t) #805=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1400.0)) manager #805# changed t) #806=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1400.0)) manager #806# changed t) #807=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1400.0)) manager #807# changed t) #808=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1400.0)) manager #808# changed t) #809=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1400.0)) manager #809# changed t) #810=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1400.0)) manager #810# changed t) #811=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1400.0)) manager #811# changed t) #812=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #782# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1400.0)) manager #812# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1400.0)) manager #782# changed nil) #813=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1234.37) parent #45# descendants (#814=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #814# changed t) #815=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #815# changed t) #816=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #816# changed t) #817=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #817# changed t) #818=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #818# changed t) #819=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #819# changed t) #820=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #820# changed t) #821=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #821# changed t) #822=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #822# changed t) #823=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #823# changed t) #824=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1234.37)) manager #824# changed t) #825=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1234.37)) manager #825# changed t) #826=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1234.37)) manager #826# changed t) #827=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1234.37)) manager #827# changed t) #828=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1234.37)) manager #828# changed t) #829=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #829# changed t) #830=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #830# changed t) #831=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #831# changed t) #832=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #832# changed t) #833=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #833# changed t) #834=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1234.37)) manager #834# changed t) #835=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1234.37)) manager #835# changed t) #836=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1234.37)) manager #836# changed t) #837=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1234.37)) manager #837# changed t) #838=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1234.37)) manager #838# changed t) #839=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1234.37)) manager #839# changed t) #840=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1234.37)) manager #840# changed t) #841=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1234.37)) manager #841# changed t) #842=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1234.37)) manager #842# changed t) #843=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #813# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1234.37)) manager #843# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1234.37)) manager #813# changed nil) #844=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 1068.75) parent #45# descendants (#845=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #845# changed t) #846=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #846# changed t) #847=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #847# changed t) #848=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #848# changed t) #849=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #849# changed t) #850=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #850# changed t) #851=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #851# changed t) #852=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #852# changed t) #853=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #853# changed t) #854=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #854# changed t) #855=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1068.75)) manager #855# changed t) #856=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1068.75)) manager #856# changed t) #857=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1068.75)) manager #857# changed t) #858=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1068.75)) manager #858# changed t) #859=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1068.75)) manager #859# changed t) #860=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #860# changed t) #861=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #861# changed t) #862=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #862# changed t) #863=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #863# changed t) #864=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #864# changed t) #865=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 1068.75)) manager #865# changed t) #866=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 1068.75)) manager #866# changed t) #867=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 1068.75)) manager #867# changed t) #868=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 1068.75)) manager #868# changed t) #869=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 1068.75)) manager #869# changed t) #870=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 1068.75)) manager #870# changed t) #871=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 1068.75)) manager #871# changed t) #872=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 1068.75)) manager #872# changed t) #873=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 1068.75)) manager #873# changed t) #874=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #844# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 1068.75)) manager #874# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 1068.75)) manager #844# changed nil) #875=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 903.125) parent #45# descendants (#876=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #876# changed t) #877=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #877# changed t) #878=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #878# changed t) #879=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #879# changed t) #880=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #880# changed t) #881=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #881# changed t) #882=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #882# changed t) #883=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #883# changed t) #884=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #884# changed t) #885=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #885# changed t) #886=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 903.125)) manager #886# changed t) #887=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 903.125)) manager #887# changed t) #888=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 903.125)) manager #888# changed t) #889=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 903.125)) manager #889# changed t) #890=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 903.125)) manager #890# changed t) #891=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #891# changed t) #892=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #892# changed t) #893=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #893# changed t) #894=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #894# changed t) #895=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #895# changed t) #896=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 903.125)) manager #896# changed t) #897=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 903.125)) manager #897# changed t) #898=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 903.125)) manager #898# changed t) #899=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 903.125)) manager #899# changed t) #900=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 903.125)) manager #900# changed t) #901=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 903.125)) manager #901# changed t) #902=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 903.125)) manager #902# changed t) #903=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 903.125)) manager #903# changed t) #904=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 903.125)) manager #904# changed t) #905=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #875# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 903.125)) manager #905# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 903.125)) manager #875# changed nil) #906=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 737.5) parent #45# descendants (#907=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #907# changed t) #908=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #908# changed t) #909=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #909# changed t) #910=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #910# changed t) #911=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #911# changed t) #912=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #912# changed t) #913=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #913# changed t) #914=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #914# changed t) #915=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #915# changed t) #916=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #916# changed t) #917=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 737.5)) manager #917# changed t) #918=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 737.5)) manager #918# changed t) #919=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 737.5)) manager #919# changed t) #920=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 737.5)) manager #920# changed t) #921=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 737.5)) manager #921# changed t) #922=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #922# changed t) #923=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #923# changed t) #924=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #924# changed t) #925=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #925# changed t) #926=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #926# changed t) #927=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 737.5)) manager #927# changed t) #928=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 737.5)) manager #928# changed t) #929=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 737.5)) manager #929# changed t) #930=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 737.5)) manager #930# changed t) #931=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 737.5)) manager #931# changed t) #932=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 737.5)) manager #932# changed t) #933=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 737.5)) manager #933# changed t) #934=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 737.5)) manager #934# changed t) #935=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 737.5)) manager #935# changed t) #936=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #906# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 737.5)) manager #936# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 737.5)) manager #906# changed nil) #937=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(60.0 -156.0 571.875) parent #45# descendants (#938=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #938# changed t) #939=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #939# changed t) #940=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #940# changed t) #941=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #941# changed t) #942=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #942# changed t) #943=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #943# changed t) #944=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #944# changed t) #945=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #945# changed t) #946=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #946# changed t) #947=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #947# changed t) #948=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 571.875)) manager #948# changed t) #949=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 571.875)) manager #949# changed t) #950=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 571.875)) manager #950# changed t) #951=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 571.875)) manager #951# changed t) #952=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 571.875)) manager #952# changed t) #953=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #953# changed t) #954=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #954# changed t) #955=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #955# changed t) #956=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #956# changed t) #957=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #957# changed t) #958=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-5.551115e-17 0.984808 -0.173648) (-1.665335e-16 -0.173648 -0.984808) (-1.0 0.0 1.665335e-16)) pos #f(527.269 593.76 571.875)) manager #958# changed t) #959=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((8.326673e-17 0.984808 0.173648) (-1.665335e-16 0.173648 -0.984808) (-1.0 5.551115e-17 1.665335e-16)) pos #f(565.471 539.582 571.875)) manager #959# changed t) #960=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.110223e-16 0.866025 0.5) (-1.665335e-16 0.5 -0.866025) (-1.0 0.0 2.220446e-16)) pos #f(619.9 501.737 571.875)) manager #960# changed t) #961=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((1.665335e-16 0.642788 0.766044) (-1.110223e-16 0.766044 -0.642788) (-1.0 0.0 1.665335e-16)) pos #f(683.99 484.79 571.875)) manager #961# changed t) #962=#s(cascaded-coords plist nil rot #2f((2.220446e-16 0.0 1.0) (0.0 1.0 0.0) (-1.0 0.0 2.220446e-16)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((2.116363e-16 0.34202 0.939693) (-8.326673e-17 0.939693 -0.34202) (-1.0 -2.775558e-17 1.769418e-16)) pos #f(750.011 490.786 571.875)) manager #962# changed t) #963=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(527.269 593.76 571.875)) manager #963# changed t) #964=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 0.984808 0.0) (-0.984808 0.173648 0.0) (0.0 0.0 1.0)) pos #f(565.471 539.582 571.875)) manager #964# changed t) #965=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.5 0.866025 0.0) (-0.866025 0.5 0.0) (0.0 0.0 1.0)) pos #f(619.9 501.737 571.875)) manager #965# changed t) #966=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.766044 0.642788 0.0) (-0.642788 0.766044 0.0) (0.0 0.0 1.0)) pos #f(683.99 484.79 571.875)) manager #966# changed t) #967=#s(cascaded-coords plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(50.0 0.0 0.0) parent #937# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(750.011 490.786 571.875)) manager #967# changed t)) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(703.026 507.887 571.875)) manager #937# changed nil)) h-tgts-num 4 v-tgts-num 6 h-step 198 v-step 165.625) descendants (#48# #45# #76#) worldcoords #s(coordinates plist nil rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) pos #f(700.0 700.0 0.0)) manager #43# changed nil geometry::bodies (#76#) joint nil parent-link nil child-links (#45#) analysis-level :body default-coords nil weight 1 acentroid #968# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#937# #906# #875# #844# #813# #782# #751# #720# #689# #658# #627# #596# #565# #534# #503# #472# #441# #410# #379# #348# #317# #286# #255# #224# #223# #222# #221# #220# #219# #218# #217# #216# #215# #214# #213# #212# #211# #210# #209# #208# #207# #206# #205# #204# #203# #202# #201# #200# #46# #103#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(700.0 675.0 0.0)) manager #45# changed nil geometry::bodies (#103#) joint #198# parent-link #43# child-links (#46#) analysis-level :body default-coords nil weight 1 acentroid #968# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#47# #197# #186# #130#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(425.347 30.0409 1000.0)) manager #46# changed nil geometry::bodies (#130#) joint #199# parent-link #45# child-links nil analysis-level :body default-coords nil weight 1 acentroid #968# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#185# #158#) worldcoords #s(coordinates plist nil rot #2f((0.939693 0.34202 0.0) (-0.34202 0.939693 0.0) (0.0 0.0 1.0)) pos #f(542.809 -12.7116 1000.0)) manager #47# changed nil geometry::bodies (#158#) joint nil parent-link nil child-links nil analysis-level :body default-coords nil weight 1 acentroid #968# inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) angular-velocity #f(0.0 0.0 0.0) angular-acceleration #f(0.0 0.0 0.0) spacial-velocity #f(0.0 0.0 0.0) spacial-acceleration #f(0.0 0.0 0.0) momentum-velocity #f(0.0 0.0 0.0) angular-momentum-velocity #f(0.0 0.0 0.0) momentum #f(0.0 0.0 0.0) angular-momentum #f(0.0 0.0 0.0) force #f(0.0 0.0 0.0) moment #f(0.0 0.0 0.0) ext-force #f(0.0 0.0 0.0) ext-moment #f(0.0 0.0 0.0)) descendants (#969=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 0.984808) (0.984808 -8.326673e-17 -0.173648) (5.551115e-17 1.0 -1.387779e-16)) pos #f(44.6807 701.701 1000.0)) manager #969# changed t) #970=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 0.984808) (0.984808 5.551115e-17 0.173648) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(75.0692 475.958 1000.0)) manager #970# changed t) #971=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.5 1.665335e-16 0.866025) (0.866025 1.665335e-16 0.5) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(180.833 274.223 1000.0)) manager #971# changed t) #972=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.766044 1.110223e-16 0.642788) (0.642788 1.110223e-16 0.766044) (0.0 1.0 -1.110223e-16)) pos #f(349.217 120.827 1000.0)) manager #972# changed t) #973=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.939693 2.775558e-17 0.34202) (0.34202 1.665335e-16 0.939693) (-2.775558e-17 1.0 -1.665335e-16)) pos #f(559.91 34.273 1000.0)) manager #973# changed t) #974=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((0.173648 1.665335e-16 0.984808) (0.984808 -8.326673e-17 -0.173648) (5.551115e-17 1.0 -1.387779e-16)) pos #f(44.6807 701.701 1000.0)) manager #974# changed t) #975=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.173648 1.665335e-16 0.984808) (0.984808 5.551115e-17 0.173648) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(75.0692 475.958 1000.0)) manager #975# changed t) #976=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.5 1.665335e-16 0.866025) (0.866025 1.665335e-16 0.5) (-5.551115e-17 1.0 -1.665335e-16)) pos #f(180.833 274.223 1000.0)) manager #976# changed t) #977=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.766044 1.110223e-16 0.642788) (0.642788 1.110223e-16 0.766044) (0.0 1.0 -1.110223e-16)) pos #f(349.217 120.827 1000.0)) manager #977# changed t) #978=#s(cascaded-coords plist nil rot #2f((-1.0 1.232595e-32 1.224606e-16) (1.224606e-16 2.220446e-16 1.0) (-1.232595e-32 1.0 -2.220446e-16)) pos #f(0.0 0.0 0.0) parent #185# descendants nil worldcoords #s(coordinates plist nil rot #2f((-0.939693 2.775558e-17 0.34202) (0.34202 1.665335e-16 0.939693) (-2.775558e-17 1.0 -1.665335e-16)) pos #f(559.91 34.273 1000.0)) manager #978# changed t)) worldcoords #s(coordinates plist nil rot #2f((-0.173648 0.984808 0.0) (-0.984808 -0.173648 0.0) (0.0 0.0 1.0)) pos #f(44.6807 701.701 1000.0)) manager #185# changed t) ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.782937) #s(costed-arc plist nil from #37# to #979=#s(extended-node plist ((:name . "l-0-4-fk")) arc-list (#s(costed-arc plist nil from #979# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(152.363 87.7029 9.591 66.1207 -82.5121 3.32548 -112.943 -23.9516 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994072 -0.108728 0.0) (0.108728 0.994072 0.0) (0.0 0.0 1.0)) pos #f(-79.3173 240.642 0.0)) base-coords-optimized nil object-coords-index fk object-coords #186# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.60873) #s(costed-arc plist nil from #37# to #981=#s(extended-node plist ((:name . #1234="l-0-4-23")) arc-list (#s(costed-arc plist nil from #981# to #982=#s(extended-node plist ((:name . "r-0-4-18<->-l-0-4-23")) arc-list (#s(costed-arc plist nil from #982# to #981# cost 0) #s(costed-arc plist nil from #982# to #983=#s(extended-node plist ((:name . #1116="r-0-4-18")) arc-list (#s(costed-arc plist nil from #983# to #982# cost 0) #s(costed-arc plist nil from #983# to #984=#s(extended-node plist ((:name . "r-0-4-18<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #984# to #985=#s(extended-node plist ((:name . #1112="l-2-4-5")) arc-list (#s(costed-arc plist nil from #985# to #986=#s(extended-node plist ((:name . "r-0-4-6<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #986# to #985# cost 0) #s(costed-arc plist nil from #986# to #987=#s(extended-node plist ((:name . #1206="r-0-4-6")) arc-list (#s(costed-arc plist nil from #987# to #988=#s(extended-node plist ((:name . "r-0-4-6<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #988# to #989=#s(extended-node plist ((:name . #1070="l-2-4-4")) arc-list (#s(costed-arc plist nil from #989# to #990=#s(extended-node plist ((:name . "r-0-4-1<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #990# to #989# cost 0) #s(costed-arc plist nil from #990# to #991=#s(extended-node plist ((:name . #1013="r-0-4-1")) arc-list (#s(costed-arc plist nil from #991# to #992=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #992# to #993=#s(extended-node plist ((:name . #1029="l-0-4-3")) arc-list (#s(costed-arc plist nil from #993# to #992# cost 0) #s(costed-arc plist nil from #993# to #994=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #994# to #993# cost 0) #s(costed-arc plist nil from #994# to #995=#s(extended-node plist ((:name . #1016="r-0-4-2")) arc-list (#s(costed-arc plist nil from #995# to #996=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-1")) arc-list (#s(costed-arc plist nil from #996# to #997=#s(extended-node plist ((:name . #1194="l-0-4-1")) arc-list (#s(costed-arc plist nil from #997# to #996# cost 0) #s(costed-arc plist nil from #997# to #998=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-1")) arc-list (#s(costed-arc plist nil from #998# to #997# cost 0) #s(costed-arc plist nil from #998# to #999=#s(extended-node plist ((:name . #1007="r-0-4-4")) arc-list (#s(costed-arc plist nil from #999# to #1000=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-0")) arc-list (#s(costed-arc plist nil from #1000# to #1001=#s(extended-node plist ((:name . #1188="l-0-4-0")) arc-list (#s(costed-arc plist nil from #1001# to #1002=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-0")) arc-list (#s(costed-arc plist nil from #1002# to #1001# cost 0) #s(costed-arc plist nil from #1002# to #1003=#s(extended-node plist ((:name . #1009="r-0-4-3")) arc-list (#s(costed-arc plist nil from #1003# to #1002# cost 0) #s(costed-arc plist nil from #1003# to #1004=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-2")) arc-list (#s(costed-arc plist nil from #1004# to #1005=#s(extended-node plist ((:name . #1008="l-0-4-2")) arc-list (#s(costed-arc plist nil from #1005# to #1004# cost 0) #s(costed-arc plist nil from #1005# to #1006=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-2")) arc-list (#s(costed-arc plist nil from #1006# to #1005# cost 0) #s(costed-arc plist nil from #1006# to #999# cost 0)) arm :arms islands (#1007# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(180.759 29.3851 23.5266 68.1975 -121.525 -143.211 -67.0864 234.959 -16.0087 36.3054 -82.8652 -70.7555 -11.4425 -40.2564 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1005# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.262 113.065 15.4941 77.2793 -121.529 -17.566 -5.95653 178.266 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(219.096 72.2791 16.5942 74.993 -107.31 -34.0019 -5.73237 185.459 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.947272 -0.320431 0.0) (0.320431 0.947272 0.0) (0.0 0.0 1.0)) pos #f(-89.5039 82.1817 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.660146 -0.751137 0.0) (0.751137 0.660146 0.0) (0.0 0.0 1.0)) pos #f(-85.2283 63.7058 0.0)) object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1004# to #1003# cost 0)) arm :arms islands (#1009# #1008#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(196.006 -17.0187 31.7696 9.3427 -105.723 -105.32 -97.4661 222.959 -14.214 33.2834 -70.3131 -80.9912 -9.1248 -33.8659 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1010=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1010# to #1011=#s(extended-node plist ((:name . #1014="l-0-4-5")) arc-list (#s(costed-arc plist nil from #1011# to #1012=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1012# to #1011# cost 0) #s(costed-arc plist nil from #1012# to #991# cost 0)) arm :arms islands (#1013# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(190.644 31.9334 64.4801 103.326 -68.4294 -84.2189 -89.4654 180.0 -7.40519 10.839 -46.7057 -89.4744 -12.9135 -23.9863 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1011# to #1015=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1015# to #1011# cost 0) #s(costed-arc plist nil from #1015# to #995# cost 0)) arm :arms islands (#1016# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(135.855 34.1097 74.2671 60.6449 -104.484 -172.19 -54.9675 237.239 -9.86083 16.743 -56.2101 -83.0904 -7.2732 -32.3771 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1011# to #1010# cost 0) #s(costed-arc plist nil from #1011# to #1017=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1017# to #1011# cost 0) #s(costed-arc plist nil from #1017# to #999# cost 0)) arm :arms islands (#1007# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(136.245 19.94 73.4911 41.0493 -106.239 -175.19 -76.1306 234.959 -15.8821 34.5589 -80.1703 -73.5181 -10.6695 -40.4371 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1011# to #1018=#s(extended-node plist ((:name . "r-0-4-7<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1018# to #1011# cost 0) #s(costed-arc plist nil from #1018# to #1019=#s(extended-node plist ((:name . #1152="r-0-4-7")) arc-list (#s(costed-arc plist nil from #1019# to #1020=#s(extended-node plist ((:name . "r-0-4-7<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1020# to #1021=#s(extended-node plist ((:name . #1023="l-0-4-4")) arc-list (#s(costed-arc plist nil from #1021# to #1022=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1022# to #1021# cost 0) #s(costed-arc plist nil from #1022# to #991# cost 0)) arm :arms islands (#1013# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(192.611 30.5492 55.1598 99.9811 -84.4427 -74.077 -94.9902 180.0 -7.50345 10.8898 -46.8832 -89.3609 -12.9175 -24.5176 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #1024=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1024# to #1021# cost 0) #s(costed-arc plist nil from #1024# to #995# cost 0)) arm :arms islands (#1016# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(141.87 37.9159 66.5026 65.594 -117.105 -170.101 -44.8452 237.239 -10.0414 17.1342 -56.6506 -83.1032 -7.34258 -32.786 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #1025=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1025# to #1021# cost 0) #s(costed-arc plist nil from #1025# to #1026=#s(extended-node plist ((:name . #1028="r-0-4-5")) arc-list (#s(costed-arc plist nil from #1026# to #1027=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1027# to #993# cost 0) #s(costed-arc plist nil from #1027# to #1026# cost 0)) arm :arms islands (#1028# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(193.263 27.7644 47.1875 82.6174 -96.172 -68.7905 -90.1158 180.0 -15.9719 45.6377 -94.0885 -67.5978 -15.8643 -22.3386 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1026# to #1025# cost 0) #s(costed-arc plist nil from #1026# to #1030=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #1030# to #1031=#s(extended-node plist ((:name . #1033="l-0-4-9")) arc-list (#s(costed-arc plist nil from #1031# to #1032=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #1032# to #1031# cost 0) #s(costed-arc plist nil from #1032# to #991# cost 0)) arm :arms islands (#1013# #1033#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(204.594 7.11424 39.0208 70.2956 -74.7366 -89.7972 -76.3652 180.0 -7.86572 12.7737 -47.496 -91.7905 -13.1946 -20.8744 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1031# to #1034=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #1034# to #1031# cost 0) #s(costed-arc plist nil from #1034# to #995# cost 0)) arm :arms islands (#1016# #1033#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(152.115 -11.4232 47.9512 4.52625 -94.8922 -171.921 -39.7639 237.239 -10.3396 18.6262 -56.9691 -84.4285 -7.59087 -30.7851 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1031# to #1035=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #1035# to #1031# cost 0) #s(costed-arc plist nil from #1035# to #999# cost 0)) arm :arms islands (#1007# #1033#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(152.267 -9.96045 47.2433 4.73387 -94.027 -176.199 -40.1726 234.959 -16.1064 35.8248 -80.7966 -73.1461 -10.8782 -39.2661 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1031# to #1030# cost 0) #s(costed-arc plist nil from #1031# to #1036=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-9")) arc-list (#s(costed-arc plist nil from #1036# to #1031# cost 0) #s(costed-arc plist nil from #1036# to #1037=#s(extended-node plist ((:name . #1039="r-0-4-10")) arc-list (#s(costed-arc plist nil from #1037# to #1038=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1038# to #993# cost 0) #s(costed-arc plist nil from #1038# to #1037# cost 0)) arm :arms islands (#1039# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(193.289 28.2902 40.216 92.5868 -96.3018 -71.2116 -93.5813 180.0 -21.7564 38.0886 -75.1677 -62.4765 -10.7347 -34.8767 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1037# to #1040=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1040# to #1021# cost 0) #s(costed-arc plist nil from #1040# to #1037# cost 0)) arm :arms islands (#1039# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.759 32.4067 55.0109 100.25 -86.3799 -77.6427 -93.4544 180.0 -21.7844 38.0706 -75.0819 -62.6636 -10.7118 -34.7364 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1037# to #1041=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1041# to #1011# cost 0) #s(costed-arc plist nil from #1041# to #1037# cost 0)) arm :arms islands (#1039# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(189.819 33.7807 64.1029 103.557 -70.6751 -88.0604 -88.1315 180.0 -21.8142 38.0333 -74.981 -62.876 -10.6849 -34.6031 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1037# to #1036# cost 0) #s(costed-arc plist nil from #1037# to #1042=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1042# to #1043=#s(extended-node plist ((:name . #1045="l-0-4-11")) arc-list (#s(costed-arc plist nil from #1043# to #1044=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1044# to #1043# cost 0) #s(costed-arc plist nil from #1044# to #991# cost 0)) arm :arms islands (#1013# #1045#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.887 4.39987 55.0679 74.3162 -50.9751 -100.866 -64.2535 180.0 -7.70859 12.7932 -47.2322 -92.1768 -13.1969 -19.6158 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1043# to #1046=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1046# to #1043# cost 0) #s(costed-arc plist nil from #1046# to #995# cost 0)) arm :arms islands (#1016# #1045#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(149.312 -12.3041 59.9864 3.57136 -73.068 -172.914 -45.1405 237.239 -10.2473 18.5947 -56.6824 -84.6677 -7.56584 -30.1154 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1043# to #1047=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1047# to #1043# cost 0) #s(costed-arc plist nil from #1047# to #1003# cost 0)) arm :arms islands (#1009# #1045#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(208.685 -19.4139 54.3504 -3.10286 -55.5918 -142.411 -49.7788 222.959 -14.647 35.1905 -70.5883 -82.1593 -9.27057 -30.6388 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1043# to #1048=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-11")) arc-list (#s(costed-arc plist nil from #1048# to #1043# cost 0) #s(costed-arc plist nil from #1048# to #1049=#s(extended-node plist ((:name . #1051="r-0-4-9")) arc-list (#s(costed-arc plist nil from #1049# to #1050=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1050# to #993# cost 0) #s(costed-arc plist nil from #1050# to #1049# cost 0)) arm :arms islands (#1051# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(189.079 29.0396 39.949 91.5284 -95.1247 -68.3253 -95.4818 180.0 -20.2063 29.7385 -67.0224 -72.4053 -10.3162 -31.3359 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1052=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1052# to #1021# cost 0) #s(costed-arc plist nil from #1052# to #1049# cost 0)) arm :arms islands (#1051# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.464 33.1878 55.1555 99.1826 -85.0971 -74.3872 -95.4231 180.0 -20.203 29.6927 -66.9231 -72.5712 -10.2991 -31.0849 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1053=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1053# to #1011# cost 0) #s(costed-arc plist nil from #1053# to #1049# cost 0)) arm :arms islands (#1051# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(185.452 34.6932 64.6485 102.454 -69.2658 -84.6071 -90.1135 180.0 -20.1945 29.6219 -66.8042 -72.7487 -10.2781 -30.8287 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1054=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1054# to #1055=#s(extended-node plist ((:name . #1057="l-0-4-10")) arc-list (#s(costed-arc plist nil from #1055# to #1056=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1056# to #1055# cost 0) #s(costed-arc plist nil from #1056# to #991# cost 0)) arm :arms islands (#1013# #1057#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.759 7.19971 49.6349 73.1184 -66.3456 -94.0613 -73.6791 180.0 -7.81243 12.8216 -47.4063 -92.0039 -13.2002 -20.274 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1055# to #1058=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-10")) arc-list (#s(costed-arc plist nil from #1058# to #1055# cost 0) #s(costed-arc plist nil from #1058# to #995# cost 0)) arm :arms islands (#1016# #1057#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.4 -11.8157 57.8515 4.01694 -88.9893 -172.152 -41.5449 237.239 -10.3147 18.6631 -56.8727 -84.5602 -7.58667 -30.4708 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1055# to #1054# cost 0) #s(costed-arc plist nil from #1055# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.834 99.787 33.5565 104.222 -100.883 0.035502 -5.73374 195.95 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(206.272 61.1464 47.3735 85.4642 -88.7151 -17.8954 -5.73007 198.577 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.940391 -0.340095 0.0) (0.340095 0.940391 0.0) (0.0 0.0 1.0)) pos #f(-27.0378 30.8438 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.644355 -0.764727 0.0) (0.764727 0.644355 0.0) (0.0 0.0 1.0)) pos #f(-8.21831 27.2805 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1054# to #1049# cost 0)) arm :arms islands (#1051# #1057#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.539 9.32248 49.638 72.63 -67.2057 -95.1812 -75.1699 180.0 -20.5144 31.1106 -67.2472 -73.5661 -10.412 -28.4156 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1048# cost 0) #s(costed-arc plist nil from #1049# to #1059=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1059# to #1060=#s(extended-node plist ((:name . #1062="l-0-4-12")) arc-list (#s(costed-arc plist nil from #1060# to #1061=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1061# to #1060# cost 0) #s(costed-arc plist nil from #1061# to #1026# cost 0)) arm :arms islands (#1028# #1062#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(223.892 -13.9687 -20.2598 52.5903 -9.8347 -105.489 -13.8725 180.0 -15.9039 48.4858 -94.2825 -68.0382 -15.8566 -12.772 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1060# to #1059# cost 0) #s(costed-arc plist nil from #1060# to #1063=#s(extended-node plist ((:name . "r-0-4-10<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1063# to #1060# cost 0) #s(costed-arc plist nil from #1063# to #1037# cost 0)) arm :arms islands (#1039# #1062#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(224.734 -15.5444 -20.2598 53.5911 -9.95069 -109.333 -13.6461 180.0 -21.8498 40.5844 -75.6041 -62.2151 -10.8838 -30.7065 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1060# to #1064=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-12")) arc-list (#s(costed-arc plist nil from #1064# to #1060# cost 0) #s(costed-arc plist nil from #1064# to #1065=#s(extended-node plist ((:name . #1067="r-0-4-11")) arc-list (#s(costed-arc plist nil from #1065# to #1066=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1066# to #1021# cost 0) #s(costed-arc plist nil from #1066# to #1065# cost 0)) arm :arms islands (#1067# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(178.482 37.7338 52.4932 100.528 -80.2096 -45.6052 -81.4559 8.13637 -22.5926 43.4255 -83.3316 -51.6588 -12.3672 -36.5862 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1065# to #1068=#s(extended-node plist ((:name . "r-0-4-11<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1068# to #1011# cost 0) #s(costed-arc plist nil from #1068# to #1065# cost 0)) arm :arms islands (#1067# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(176.644 41.2532 61.3972 107.345 -63.8349 -49.4708 -76.4501 8.13637 -22.6697 43.4226 -83.2333 -51.8832 -12.3301 -36.5798 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1065# to #1064# cost 0) #s(costed-arc plist nil from #1065# to #1069=#s(extended-node plist ((:name . "r-0-4-11<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1069# to #989# cost 0) #s(costed-arc plist nil from #1069# to #1065# cost 0)) arm :arms islands (#1067# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(222.957 -10.0643 36.0568 165.938 -120.0 20.0 -30.0 180.0 -21.605 47.2382 -81.7698 -50.1195 -11.9037 -29.0463 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1065# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(213.221 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.2735 47.6405 -81.0559 -52.0492 -11.6109 -27.8673 186.316 0.0 0.0) robot-pose-optimized #f(213.665 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -57.7071 71.6107 -67.9567 -64.072 -7.76087 -36.0396 186.39 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.597062 -0.802195 0.0) (0.802195 0.597062 0.0) (0.0 0.0 1.0)) pos #f(-429.587 410.535 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1067# #1062#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(205.944 -14.9509 -20.2598 54.3369 -12.0634 -70.0221 -12.0869 8.13637 -21.8977 45.1794 -83.0957 -50.0935 -12.3355 -33.2416 186.316 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.918168 -0.39619 0.0) (0.39619 0.918168 0.0) (0.0 0.0 1.0)) pos #f(-444.834 417.788 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1060# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.509 88.6189 5.91396 18.5463 -112.421 -182.142 -66.5824 165.237 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(250.29 63.8495 3.03436 18.5174 -104.988 -177.253 -73.9708 165.258 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997024 -0.077098 0.0) (0.077098 0.997024 0.0) (0.0 0.0 1.0)) pos #f(281.856 -105.424 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.936692 -0.350154 0.0) (0.350154 0.936692 0.0) (0.0 0.0 1.0)) pos #f(267.29 -106.679 0.0)) object-coords-index 12 object-coords #596# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1059# to #1049# cost 0)) arm :arms islands (#1051# #1062#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(220.061 -14.5679 -20.2598 52.7564 -10.8298 -106.823 -15.0894 180.0 -20.8575 32.829 -68.0516 -73.843 -10.5878 -26.5275 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1071=#s(extended-node plist ((:name . "r-0-4-9<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1071# to #1072=#s(extended-node plist ((:name . #1074="l-0-4-17")) arc-list (#s(costed-arc plist nil from #1072# to #1073=#s(extended-node plist ((:name . "r-0-4-1<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1073# to #1072# cost 0) #s(costed-arc plist nil from #1073# to #991# cost 0)) arm :arms islands (#1013# #1074#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(147.258 -14.0025 16.1951 167.513 -15.9955 -82.8856 -15.9185 180.0 -5.07928 9.35786 -43.2323 -92.897 -13.1681 -8.64693 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1072# to #1075=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1075# to #1072# cost 0) #s(costed-arc plist nil from #1075# to #995# cost 0)) arm :arms islands (#1016# #1074#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(81.4205 -17.44 23.097 -2.2713 -9.90619 -170.948 -8.63878 237.239 -8.13012 13.8705 -51.8971 -84.296 -6.9539 -24.9708 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1072# to #1076=#s(extended-node plist ((:name . "r-0-4-5<->-l-0-4-17")) arc-list (#s(costed-arc plist nil from #1076# to #1072# cost 0) #s(costed-arc plist nil from #1076# to #1026# cost 0)) arm :arms islands (#1028# #1074#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(153.883 -10.8507 16.406 165.325 -16.028 -77.2184 -15.1028 180.0 -18.5491 47.901 -91.5823 -77.1529 -15.4681 -9.5378 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1072# to #1071# cost 0) #s(costed-arc plist nil from #1072# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(201.232 84.9043 40.8508 106.004 -78.5362 8.14889 -5.73389 204.315 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(194.025 45.8214 43.1886 92.028 -65.8867 -6.92239 -5.72958 205.436 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.949891 -0.312582 0.0) (0.312582 0.949891 0.0) (0.0 0.0 1.0)) pos #f(61.9635 -6.56432 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.666342 -0.745646 0.0) (0.745646 0.666342 0.0) (0.0 0.0 1.0)) pos #f(79.9784 -10.2597 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1071# to #1049# cost 0)) arm :arms islands (#1051# #1074#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(158.409 -11.0909 15.6496 166.805 -18.0554 -77.5986 -17.5673 180.0 -20.0691 29.5453 -64.6653 -76.6496 -10.0231 -23.9617 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1077=#s(extended-node plist ((:name . "r-0-4-9<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1077# to #1078=#s(extended-node plist ((:name . #1080="l-1-4-5")) arc-list (#s(costed-arc plist nil from #1078# to #1079=#s(extended-node plist ((:name . "r-0-4-2<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1079# to #1078# cost 0) #s(costed-arc plist nil from #1079# to #995# cost 0)) arm :arms islands (#1016# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(113.356 2.82775 31.1633 111.311 -30.0297 -0.699931 -30.0 180.0 -8.74541 18.9468 -52.5486 -89.8178 -7.89007 -16.1782 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1081=#s(extended-node plist ((:name . "r-0-4-4<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1081# to #1078# cost 0) #s(costed-arc plist nil from #1081# to #999# cost 0)) arm :arms islands (#1007# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(104.607 3.90935 30.1417 110.719 -31.0987 -0.142947 -30.0 180.0 -16.0562 37.7016 -75.2619 -78.9018 -9.78417 -33.167 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1077# cost 0) #s(costed-arc plist nil from #1078# to #1082=#s(extended-node plist ((:name . "r-0-4-23<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1082# to #1078# cost 0) #s(costed-arc plist nil from #1082# to #1083=#s(extended-node plist ((:name . #1092="r-0-4-23")) arc-list (#s(costed-arc plist nil from #1083# to #1084=#s(extended-node plist ((:name . "r-0-4-23<->-l-0-4-18")) arc-list (#s(costed-arc plist nil from #1084# to #1085=#s(extended-node plist ((:name . #1091="l-0-4-18")) arc-list (#s(costed-arc plist nil from #1085# to #1084# cost 0) #s(costed-arc plist nil from #1085# to #1086=#s(extended-node plist ((:name . "r-2-4-15<->-l-0-4-18")) arc-list (#s(costed-arc plist nil from #1086# to #1085# cost 0) #s(costed-arc plist nil from #1086# to #1087=#s(extended-node plist ((:name . #1089="r-2-4-15")) arc-list (#s(costed-arc plist nil from #1087# to #1088=#s(extended-node plist ((:name . "r-2-4-15<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1088# to #993# cost 0) #s(costed-arc plist nil from #1088# to #1087# cost 0)) arm :arms islands (#1089# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(223.042 62.5862 45.5648 98.1824 -121.542 7.34138 -19.7195 180.0 -3.11821 14.7515 -126.23 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1087# to #1086# cost 0) #s(costed-arc plist nil from #1087# to #1090=#s(extended-node plist ((:name . "r-2-4-15<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1090# to #1078# cost 0) #s(costed-arc plist nil from #1090# to #1087# cost 0)) arm :arms islands (#1089# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(218.196 14.1124 57.4664 94.4038 -59.2176 53.685 -30.0 180.0 -3.27871 14.4272 -131.905 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1087# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(241.067 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.2744 17.0189 -132.122 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1089# #1091#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(236.135 -31.1755 -17.1341 50.5002 -30.1373 166.142 -15.371 180.0 -3.19171 16.3552 -129.338 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.605378 -0.795938 0.0) (0.795938 0.605378 0.0) (0.0 0.0 1.0)) pos #f(-177.749 353.98 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1085# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(208.26 49.766 0.253842 26.6428 -60.8354 0.407291 -11.579 197.571 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(209.442 36.9561 4.34827 4.7753 -61.9175 -17.2796 -5.73017 199.932 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.964708 -0.263321 0.0) (0.263321 0.964708 0.0) (0.0 0.0 1.0)) pos #f(140.35 -134.916 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.966144 -0.258004 0.0) (0.258004 0.966144 0.0) (0.0 0.0 1.0)) pos #f(134.629 -147.437 0.0)) object-coords-index 18 object-coords #782# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1084# to #1083# cost 0)) arm :arms islands (#1092# #1091#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.358 -14.1123 -19.4521 25.2387 -15.7887 10.7984 -14.5588 330.483 -16.6157 37.7375 -69.351 -32.5436 -14.6266 -28.622 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1083# to #1093=#s(extended-node plist ((:name . "r-0-4-23<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1093# to #1094=#s(extended-node plist ((:name . #1096="l-1-4-4")) arc-list (#s(costed-arc plist nil from #1094# to #1095=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1095# to #1094# cost 0) #s(costed-arc plist nil from #1095# to #1003# cost 0)) arm :arms islands (#1009# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(257.54 5.23008 30.7096 100.372 -32.8778 9.91411 -30.0 180.0 -15.8011 40.2551 -72.4092 -83.0718 -9.76344 -24.5958 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1094# to #1093# cost 0) #s(costed-arc plist nil from #1094# to #1097=#s(extended-node plist ((:name . "r-2-4-7<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1097# to #1094# cost 0) #s(costed-arc plist nil from #1097# to #1098=#s(extended-node plist ((:name . #1100="r-2-4-7")) arc-list (#s(costed-arc plist nil from #1098# to #1097# cost 0) #s(costed-arc plist nil from #1098# to #1099=#s(extended-node plist ((:name . "r-2-4-7<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1099# to #1078# cost 0) #s(costed-arc plist nil from #1099# to #1098# cost 0)) arm :arms islands (#1100# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(246.333 -11.8224 60.8935 50.6624 -33.3567 63.5191 -30.0 180.0 7.80858 -20.2598 -153.62 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1098# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(254.466 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.03632 -19.9764 -145.781 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1100# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(254.693 -8.40775 64.7995 34.7012 -84.6723 75.765 -30.0 180.0 7.79586 -19.6799 -153.816 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.833832 -0.552018 0.0) (0.552018 0.833832 0.0) (0.0 0.0 1.0)) pos #f(-352.457 486.213 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1094# to #1101=#s(extended-node plist ((:name . "r-2-4-11<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1101# to #1094# cost 0) #s(costed-arc plist nil from #1101# to #1102=#s(extended-node plist ((:name . #1103="r-2-4-11")) arc-list (#s(costed-arc plist nil from #1102# to #1101# cost 0) #s(costed-arc plist nil from #1102# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(118.178 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.9583 44.9129 -149.187 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.606393 -0.795165 0.0) (0.795165 0.606393 0.0) (0.0 0.0 1.0)) pos #f(-351.429 517.864 0.0)) base-coords-optimized nil object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1103# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(110.804 -30.0903 49.7992 23.0618 -98.1595 69.4483 -30.0 180.0 -12.0768 43.8237 -147.426 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.606393 -0.795165 0.0) (0.795165 0.606393 0.0) (0.0 0.0 1.0)) pos #f(-351.429 517.864 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1094# to #1104=#s(extended-node plist ((:name . "r-2-4-14<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1104# to #1094# cost 0) #s(costed-arc plist nil from #1104# to #1105=#s(extended-node plist ((:name . #1107="r-2-4-14")) arc-list (#s(costed-arc plist nil from #1105# to #1104# cost 0) #s(costed-arc plist nil from #1105# to #1106=#s(extended-node plist ((:name . "r-2-4-14<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1106# to #1078# cost 0) #s(costed-arc plist nil from #1106# to #1105# cost 0)) arm :arms islands (#1107# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(262.611 -0.028556 54.1585 109.138 -36.6509 31.2105 -30.0 180.0 -6.88293 0.625961 -144.106 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1105# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(255.314 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.96066 -0.174426 -146.047 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1107# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(271.987 11.6439 58.1529 73.4793 -84.5942 59.2431 -30.0 180.0 -6.87099 1.68428 -143.752 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.622567 -0.782567 0.0) (0.782567 0.622567 0.0) (0.0 0.0 1.0)) pos #f(-218.251 376.693 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1094# to #1108=#s(extended-node plist ((:name . "r-2-4-17<->-l-1-4-4")) arc-list (#s(costed-arc plist nil from #1108# to #1094# cost 0) #s(costed-arc plist nil from #1108# to #1109=#s(extended-node plist ((:name . #1110="r-2-4-17")) arc-list (#s(costed-arc plist nil from #1109# to #1108# cost 0) #s(costed-arc plist nil from #1109# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(128.411 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -7.35823 46.7487 -141.435 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(125.348 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -10.1464 46.358 -144.808 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.351614 -0.936145 0.0) (0.936145 0.351614 0.0) (0.0 0.0 1.0)) pos #f(-53.1241 347.194 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.290881 -0.956759 0.0) (0.956759 0.290881 0.0) (0.0 0.0 1.0)) pos #f(-54.1666 330.136 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1110# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(136.029 16.9584 48.5699 71.5477 -117.442 42.1262 -30.0 180.0 -7.30759 47.3346 -140.717 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.351614 -0.936145 0.0) (0.936145 0.351614 0.0) (0.0 0.0 1.0)) pos #f(-53.1241 347.194 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1094# to #980# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(62.2507 95.3678 30.7009 76.5296 -121.449 21.295 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.991351 -0.131237 0.0) (0.131237 0.991351 0.0) (0.0 0.0 1.0)) pos #f(-63.6184 111.559 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1093# to #1083# cost 0)) arm :arms islands (#1092# #1096#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(228.377 44.5623 59.7248 75.7909 -103.28 58.8479 -30.0 180.0 -12.7887 39.2674 -69.2306 -26.3702 -13.6045 -22.0903 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1083# to #1082# cost 0) #s(costed-arc plist nil from #1083# to #1111=#s(extended-node plist ((:name . "r-0-4-23<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1111# to #985# cost 0) #s(costed-arc plist nil from #1111# to #1083# cost 0)) arm :arms islands (#1092# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.923 12.0668 59.5142 153.789 -120.0 20.0 -30.0 180.0 -14.9955 39.0575 -68.8815 -30.4191 -13.1131 -24.2434 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1083# to #1113=#s(extended-node plist ((:name . "r-0-4-23<->-l-2-4-10")) arc-list (#s(costed-arc plist nil from #1113# to #1114=#s(extended-node plist ((:name . #1117="l-2-4-10")) arc-list (#s(costed-arc plist nil from #1114# to #1115=#s(extended-node plist ((:name . "r-0-4-18<->-l-2-4-10")) arc-list (#s(costed-arc plist nil from #1115# to #1114# cost 0) #s(costed-arc plist nil from #1115# to #983# cost 0)) arm :arms islands (#1116# #1117#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.838 -9.72093 31.2242 156.384 -120.0 20.0 -30.0 180.0 -8.08634 -11.0408 -27.7418 -31.0473 3.09213 -22.1505 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1114# to #1113# cost 0) #s(costed-arc plist nil from #1114# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(233.134 54.4709 37.5838 141.912 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(183.818 28.1173 30.7957 139.6 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999614 -0.0278 0.0) (0.0278 0.999614 0.0) (0.0 0.0 1.0)) pos #f(-76.3545 48.1345 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.908579 -0.417712 0.0) (0.417712 0.908579 0.0) (0.0 0.0 1.0)) pos #f(-49.3484 75.7463 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1113# to #1083# cost 0)) arm :arms islands (#1092# #1117#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(232.772 -5.29839 37.4907 156.389 -120.0 20.0 -30.0 180.0 -12.4589 39.4864 -69.022 -26.1528 -13.2492 -20.8523 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1083# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(206.046 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.7822 39.4271 -68.8895 -30.5944 -12.5166 -22.1789 186.497 0.0 0.0) robot-pose-optimized #f(205.784 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.5294 51.3384 -68.1113 -44.7594 -11.7783 -39.817 186.53 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.500998 -0.865448 0.0) (0.865448 0.500998 0.0) (0.0 0.0 1.0)) pos #f(-175.91 292.697 0.0)) object-coords-index 23 object-coords #937# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1092# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(220.779 42.0129 59.4948 98.9192 -61.8136 55.156 -30.0 180.0 -13.4248 39.2304 -69.1188 -27.4886 -13.5116 -22.7694 186.497 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8666 -0.499003 0.0) (0.499003 0.8666 0.0) (0.0 0.0 1.0)) pos #f(-188.88 300.665 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1099# cost 0) #s(costed-arc plist nil from #1078# to #1118=#s(extended-node plist ((:name . "r-2-4-9<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1118# to #1078# cost 0) #s(costed-arc plist nil from #1118# to #1119=#s(extended-node plist ((:name . #1120="r-2-4-9")) arc-list (#s(costed-arc plist nil from #1119# to #1118# cost 0) #s(costed-arc plist nil from #1119# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(222.305 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 12.5329 15.0194 -136.913 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.874616 -0.484816 0.0) (0.484816 0.874616 0.0) (0.0 0.0 1.0)) pos #f(-357.686 475.394 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1120# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(190.176 -3.48836 65.6437 40.5942 -59.0075 74.4189 -30.0 180.0 12.7274 11.2748 -136.614 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.874616 -0.484816 0.0) (0.484816 0.874616 0.0) (0.0 0.0 1.0)) pos #f(-357.686 475.394 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1121=#s(extended-node plist ((:name . "r-2-4-10<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1121# to #1078# cost 0) #s(costed-arc plist nil from #1121# to #1122=#s(extended-node plist ((:name . #1123="r-2-4-10")) arc-list (#s(costed-arc plist nil from #1122# to #1121# cost 0) #s(costed-arc plist nil from #1122# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(173.237 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 4.80869 29.5343 -143.003 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(260.992 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.061 42.2014 -167.108 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.788148 -0.615486 0.0) (0.615486 0.788148 0.0) (0.0 0.0 1.0)) pos #f(-346.678 484.672 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.374858 -0.927082 0.0) (0.927082 0.374858 0.0) (0.0 0.0 1.0)) pos #f(-351.857 442.563 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1123# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.964 -10.2672 63.8248 41.9078 -62.3006 73.299 -30.0 180.0 4.85614 29.2614 -142.42 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.788148 -0.615486 0.0) (0.615486 0.788148 0.0) (0.0 0.0 1.0)) pos #f(-346.678 484.672 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1124=#s(extended-node plist ((:name . "r-2-4-13<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1124# to #1078# cost 0) #s(costed-arc plist nil from #1124# to #1125=#s(extended-node plist ((:name . #1127="r-2-4-13")) arc-list (#s(costed-arc plist nil from #1125# to #1126=#s(extended-node plist ((:name . "r-2-4-13<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1126# to #993# cost 0) #s(costed-arc plist nil from #1126# to #1125# cost 0)) arm :arms islands (#1127# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(256.892 32.5675 54.8128 114.122 -121.542 278.433 -96.9631 180.0 -7.53601 -19.3936 -157.53 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1125# to #1128=#s(extended-node plist ((:name . "r-2-4-13<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1128# to #1021# cost 0) #s(costed-arc plist nil from #1128# to #1125# cost 0)) arm :arms islands (#1127# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(254.004 41.6345 57.3808 125.485 -121.53 236.552 -97.8262 180.0 -7.56924 -19.6946 -158.356 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1125# to #1124# cost 0) #s(costed-arc plist nil from #1125# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(257.856 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.75437 -19.8448 -136.885 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1127# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(248.679 6.27574 54.4091 105.375 -45.7485 42.3384 -30.0 180.0 -7.07386 -20.2598 -146.211 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.55482 -0.83197 0.0) (0.83197 0.55482 0.0) (0.0 0.0 1.0)) pos #f(-172.938 359.305 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #1106# cost 0) #s(costed-arc plist nil from #1078# to #1090# cost 0) #s(costed-arc plist nil from #1078# to #1129=#s(extended-node plist ((:name . "r-2-4-20<->-l-1-4-5")) arc-list (#s(costed-arc plist nil from #1129# to #1078# cost 0) #s(costed-arc plist nil from #1129# to #1130=#s(extended-node plist ((:name . #1132="r-2-4-20")) arc-list (#s(costed-arc plist nil from #1130# to #1129# cost 0) #s(costed-arc plist nil from #1130# to #1131=#s(extended-node plist ((:name . "r-2-4-20<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1131# to #985# cost 0) #s(costed-arc plist nil from #1131# to #1130# cost 0)) arm :arms islands (#1132# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.183 1.5202 56.9374 169.463 -120.0 20.0 -30.0 180.0 -15.4571 -8.28989 -134.797 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1130# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(257.054 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -15.4652 -0.37129 -134.036 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1132# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.964 23.5515 44.7723 127.467 -62.3932 38.1482 -30.0 180.0 -15.4596 -6.6475 -134.648 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.455726 -0.89012 0.0) (0.89012 0.455726 0.0) (0.0 0.0 1.0)) pos #f(-33.7271 297.797 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1078# to #980# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(58.4131 101.793 56.7124 108.428 -121.156 56.8688 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.983878 -0.178838 0.0) (0.178838 0.983878 0.0) (0.0 0.0 1.0)) pos #f(-44.5368 255.142 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1077# to #1049# cost 0)) arm :arms islands (#1051# #1080#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(150.117 0.632342 28.719 155.244 -39.3469 -40.1878 -30.0 180.0 -19.9286 29.3757 -64.0026 -77.4428 -9.95811 -22.549 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #1133=#s(extended-node plist ((:name . "r-0-4-9<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1133# to #989# cost 0) #s(costed-arc plist nil from #1133# to #1049# cost 0)) arm :arms islands (#1051# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.181 -5.85829 33.3673 165.004 -120.0 20.0 -30.0 180.0 -20.7091 33.3387 -66.3019 -76.8409 -10.352 -21.3778 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1049# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(221.735 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.8691 35.3723 -66.5055 -77.3775 -10.4651 -18.9348 186.473 0.0 0.0) robot-pose-optimized #f(222.462 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.9416 36.9871 -73.9258 -90.2078 -17.2614 -19.8415 186.999 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.603558 -0.797319 0.0) (0.797319 0.603558 0.0) (0.0 0.0 1.0)) pos #f(-449.838 364.127 0.0)) object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1051# #1045#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(197.675 6.61796 55.1745 73.8195 -51.8974 -102.154 -65.8711 180.0 -20.5122 31.0541 -67.1412 -73.7692 -10.3942 -28.1048 186.473 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921356 -0.38872 0.0) (0.38872 0.921356 0.0) (0.0 0.0 1.0)) pos #f(-449.266 379.804 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1043# to #1042# cost 0) #s(costed-arc plist nil from #1043# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(200.468 93.1696 36.5922 113.721 -84.426 5.09889 -5.73357 201.317 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(193.013 55.7753 42.8473 98.2917 -72.4874 -8.80078 -5.73011 203.238 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.937875 -0.346972 0.0) (0.346972 0.937875 0.0) (0.0 0.0 1.0)) pos #f(-39.8924 23.3223 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.638738 -0.769425 0.0) (0.769425 0.638738 0.0) (0.0 0.0 1.0)) pos #f(-21.5026 20.2465 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1042# to #1037# cost 0)) arm :arms islands (#1039# #1045#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(201.82 6.60179 54.4936 75.376 -52.697 -104.885 -63.1339 180.0 -21.9393 39.2176 -75.0408 -63.1599 -10.7231 -32.365 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1037# to #1063# cost 0) #s(costed-arc plist nil from #1037# to #1134=#s(extended-node plist ((:name . "r-0-4-10<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1134# to #989# cost 0) #s(costed-arc plist nil from #1134# to #1037# cost 0)) arm :arms islands (#1039# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.304 -7.82044 32.1028 154.147 -120.0 20.0 -30.0 180.0 -22.2509 41.1095 -73.0134 -66.3318 -10.3274 -27.3297 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1037# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.821 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.1292 42.9927 -73.0373 -65.7018 -10.404 -24.9909 186.754 0.0 0.0) robot-pose-optimized #f(218.7 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -56.8678 58.5756 -70.9283 -79.2507 -11.6712 -28.9301 187.263 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.603007 -0.797736 0.0) (0.797736 0.603007 0.0) (0.0 0.0 1.0)) pos #f(-446.195 381.465 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1039# #1033#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(204.027 9.49684 38.2932 71.3156 -76.2735 -93.7292 -73.8711 180.0 -21.8798 39.1919 -75.1879 -62.795 -10.7608 -32.7414 186.754 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921087 -0.389356 0.0) (0.389356 0.921087 0.0) (0.0 0.0 1.0)) pos #f(-456.891 391.742 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1031# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.252 108.966 46.2713 91.1067 -121.36 -13.6644 -5.72958 186.032 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(219.18 51.9528 74.2629 50.8394 -112.612 -34.5122 -5.72958 190.566 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.945027 -0.326991 0.0) (0.326991 0.945027 0.0) (0.0 0.0 1.0)) pos #f(30.0358 98.9399 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.654922 -0.755697 0.0) (0.755697 0.654922 0.0) (0.0 0.0 1.0)) pos #f(55.3201 81.4293 0.0)) object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1030# to #1026# cost 0)) arm :arms islands (#1028# #1033#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(203.865 9.7326 38.9602 69.0412 -73.9265 -90.2581 -76.3217 180.0 -16.1922 46.9747 -94.0741 -68.3421 -15.841 -17.7957 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1026# to #1061# cost 0) #s(costed-arc plist nil from #1026# to #1076# cost 0) #s(costed-arc plist nil from #1026# to #1135=#s(extended-node plist ((:name . "r-0-4-5<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1135# to #989# cost 0) #s(costed-arc plist nil from #1135# to #1026# cost 0)) arm :arms islands (#1028# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(183.01 -5.57107 30.5327 147.911 -120.0 20.0 -30.0 180.0 -17.9765 49.5314 -92.1315 -75.4789 -15.5308 -5.73413 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1026# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(211.468 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -17.0309 50.9736 -92.0256 -72.2227 -15.574 -5.73877 180.694 0.0 0.0) robot-pose-optimized #f(203.997 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -50.4863 74.2725 -84.588 -82.1455 -14.9248 -5.72958 180.724 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.652115 -0.75812 0.0) (0.75812 0.652115 0.0) (0.0 0.0 1.0)) pos #f(-440.841 366.979 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1028# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.874 31.151 62.1602 87.1532 -85.9918 -75.5239 -90.0026 180.0 -16.0826 45.7065 -94.0087 -67.9293 -15.8412 -21.9465 180.694 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.923516 -0.383559 0.0) (0.383559 0.923516 0.0) (0.0 0.0 1.0)) pos #f(-456.011 370.355 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #1020# cost 0) #s(costed-arc plist nil from #1021# to #1052# cost 0) #s(costed-arc plist nil from #1021# to #1040# cost 0) #s(costed-arc plist nil from #1021# to #1066# cost 0) #s(costed-arc plist nil from #1021# to #1136=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1136# to #1021# cost 0) #s(costed-arc plist nil from #1136# to #1137=#s(extended-node plist ((:name . #1139="r-0-4-22")) arc-list (#s(costed-arc plist nil from #1137# to #1136# cost 0) #s(costed-arc plist nil from #1137# to #1138=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1138# to #1011# cost 0) #s(costed-arc plist nil from #1138# to #1137# cost 0)) arm :arms islands (#1139# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(171.587 43.2518 55.7073 131.063 -74.7903 -64.2082 -91.0354 36.2181 -27.2097 26.0328 -65.1586 -36.3837 -23.1008 -22.6929 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1137# to #1140=#s(extended-node plist ((:name . "r-0-4-22<->-l-0-4-20")) arc-list (#s(costed-arc plist nil from #1140# to #1141=#s(extended-node plist ((:name . #1142="l-0-4-20")) arc-list (#s(costed-arc plist nil from #1141# to #1140# cost 0) #s(costed-arc plist nil from #1141# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(231.289 102.301 -8.31778 90.3823 -99.3257 -18.7944 -6.72254 180.637 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(231.52 59.042 -1.55832 87.0865 -82.1236 -29.97 -5.73015 186.959 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.993151 -0.116839 0.0) (0.116839 0.993151 0.0) (0.0 0.0 1.0)) pos #f(264.559 -120.849 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.801678 -0.597756 0.0) (0.597756 0.801678 0.0) (0.0 0.0 1.0)) pos #f(241.242 -126.198 0.0)) object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1140# to #1137# cost 0)) arm :arms islands (#1139# #1142#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(196.082 -24.3151 -7.23102 139.026 -8.59437 -105.83 -9.41962 36.2181 -27.0032 28.3337 -65.2939 -38.7549 -22.8342 -13.9658 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1137# to #1143=#s(extended-node plist ((:name . "r-0-4-22<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1143# to #985# cost 0) #s(costed-arc plist nil from #1143# to #1137# cost 0)) arm :arms islands (#1139# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.48 -12.7216 50.5021 163.569 -120.0 20.0 -30.0 180.0 -28.454 27.7129 -64.35 -46.1027 -22.4894 -5.74442 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1137# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.135 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.3512 30.1564 -65.1028 -40.2807 -22.6081 -5.73662 173.918 0.0 0.0) robot-pose-optimized #f(217.347 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -66.8462 39.3289 -64.4721 -53.5969 -22.1723 -29.276 173.503 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.501214 -0.865323 0.0) (0.865323 0.501214 0.0) (0.0 0.0 1.0)) pos #f(-331.582 410.564 0.0)) object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1139# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(174.469 38.6077 48.3912 119.662 -92.2845 -55.7261 -95.3616 36.2181 -27.1158 26.1163 -65.2301 -36.0872 -23.1445 -22.7775 173.918 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.866722 -0.498791 0.0) (0.498791 0.866722 0.0) (0.0 0.0 1.0)) pos #f(-336.71 422.468 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #1144=#s(extended-node plist ((:name . "r-2-4-1<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1144# to #1021# cost 0) #s(costed-arc plist nil from #1144# to #1145=#s(extended-node plist ((:name . #1147="r-2-4-1")) arc-list (#s(costed-arc plist nil from #1145# to #1144# cost 0) #s(costed-arc plist nil from #1145# to #1146=#s(extended-node plist ((:name . "r-2-4-1<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1146# to #1011# cost 0) #s(costed-arc plist nil from #1146# to #1145# cost 0)) arm :arms islands (#1147# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(257.195 29.6727 51.0828 135.494 -63.6374 -88.731 -87.9982 40.0434 29.5902 -19.4697 -149.462 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1145# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(251.731 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.6256 -20.074 -144.922 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1147# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(259.245 30.8014 42.8001 128.155 -81.5127 -77.6804 -97.1217 40.0434 29.5951 -19.2958 -149.256 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979579 -0.201058 0.0) (0.201058 0.979579 0.0) (0.0 0.0 1.0)) pos #f(-476.738 531.938 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #1128# cost 0) #s(costed-arc plist nil from #1021# to #1148=#s(extended-node plist ((:name . "r-2-4-19<->-l-0-4-4")) arc-list (#s(costed-arc plist nil from #1148# to #1021# cost 0) #s(costed-arc plist nil from #1148# to #1149=#s(extended-node plist ((:name . #1151="r-2-4-19")) arc-list (#s(costed-arc plist nil from #1149# to #1148# cost 0) #s(costed-arc plist nil from #1149# to #1150=#s(extended-node plist ((:name . "r-2-4-19<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1150# to #1011# cost 0) #s(costed-arc plist nil from #1150# to #1149# cost 0)) arm :arms islands (#1151# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(258.506 63.6162 53.8195 122.213 -55.2906 -2.4144 -83.3694 180.0 -15.8735 -19.4565 -143.926 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1149# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(260.245 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -15.4084 -19.8194 -129.742 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1151# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(260.31 63.9953 50.1968 113.682 -75.7536 -6.02288 -90.9863 180.0 -15.8672 -19.3122 -143.718 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.410722 -0.911761 0.0) (0.911761 0.410722 0.0) (0.0 0.0 1.0)) pos #f(3.38516 297.401 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1021# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(205.654 108.746 25.6804 110.91 -105.844 -3.88214 -5.73816 191.582 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(205.852 72.5689 45.223 92.1329 -93.458 -22.0148 -5.73008 193.619 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.929549 -0.368698 0.0) (0.368698 0.929549 0.0) (0.0 0.0 1.0)) pos #f(-119.948 62.6042 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.620665 -0.784076 0.0) (0.784076 0.620665 0.0) (0.0 0.0 1.0)) pos #f(-99.709 57.8371 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1020# to #1019# cost 0)) arm :arms islands (#1152# #1023#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(172.985 37.3144 50.9787 105.398 -82.7806 -50.6006 -89.4884 17.3821 -13.197 10.5112 -41.1764 -76.8584 -13.0636 -23.9405 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1019# to #1018# cost 0) #s(costed-arc plist nil from #1019# to #1153=#s(extended-node plist ((:name . "r-0-4-7<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1153# to #989# cost 0) #s(costed-arc plist nil from #1153# to #1019# cost 0)) arm :arms islands (#1152# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(225.636 -8.42204 37.7558 190.462 -120.0 20.0 -30.0 180.0 -13.844 18.7893 -42.4376 -87.8852 -13.5669 -6.57426 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1019# to #1154=#s(extended-node plist ((:name . "r-0-4-7<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1154# to #985# cost 0) #s(costed-arc plist nil from #1154# to #1019# cost 0)) arm :arms islands (#1152# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(89.0713 -8.30288 40.4454 192.513 -120.0 20.0 -30.0 180.0 -8.51436 5.35395 -34.7429 -77.5924 -13.4609 -6.26344 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1019# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(226.777 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.2485 19.6417 -41.5004 -88.3835 -13.8182 -5.7395 180.334 0.0 0.0) robot-pose-optimized #f(227.634 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -49.3355 10.0543 -54.5441 -98.5 -24.525 -10.4927 179.869 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.642559 -0.766236 0.0) (0.766236 0.642559 0.0) (0.0 0.0 1.0)) pos #f(-409.565 410.88 0.0)) object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1152# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(170.595 41.3078 60.4275 113.119 -65.7975 -56.1165 -84.9016 17.3821 -13.0811 10.3977 -40.9855 -76.9268 -13.0593 -23.436 180.334 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916889 -0.399143 0.0) (0.399143 0.916889 0.0) (0.0 0.0 1.0)) pos #f(-421.12 418.553 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1011# to #1053# cost 0) #s(costed-arc plist nil from #1011# to #1041# cost 0) #s(costed-arc plist nil from #1011# to #1068# cost 0) #s(costed-arc plist nil from #1011# to #1138# cost 0) #s(costed-arc plist nil from #1011# to #1146# cost 0) #s(costed-arc plist nil from #1011# to #1150# cost 0) #s(costed-arc plist nil from #1011# to #1155=#s(extended-node plist ((:name . "r-2-4-21<->-l-0-4-5")) arc-list (#s(costed-arc plist nil from #1155# to #1011# cost 0) #s(costed-arc plist nil from #1155# to #1156=#s(extended-node plist ((:name . #1157="r-2-4-21")) arc-list (#s(costed-arc plist nil from #1156# to #1155# cost 0) #s(costed-arc plist nil from #1156# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.055 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.1219 18.1606 -144.687 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.480694 -0.876888 0.0) (0.876888 0.480694 0.0) (0.0 0.0 1.0)) pos #f(5.04264 294.135 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1157# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(236.325 68.1396 53.7417 124.987 -57.1264 -8.35589 -89.0781 180.0 -10.8657 16.7126 -137.049 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.480694 -0.876888 0.0) (0.876888 0.480694 0.0) (0.0 0.0 1.0)) pos #f(5.04264 294.135 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1011# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(152.605 116.65 14.11 148.29 -121.305 -27.3991 -5.72958 175.975 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(147.587 122.349 60.3131 131.684 -106.227 -26.8189 -5.72958 177.282 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.928429 -0.37151 0.0) (0.37151 0.928429 0.0) (0.0 0.0 1.0)) pos #f(8.29461 275.382 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.61829 -0.78595 0.0) (0.78595 0.61829 0.0) (0.0 0.0 1.0)) pos #f(36.2626 266.056 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1010# to #1003# cost 0)) arm :arms islands (#1009# #1014#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(191.827 -17.2315 69.4826 3.6514 -81.8799 -127.537 -93.1315 222.959 -14.1786 33.2265 -69.9801 -81.4551 -9.06657 -33.1578 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1158=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-6")) arc-list (#s(costed-arc plist nil from #1158# to #1159=#s(extended-node plist ((:name . #1161="l-0-4-6")) arc-list (#s(costed-arc plist nil from #1159# to #1158# cost 0) #s(costed-arc plist nil from #1159# to #1160=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-6")) arc-list (#s(costed-arc plist nil from #1160# to #1159# cost 0) #s(costed-arc plist nil from #1160# to #999# cost 0)) arm :arms islands (#1007# #1161#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(161.66 -10.4984 -7.13679 4.64354 -60.3768 -176.398 -33.1085 234.959 -16.1056 36.1283 -81.3842 -72.4459 -11.0423 -39.4736 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1159# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(238.475 121.416 -10.6171 46.1817 -107.696 -32.0474 -5.73349 170.675 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(240.725 87.6496 -19.0094 56.1135 -96.9478 -12.7478 -5.7303 169.576 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.978708 -0.205256 0.0) (0.205256 0.978708 0.0) (0.0 0.0 1.0)) pos #f(165.385 64.8203 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.744958 -0.667111 0.0) (0.667111 0.744958 0.0) (0.0 0.0 1.0)) pos #f(184.563 54.1602 0.0)) object-coords-index 6 object-coords #410# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1158# to #1003# cost 0)) arm :arms islands (#1009# #1161#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(215.349 -14.6657 -1.08472 5.50572 -64.7179 -140.779 -40.3734 222.959 -14.6785 35.2312 -71.1071 -81.2753 -9.35903 -32.0198 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1162=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-7")) arc-list (#s(costed-arc plist nil from #1162# to #1163=#s(extended-node plist ((:name . #1165="l-0-4-7")) arc-list (#s(costed-arc plist nil from #1163# to #1162# cost 0) #s(costed-arc plist nil from #1163# to #1164=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-7")) arc-list (#s(costed-arc plist nil from #1164# to #1163# cost 0) #s(costed-arc plist nil from #1164# to #999# cost 0)) arm :arms islands (#1007# #1165#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(155.365 -9.96606 13.8575 4.85144 -80.8973 -176.298 -36.827 234.959 -16.0892 35.8889 -81.003 -72.8563 -10.9356 -39.4554 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1163# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(235.597 114.316 -2.69056 61.9504 -121.492 -22.4083 -5.72958 175.36 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(235.094 79.3394 -9.47244 68.5898 -108.621 -11.1032 -5.72958 175.385 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.954005 -0.299791 0.0) (0.299791 0.954005 0.0) (0.0 0.0 1.0)) pos #f(111.88 94.379 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.676305 -0.736622 0.0) (0.736622 0.676305 0.0) (0.0 0.0 1.0)) pos #f(136.251 77.9852 0.0)) object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1162# to #1003# cost 0)) arm :arms islands (#1009# #1165#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(213.412 -17.2803 17.9382 2.5884 -81.0662 -136.926 -47.5081 222.959 -14.66 35.1854 -70.9662 -81.4683 -9.33308 -31.7565 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1166=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-8")) arc-list (#s(costed-arc plist nil from #1166# to #1167=#s(extended-node plist ((:name . #1169="l-0-4-8")) arc-list (#s(costed-arc plist nil from #1167# to #1166# cost 0) #s(costed-arc plist nil from #1167# to #1168=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-8")) arc-list (#s(costed-arc plist nil from #1168# to #1167# cost 0) #s(costed-arc plist nil from #1168# to #999# cost 0)) arm :arms islands (#1007# #1169#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(153.366 -9.86112 32.305 4.86057 -91.6851 -176.234 -38.5545 234.959 -16.0954 35.8355 -80.8746 -73.0258 -10.8998 -39.3686 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1167# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.806 113.517 -8.54462 86.5594 -121.449 -34.1429 -5.72958 163.77 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(226.495 75.2129 -9.40045 90.2221 -107.35 -53.7948 -5.72958 165.073 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.92075 -0.390154 0.0) (0.390154 0.92075 0.0) (0.0 0.0 1.0)) pos #f(128.474 54.5924 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.602315 -0.798258 0.0) (0.798258 0.602315 0.0) (0.0 0.0 1.0)) pos #f(152.112 32.2518 0.0)) object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1166# to #1003# cost 0)) arm :arms islands (#1009# #1169#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(212.566 -19.2466 34.2853 0.335675 -88.3281 -134.948 -51.8525 222.959 -14.6635 35.2066 -70.8922 -81.6265 -9.3214 -31.4859 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1047# cost 0) #s(costed-arc plist nil from #1003# to #1170=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-13")) arc-list (#s(costed-arc plist nil from #1170# to #1171=#s(extended-node plist ((:name . #1173="l-0-4-13")) arc-list (#s(costed-arc plist nil from #1171# to #1170# cost 0) #s(costed-arc plist nil from #1171# to #1172=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-13")) arc-list (#s(costed-arc plist nil from #1172# to #1171# cost 0) #s(costed-arc plist nil from #1172# to #999# cost 0)) arm :arms islands (#1007# #1173#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(164.027 -16.3529 -13.2447 1.92795 -12.1365 -177.17 -11.1643 234.959 -16.2759 36.7167 -81.2794 -72.8717 -11.0212 -38.356 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1171# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(232.096 108.537 -7.25042 68.1952 -107.061 -24.3222 -6.67083 175.849 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(233.785 68.9518 -3.92492 69.0135 -94.8123 -31.9458 -5.7308 179.642 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.977757 -0.209741 0.0) (0.209741 0.977757 0.0) (0.0 0.0 1.0)) pos #f(204.238 -33.8812 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.741892 -0.67052 0.0) (0.67052 0.741892 0.0) (0.0 0.0 1.0)) pos #f(219.842 -43.9578 0.0)) object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1170# to #1003# cost 0)) arm :arms islands (#1009# #1173#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(221.131 -18.4068 -4.99131 -2.54158 -23.051 -145.048 -19.0538 222.959 -14.9538 36.3714 -71.1521 -82.3042 -9.40231 -29.4297 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1174=#s(extended-node plist ((:name . "r-0-4-3<->-l-0-4-14")) arc-list (#s(costed-arc plist nil from #1174# to #1175=#s(extended-node plist ((:name . #1177="l-0-4-14")) arc-list (#s(costed-arc plist nil from #1175# to #1174# cost 0) #s(costed-arc plist nil from #1175# to #1176=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-14")) arc-list (#s(costed-arc plist nil from #1176# to #1175# cost 0) #s(costed-arc plist nil from #1176# to #999# cost 0)) arm :arms islands (#1007# #1177#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(82.9881 -16.3927 0.616661 0.790509 -29.2072 -175.762 -13.8603 234.959 -15.5161 33.1343 -76.1848 -77.1399 -9.66663 -38.6643 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1175# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.776 113.834 -8.2425 87.4707 -121.489 -23.8365 -5.72958 181.49 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(235.381 71.7847 -4.14908 88.3765 -105.722 -38.2321 -5.72958 191.171 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.955375 -0.295397 0.0) (0.295397 0.955375 0.0) (0.0 0.0 1.0)) pos #f(265.058 23.6767 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.679683 -0.733506 0.0) (0.733506 0.679683 0.0) (0.0 0.0 1.0)) pos #f(255.563 1.03266 0.0)) object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1174# to #1003# cost 0)) arm :arms islands (#1009# #1177#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(219.686 -20.4604 11.8123 -6.33512 -35.7437 -140.626 -23.2952 222.959 -14.9464 36.3683 -71.0383 -82.5073 -9.38329 -29.1091 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1178=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-1")) arc-list (#s(costed-arc plist nil from #1178# to #1179=#s(extended-node plist ((:name . #1180="l-1-4-1")) arc-list (#s(costed-arc plist nil from #1179# to #1178# cost 0) #s(costed-arc plist nil from #1179# to #980# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(225.314 114.401 -16.0527 38.0614 -120.556 -46.5306 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.953711 -0.300724 0.0) (0.300724 0.953711 0.0) (0.0 0.0 1.0)) pos #f(203.568 196.288 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1178# to #1003# cost 0)) arm :arms islands (#1009# #1180#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(271.222 0.092167 0.019969 17.4651 -64.8675 53.1458 -30.0 180.0 -15.9816 40.7003 -73.3076 -81.9248 -9.91219 -25.6364 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1181=#s(extended-node plist ((:name . "r-0-4-3<->-l-1-4-2")) arc-list (#s(costed-arc plist nil from #1181# to #1182=#s(extended-node plist ((:name . #1183="l-1-4-2")) arc-list (#s(costed-arc plist nil from #1182# to #1181# cost 0) #s(costed-arc plist nil from #1182# to #980# cost 1)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 4 door-angle -100 solved t robot-pose #f(191.898 98.6325 3.85677 50.9616 -121.541 -19.0788 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.949702 -0.313155 0.0) (0.313155 0.949702 0.0) (0.0 0.0 1.0)) pos #f(105.533 112.24 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1181# to #1003# cost 0)) arm :arms islands (#1009# #1183#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(269.817 2.67607 20.2531 24.5719 -74.0912 55.1304 -30.0 180.0 -15.9857 40.7159 -73.2052 -82.1762 -9.89512 -25.2391 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #1095# cost 0) #s(costed-arc plist nil from #1003# to #1184=#s(extended-node plist ((:name . "r-0-4-3<->-l-2-4-2")) arc-list (#s(costed-arc plist nil from #1184# to #1185=#s(extended-node plist ((:name . #1187="l-2-4-2")) arc-list (#s(costed-arc plist nil from #1185# to #1184# cost 0) #s(costed-arc plist nil from #1185# to #1186=#s(extended-node plist ((:name . "r-0-4-4<->-l-2-4-2")) arc-list (#s(costed-arc plist nil from #1186# to #1185# cost 0) #s(costed-arc plist nil from #1186# to #999# cost 0)) arm :arms islands (#1007# #1187#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(235.16 -6.94513 -1.551 142.957 -120.0 20.0 -30.0 180.0 -17.1096 45.3098 -80.8838 -72.3409 -11.2571 -28.6356 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1185# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(245.645 69.7838 -1.21635 148.803 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997313 -0.073259 0.0) (0.073259 0.997313 0.0) (0.0 0.0 1.0)) pos #f(-145.481 -62.5522 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1184# to #1003# cost 0)) arm :arms islands (#1009# #1187#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(287.5 -7.30587 2.67052 121.771 -120.0 20.0 -30.0 180.0 -16.3156 42.5131 -73.7089 -82.2958 -10.0218 -22.9838 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1003# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(220.625 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -14.8981 39.9526 -68.97 -86.4331 -9.3443 -20.6744 186.654 0.0 0.0) robot-pose-optimized #f(222.843 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.3734 31.6986 -77.8602 -91.4166 -19.3809 -5.72958 187.403 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.875393 -0.483412 0.0) (0.483412 0.875393 0.0) (0.0 0.0 1.0)) pos #f(-513.652 345.947 0.0)) object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1009# #1188#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.637 -9.77397 -0.94764 15.9566 -86.424 -115.453 -71.8259 222.959 -14.2536 33.379 -70.5841 -80.6646 -9.1757 -34.314 186.654 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921624 -0.388084 0.0) (0.388084 0.921624 0.0) (0.0 0.0 1.0)) pos #f(-505.172 363.121 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1001# to #1000# cost 0) #s(costed-arc plist nil from #1001# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(236.299 109.088 -0.375906 31.5852 -120.578 -29.2569 -7.62977 169.422 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(247.721 122.349 -20.2598 44.6517 -114.289 -1.82856 -5.72958 155.458 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.972238 -0.233995 0.0) (0.233995 0.972238 0.0) (0.0 0.0 1.0)) pos #f(-22.2966 218.792 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.913093 -0.407752 0.0) (0.407752 0.913093 0.0) (0.0 0.0 1.0)) pos #f(13.8903 196.644 0.0)) object-coords-index 0 object-coords #224# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1000# to #999# cost 0)) arm :arms islands (#1007# #1188#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(185.633 16.8569 -5.79613 43.5367 -94.1088 -140.347 -57.5824 234.959 -15.9803 36.4544 -83.1529 -70.359 -11.5285 -40.3592 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #999# to #998# cost 0) #s(costed-arc plist nil from #999# to #1006# cost 0) #s(costed-arc plist nil from #999# to #1189=#s(extended-node plist ((:name . "r-0-4-4<->-l-0-4-3")) arc-list (#s(costed-arc plist nil from #1189# to #993# cost 0) #s(costed-arc plist nil from #1189# to #999# cost 0)) arm :arms islands (#1007# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(179.318 34.1387 38.1392 80.651 -120.321 -142.193 -69.2303 234.959 -16.0233 36.2754 -82.7742 -70.8933 -11.4153 -40.1827 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #999# to #1017# cost 0) #s(costed-arc plist nil from #999# to #1160# cost 0) #s(costed-arc plist nil from #999# to #1164# cost 0) #s(costed-arc plist nil from #999# to #1168# cost 0) #s(costed-arc plist nil from #999# to #1035# cost 0) #s(costed-arc plist nil from #999# to #1172# cost 0) #s(costed-arc plist nil from #999# to #1176# cost 0) #s(costed-arc plist nil from #999# to #1081# cost 0) #s(costed-arc plist nil from #999# to #1186# cost 0) #s(costed-arc plist nil from #999# to #1190=#s(extended-node plist ((:name . "r-0-4-4<->-l-2-4-3")) arc-list (#s(costed-arc plist nil from #1190# to #1191=#s(extended-node plist ((:name . #1193="l-2-4-3")) arc-list (#s(costed-arc plist nil from #1191# to #1192=#s(extended-node plist ((:name . "r-0-4-2<->-l-2-4-3")) arc-list (#s(costed-arc plist nil from #1192# to #1191# cost 0) #s(costed-arc plist nil from #1192# to #995# cost 0)) arm :arms islands (#1016# #1193#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(250.971 -7.5207 18.5088 151.931 -120.0 20.0 -30.0 180.0 -12.4774 32.3467 -60.2187 -93.3645 -8.82159 -15.0674 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1191# to #1190# cost 0) #s(costed-arc plist nil from #1191# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(240.877 68.1702 17.4352 145.184 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.997276 -0.073754 0.0) (0.073754 0.997276 0.0) (0.0 0.0 1.0)) pos #f(-155.167 -43.3623 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1190# to #999# cost 0)) arm :arms islands (#1007# #1193#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(227.909 -7.01544 15.5513 142.528 -120.0 20.0 -30.0 180.0 -17.141 45.0755 -80.5486 -72.9296 -11.18 -28.6695 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #999# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(217.56 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -17.2951 46.1657 -79.0198 -74.9177 -10.9281 -26.2728 186.282 0.0 0.0) robot-pose-optimized #f(220.948 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7862 74.2725 -61.3144 -94.3356 -10.9502 -5.72958 186.415 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.707003 -0.707211 0.0) (0.707211 0.707003 0.0) (0.0 0.0 1.0)) pos #f(-494.526 366.255 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1007# #1194#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(182.718 24.094 8.35266 55.8561 -111.543 -140.782 -63.5101 234.959 -15.9944 36.3592 -82.9833 -70.5864 -11.4778 -40.3183 186.282 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.921617 -0.388101 0.0) (0.388101 0.921617 0.0) (0.0 0.0 1.0)) pos #f(-503.765 366.476 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #997# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.339 113.691 5.52404 57.2422 -121.525 -25.0338 -5.73889 171.568 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(225.869 79.5959 -3.1181 65.0707 -108.621 -30.1875 -5.73304 173.985 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.957721 -0.287699 0.0) (0.287699 0.957721 0.0) (0.0 0.0 1.0)) pos #f(-60.3938 118.522 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.685561 -0.728015 0.0) (0.728015 0.685561 0.0) (0.0 0.0 1.0)) pos #f(-40.0961 101.778 0.0)) object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #996# to #995# cost 0)) arm :arms islands (#1016# #1194#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.172 2.65946 21.5462 13.6265 -120.85 -178.057 -71.7682 237.239 -11.5077 20.9078 -60.2502 -83.4611 -8.01142 -34.9365 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #995# to #994# cost 0) #s(costed-arc plist nil from #995# to #1024# cost 0) #s(costed-arc plist nil from #995# to #1015# cost 0) #s(costed-arc plist nil from #995# to #1034# cost 0) #s(costed-arc plist nil from #995# to #1058# cost 0) #s(costed-arc plist nil from #995# to #1046# cost 0) #s(costed-arc plist nil from #995# to #1195=#s(extended-node plist ((:name . "r-0-4-2<->-l-0-4-16")) arc-list (#s(costed-arc plist nil from #1195# to #1196=#s(extended-node plist ((:name . #1197="l-0-4-16")) arc-list (#s(costed-arc plist nil from #1196# to #1195# cost 0) #s(costed-arc plist nil from #1196# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(202.727 97.2417 51.2942 95.1158 -100.107 -6.80081 -5.7337 194.683 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(202.846 54.5463 57.6155 75.1645 -89.4307 -18.8005 -5.72993 199.588 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.948671 -0.316264 0.0) (0.316264 0.948671 0.0) (0.0 0.0 1.0)) pos #f(109.061 27.2033 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.663441 -0.748229 0.0) (0.748229 0.663441 0.0) (0.0 0.0 1.0)) pos #f(131.001 22.4781 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1195# to #995# cost 0)) arm :arms islands (#1016# #1197#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(91.9932 -17.9101 25.8452 -1.49486 -35.0522 -170.655 -16.1924 237.239 -8.47757 14.6417 -52.6242 -84.458 -7.04381 -25.7386 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #995# to #1075# cost 0) #s(costed-arc plist nil from #995# to #1079# cost 0) #s(costed-arc plist nil from #995# to #1192# cost 0) #s(costed-arc plist nil from #995# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(223.531 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.2149 31.3162 -57.5507 -95.1384 -8.70093 -10.6428 186.357 0.0 0.0) robot-pose-optimized #f(225.576 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -19.3893 14.5178 -72.5109 -94.4611 -20.4952 -5.72958 194.993 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.89999 -0.43591 0.0) (0.43591 0.89999 0.0) (0.0 0.0 1.0)) pos #f(-507.511 361.889 0.0)) object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1016# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(145.188 35.5689 49.6026 62.775 -121.542 -166.697 -34.4545 237.239 -10.1427 17.3095 -56.9179 -83.0497 -7.37987 -33.1149 186.357 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920357 -0.391079 0.0) (0.391079 0.920357 0.0) (0.0 0.0 1.0)) pos #f(-499.752 374.981 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #993# to #1189# cost 0) #s(costed-arc plist nil from #993# to #1027# cost 0) #s(costed-arc plist nil from #993# to #1050# cost 0) #s(costed-arc plist nil from #993# to #1038# cost 0) #s(costed-arc plist nil from #993# to #1126# cost 0) #s(costed-arc plist nil from #993# to #1088# cost 0) #s(costed-arc plist nil from #993# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(209.708 113.228 21.7692 97.9096 -121.196 -10.0721 -5.7332 185.475 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(212.544 72.7497 46.6621 80.2779 -109.243 -30.1663 -5.73034 193.738 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.93663 -0.350319 0.0) (0.350319 0.93663 0.0) (0.0 0.0 1.0)) pos #f(-108.983 109.293 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.63599 -0.771697 0.0) (0.771697 0.63599 0.0) (0.0 0.0 1.0)) pos #f(-91.6573 100.731 0.0)) object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #992# to #991# cost 0)) arm :arms islands (#1013# #1029#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(194.184 26.403 40.1348 92.3027 -94.7031 -67.9182 -95.2003 180.0 -7.58647 10.9072 -47.0353 -89.2326 -12.9184 -25.0208 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #991# to #1022# cost 0) #s(costed-arc plist nil from #991# to #1012# cost 0) #s(costed-arc plist nil from #991# to #1032# cost 0) #s(costed-arc plist nil from #991# to #1056# cost 0) #s(costed-arc plist nil from #991# to #1044# cost 0) #s(costed-arc plist nil from #991# to #1073# cost 0) #s(costed-arc plist nil from #991# to #990# cost 0) #s(costed-arc plist nil from #991# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(226.529 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -7.4453 18.1732 -47.6565 -99.4863 -13.5538 -5.74253 180.795 0.0 0.0) robot-pose-optimized #f(228.635 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.6325 0.783345 -62.623 -95.6127 -32.0648 -5.7296 180.455 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.951458 -0.307779 0.0) (0.307779 0.951458 0.0) (0.0 0.0 1.0)) pos #f(-455.423 400.596 0.0)) object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1013# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(199.525 -8.46046 33.0222 175.563 -120.0 20.0 -30.0 180.0 -6.98986 14.7596 -46.6195 -97.6629 -13.3997 -6.03504 180.795 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.915592 -0.402109 0.0) (0.402109 0.915592 0.0) (0.0 0.0 1.0)) pos #f(-453.073 401.907 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #989# to #1135# cost 0) #s(costed-arc plist nil from #989# to #988# cost 0) #s(costed-arc plist nil from #989# to #1153# cost 0) #s(costed-arc plist nil from #989# to #1198=#s(extended-node plist ((:name . "r-0-4-8<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1198# to #989# cost 0) #s(costed-arc plist nil from #1198# to #1199=#s(extended-node plist ((:name . #1201="r-0-4-8")) arc-list (#s(costed-arc plist nil from #1199# to #1198# cost 0) #s(costed-arc plist nil from #1199# to #1200=#s(extended-node plist ((:name . "r-0-4-8<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1200# to #985# cost 0) #s(costed-arc plist nil from #1200# to #1199# cost 0)) arm :arms islands (#1201# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(81.8794 -5.65966 39.1984 156.996 -120.0 20.0 -30.0 180.0 -15.8797 12.2859 -52.9963 -84.3018 -21.1242 -6.62211 174.08 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1199# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(223.901 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.1271 23.2897 -62.0193 -88.6812 -21.5383 -6.13681 174.08 0.0 0.0) robot-pose-optimized #f(224.5 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -56.3787 14.2421 -73.0398 -101.5 -33.8803 -9.33264 172.579 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.601573 -0.798818 0.0) (0.798818 0.601573 0.0) (0.0 0.0 1.0)) pos #f(-408.69 372.195 0.0)) object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1201# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(215.308 -5.70507 36.1111 155.253 -120.0 20.0 -30.0 180.0 -19.7595 22.2844 -60.8074 -86.1843 -21.4471 -12.5291 174.08 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.920385 -0.391013 0.0) (0.391013 0.920385 0.0) (0.0 0.0 1.0)) pos #f(-418.761 382.561 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #989# to #1133# cost 0) #s(costed-arc plist nil from #989# to #1134# cost 0) #s(costed-arc plist nil from #989# to #1069# cost 0) #s(costed-arc plist nil from #989# to #1202=#s(extended-node plist ((:name . "r-0-4-14<->-l-2-4-4")) arc-list (#s(costed-arc plist nil from #1202# to #989# cost 0) #s(costed-arc plist nil from #1202# to #1203=#s(extended-node plist ((:name . #1205="r-0-4-14")) arc-list (#s(costed-arc plist nil from #1203# to #1202# cost 0) #s(costed-arc plist nil from #1203# to #1204=#s(extended-node plist ((:name . "r-0-4-14<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1204# to #985# cost 0) #s(costed-arc plist nil from #1204# to #1203# cost 0)) arm :arms islands (#1205# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(135.757 -8.36715 47.4921 192.769 -120.0 20.0 -30.0 180.0 -18.6394 20.9055 -42.6351 -73.297 -13.4829 -6.09348 180.639 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1203# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(225.449 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -20.0104 29.2187 -44.9012 -75.7539 -13.6103 -5.73914 180.639 0.0 0.0) robot-pose-optimized #f(224.433 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.7054 34.1443 -49.6563 -88.7178 -16.4882 -18.18 180.356 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.594839 -0.803845 0.0) (0.803845 0.594839 0.0) (0.0 0.0 1.0)) pos #f(-371.422 416.021 0.0)) object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1205# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(273.009 -8.57457 45.0002 189.354 -120.0 20.0 -30.0 180.0 -21.894 31.6701 -48.8925 -75.6031 -13.6625 -6.26174 180.639 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.917066 -0.398735 0.0) (0.398735 0.917066 0.0) (0.0 0.0 1.0)) pos #f(-383.604 429.621 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #989# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.665 67.9164 37.7857 141.431 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(218.612 64.6691 35.4679 139.199 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997706 -0.067701 0.0) (0.067701 0.997706 0.0) (0.0 0.0 1.0)) pos #f(-137.34 28.9828 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.9935 -0.113828 0.0) (0.113828 0.9935 0.0) (0.0 0.0 1.0)) pos #f(-136.677 22.9731 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #988# to #987# cost 0)) arm :arms islands (#1206# #1070#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(252.168 -12.0564 41.7474 186.054 -120.0 20.0 -30.0 180.0 -9.18184 8.19312 -31.0624 -82.7668 -12.4923 -6.72401 181.608 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #987# to #986# cost 0) #s(costed-arc plist nil from #987# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(229.284 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -10.9726 3.58041 -33.8138 -80.4874 -13.0454 -5.73812 181.608 0.0 0.0) robot-pose-optimized #f(230.755 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -41.3902 -8.73717 -48.468 -85.3965 -19.6009 -12.1272 181.192 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.732484 -0.680785 0.0) (0.680785 0.732484 0.0) (0.0 0.0 1.0)) pos #f(-394.719 441.021 0.0)) object-coords-index 6 object-coords #410# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1206# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(114.541 -11.9007 44.2032 188.78 -120.0 20.0 -30.0 180.0 -3.2248 -7.54379 -24.5648 -66.3672 -12.4783 -6.30548 181.608 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.912861 -0.40827 0.0) (0.40827 0.912861 0.0) (0.0 0.0 1.0)) pos #f(-404.969 448.264 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1154# cost 0) #s(costed-arc plist nil from #985# to #1200# cost 0) #s(costed-arc plist nil from #985# to #1207=#s(extended-node plist ((:name . "r-0-4-12<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1207# to #985# cost 0) #s(costed-arc plist nil from #1207# to #1208=#s(extended-node plist ((:name . #1209="r-0-4-12")) arc-list (#s(costed-arc plist nil from #1208# to #1207# cost 0) #s(costed-arc plist nil from #1208# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(216.285 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.1932 -3.11189 -34.2462 -57.0602 -10.9298 -16.7447 180.419 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.893516 -0.449032 0.0) (0.449032 0.893516 0.0) (0.0 0.0 1.0)) pos #f(-366.912 460.499 0.0)) base-coords-optimized nil object-coords-index 12 object-coords #596# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1209# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(144.839 -16.5059 48.9646 152.3 -120.0 20.0 -30.0 180.0 -11.9671 -9.34582 -25.4644 -47.3954 -9.22266 -17.0068 180.419 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.893516 -0.449032 0.0) (0.449032 0.893516 0.0) (0.0 0.0 1.0)) pos #f(-366.912 460.499 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1210=#s(extended-node plist ((:name . "r-0-4-13<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1210# to #985# cost 0) #s(costed-arc plist nil from #1210# to #1211=#s(extended-node plist ((:name . #1212="r-0-4-13")) arc-list (#s(costed-arc plist nil from #1211# to #1210# cost 0) #s(costed-arc plist nil from #1211# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(227.781 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -18.0979 15.9624 -38.121 -72.5095 -12.6841 -6.02873 182.037 0.0 0.0) robot-pose-optimized #f(227.065 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -55.9279 16.1987 -44.9593 -84.8233 -15.8754 -19.2317 181.531 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.914341 -0.404945 0.0) (0.404945 0.914341 0.0) (0.0 0.0 1.0)) pos #f(-379.881 448.404 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.589374 -0.80786 0.0) (0.80786 0.589374 0.0) (0.0 0.0 1.0)) pos #f(-368.997 438.978 0.0)) object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1212# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(137.988 -11.3376 48.1604 184.298 -120.0 20.0 -30.0 180.0 -15.3044 6.97615 -34.4542 -65.6895 -12.4687 -6.46959 182.037 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.914341 -0.404945 0.0) (0.404945 0.914341 0.0) (0.0 0.0 1.0)) pos #f(-379.881 448.404 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1204# cost 0) #s(costed-arc plist nil from #985# to #1213=#s(extended-node plist ((:name . "r-0-4-15<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1213# to #985# cost 0) #s(costed-arc plist nil from #1213# to #1214=#s(extended-node plist ((:name . #1215="r-0-4-15")) arc-list (#s(costed-arc plist nil from #1214# to #1213# cost 0) #s(costed-arc plist nil from #1214# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(222.291 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.7597 30.1533 -66.693 -72.3303 -22.2055 -5.7626 173.816 0.0 0.0) robot-pose-optimized #f(221.914 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -62.4435 34.6806 -70.6578 -83.8374 -23.1405 -20.9513 173.732 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.91922 -0.393745 0.0) (0.393745 0.91922 0.0) (0.0 0.0 1.0)) pos #f(-370.915 405.396 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.5992 -0.800599 0.0) (0.800599 0.5992 0.0) (0.0 0.0 1.0)) pos #f(-360.743 394.562 0.0)) object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1215# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(140.061 -4.54738 48.298 196.356 -120.0 20.0 -30.0 180.0 -25.1974 24.6282 -63.7607 -74.0354 -22.038 -6.03809 173.816 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.91922 -0.393745 0.0) (0.393745 0.91922 0.0) (0.0 0.0 1.0)) pos #f(-370.915 405.396 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1216=#s(extended-node plist ((:name . "r-0-4-16<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1216# to #985# cost 0) #s(costed-arc plist nil from #1216# to #1217=#s(extended-node plist ((:name . #1218="r-0-4-16")) arc-list (#s(costed-arc plist nil from #1217# to #1216# cost 0) #s(costed-arc plist nil from #1217# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(219.054 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.3346 38.7676 -69.2867 -55.9984 -11.3646 -23.6471 186.449 0.0 0.0) robot-pose-optimized #f(219.353 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -62.0462 47.0559 -71.8083 -66.3408 -13.0386 -38.3925 186.563 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.916615 -0.399771 0.0) (0.399771 0.916615 0.0) (0.0 0.0 1.0)) pos #f(-377.224 422.314 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.593932 -0.804515 0.0) (0.804515 0.593932 0.0) (0.0 0.0 1.0)) pos #f(-370.184 410.066 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1218# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(138.154 -7.47913 48.0037 190.107 -120.0 20.0 -30.0 180.0 -26.1044 34.6239 -67.3712 -60.0582 -10.8506 -26.8992 186.449 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.916615 -0.399771 0.0) (0.399771 0.916615 0.0) (0.0 0.0 1.0)) pos #f(-377.224 422.314 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1219=#s(extended-node plist ((:name . "r-0-4-17<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1219# to #985# cost 0) #s(costed-arc plist nil from #1219# to #1220=#s(extended-node plist ((:name . #1221="r-0-4-17")) arc-list (#s(costed-arc plist nil from #1220# to #1219# cost 0) #s(costed-arc plist nil from #1220# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(212.05 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.3504 44.0192 -75.2684 -42.7345 -11.9788 -25.0102 186.488 0.0 0.0) robot-pose-optimized #f(212.702 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -63.183 60.0177 -68.701 -53.2528 -10.224 -41.6947 186.382 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.908126 -0.418696 0.0) (0.418696 0.908126 0.0) (0.0 0.0 1.0)) pos #f(-368.981 452.015 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.577112 -0.816665 0.0) (0.816665 0.577112 0.0) (0.0 0.0 1.0)) pos #f(-356.107 442.909 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1221# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(148.118 -13.5213 49.6452 160.87 -120.0 20.0 -30.0 180.0 -27.9667 42.0429 -74.5139 -48.3508 -11.6542 -29.8851 186.488 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.908126 -0.418696 0.0) (0.418696 0.908126 0.0) (0.0 0.0 1.0)) pos #f(-368.981 452.015 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #984# cost 0) #s(costed-arc plist nil from #985# to #1222=#s(extended-node plist ((:name . "r-0-4-19<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1222# to #985# cost 0) #s(costed-arc plist nil from #1222# to #1223=#s(extended-node plist ((:name . #1224="r-0-4-19")) arc-list (#s(costed-arc plist nil from #1223# to #1222# cost 0) #s(costed-arc plist nil from #1223# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(216.695 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.5814 4.76801 -35.2637 -40.1621 -10.6153 -19.8644 180.747 0.0 0.0) robot-pose-optimized #f(213.183 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -61.4586 7.03657 -42.5675 -53.099 -11.7949 -36.4473 180.556 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.858571 -0.512695 0.0) (0.512695 0.858571 0.0) (0.0 0.0 1.0)) pos #f(-343.285 441.406 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.487197 -0.873292 0.0) (0.873292 0.487197 0.0) (0.0 0.0 1.0)) pos #f(-344.705 425.967 0.0)) object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1224# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(151.923 -16.8732 50.0404 148.232 -120.0 20.0 -30.0 180.0 -19.923 -1.60469 -31.6738 -34.085 -9.8009 -19.1753 180.747 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.858571 -0.512695 0.0) (0.512695 0.858571 0.0) (0.0 0.0 1.0)) pos #f(-343.285 441.406 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1225=#s(extended-node plist ((:name . "r-0-4-20<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1225# to #985# cost 0) #s(costed-arc plist nil from #1225# to #1226=#s(extended-node plist ((:name . #1227="r-0-4-20")) arc-list (#s(costed-arc plist nil from #1226# to #1225# cost 0) #s(costed-arc plist nil from #1226# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(227.826 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -21.581 19.1138 -38.9394 -49.1244 -12.4699 -5.73671 182.313 0.0 0.0) robot-pose-optimized #f(226.12 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -58.6966 27.6607 -41.0108 -64.0981 -10.2595 -24.6096 182.323 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.886715 -0.462317 0.0) (0.462317 0.886715 0.0) (0.0 0.0 1.0)) pos #f(-357.871 446.217 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.536759 -0.843736 0.0) (0.843736 0.536759 0.0) (0.0 0.0 1.0)) pos #f(-353.681 434.353 0.0)) object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1227# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(145.577 -14.417 49.4919 165.679 -120.0 20.0 -30.0 180.0 -20.4371 12.3264 -37.3539 -46.3843 -12.3534 -6.05152 182.313 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.886715 -0.462317 0.0) (0.462317 0.886715 0.0) (0.0 0.0 1.0)) pos #f(-357.871 446.217 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1228=#s(extended-node plist ((:name . "r-0-4-21<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1228# to #985# cost 0) #s(costed-arc plist nil from #1228# to #1229=#s(extended-node plist ((:name . #1230="r-0-4-21")) arc-list (#s(costed-arc plist nil from #1229# to #1228# cost 0) #s(costed-arc plist nil from #1229# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(224.154 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.8909 28.8724 -44.5932 -48.0477 -13.7383 -5.73642 180.634 0.0 0.0) robot-pose-optimized #f(223.973 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.0803 40.2888 -44.7036 -62.9359 -10.6998 -26.112 181.002 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.883594 -0.468255 0.0) (0.468255 0.883594 0.0) (0.0 0.0 1.0)) pos #f(-351.416 436.166 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.531087 -0.847317 0.0) (0.847317 0.531087 0.0) (0.0 0.0 1.0)) pos #f(-344.448 425.585 0.0)) object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1230# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(149.437 -13.1071 50.1429 168.401 -120.0 20.0 -30.0 180.0 -23.19 24.4313 -43.9735 -49.9796 -13.6559 -5.91085 180.634 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.883594 -0.468255 0.0) (0.468255 0.883594 0.0) (0.0 0.0 1.0)) pos #f(-351.416 436.166 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1143# cost 0) #s(costed-arc plist nil from #985# to #1111# cost 0) #s(costed-arc plist nil from #985# to #1231=#s(extended-node plist ((:name . "r-2-4-16<->-l-2-4-5")) arc-list (#s(costed-arc plist nil from #1231# to #985# cost 0) #s(costed-arc plist nil from #1231# to #1232=#s(extended-node plist ((:name . #1233="r-2-4-16")) arc-list (#s(costed-arc plist nil from #1232# to #1231# cost 0) #s(costed-arc plist nil from #1232# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(170.518 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.27191 29.011 -137.93 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(252.888 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -44.217 40.9194 -160.694 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.524128 -0.851639 0.0) (0.851639 0.524128 0.0) (0.0 0.0 1.0)) pos #f(-162.775 363.764 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.028088 -0.999605 0.0) (0.999605 0.028088 0.0) (0.0 0.0 1.0)) pos #f(-204.048 353.938 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1233# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(177.514 -15.7682 55.5493 166.588 -120.0 20.0 -30.0 180.0 -8.25877 29.7179 -137.924 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.524128 -0.851639 0.0) (0.851639 0.524128 0.0) (0.0 0.0 1.0)) pos #f(-162.775 363.764 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #985# to #1131# cost 0) #s(costed-arc plist nil from #985# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(196.251 65.5752 59.1622 142.49 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(187.183 75.933 57.3795 145.852 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998631 -0.052301 0.0) (0.052301 0.998631 0.0) (0.0 0.0 1.0)) pos #f(-119.175 160.026 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.995971 0.089673 0.0) (-0.089673 0.995971 0.0) (0.0 0.0 1.0)) pos #f(-137.89 136.807 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #984# to #983# cost 0)) arm :arms islands (#1116# #1112#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.234 5.36885 56.0644 154.123 -120.0 20.0 -30.0 180.0 -7.41786 -10.8739 -26.0807 -30.7637 3.74935 -22.297 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #983# to #1115# cost 0) #s(costed-arc plist nil from #983# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(219.095 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.6312 -8.7748 -34.5349 -34.9789 0.183342 -23.3931 186.175 0.0 0.0) robot-pose-optimized #f(214.466 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -54.9362 -13.753 -52.5276 -51.8353 -8.40681 -26.7428 185.765 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.455308 -0.890334 0.0) (0.890334 0.455308 0.0) (0.0 0.0 1.0)) pos #f(-219.405 288.713 0.0)) object-coords-index 18 object-coords #782# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1116# #1234#) contact-point-index nil contact-point nil contact-type nil graph-depth 4 door-angle -100 solved nil robot-pose #f(187.151 -14.4577 23.0068 121.111 -12.7871 -20.3323 -11.5519 18.5829 -6.30346 -10.6281 -23.7831 -29.9536 6.29291 -23.4664 186.175 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839475 -0.543398 0.0) (0.543398 0.839475 0.0) (0.0 0.0 1.0)) pos #f(-214.687 308.018 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #981# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(198.844 83.2655 53.4868 94.9697 -77.8307 1.06883 -5.73369 204.462 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(192.065 41.9422 50.5814 81.9558 -65.994 -7.54331 -5.72958 209.694 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.958114 -0.286386 0.0) (0.286386 0.958114 0.0) (0.0 0.0 1.0)) pos #f(206.837 -7.11621 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.686562 -0.727072 0.0) (0.727072 0.686562 0.0) (0.0 0.0 1.0)) pos #f(226.312 -12.3799 0.0)) object-coords-index 23 object-coords #937# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.46446) #s(costed-arc plist nil from #37# to #1235=#s(extended-node plist ((:name . "l-0-4-22")) arc-list (#s(costed-arc plist nil from #1235# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(193.826 83.2677 -20.209 142.828 -92.2482 -5.2012 -5.73438 177.378 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999254 -0.038623 0.0) (0.038623 0.999254 0.0) (0.0 0.0 1.0)) pos #f(237.16 -143.729 0.0)) base-coords-optimized nil object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.47291) #s(costed-arc plist nil from #37# to #1236=#s(extended-node plist ((:name . "l-0-4-21")) arc-list (#s(costed-arc plist nil from #1236# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(198.302 122.308 -20.2506 109.707 -121.23 -11.2685 -5.72958 187.907 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99677 0.080307 0.0) (-0.080307 0.99677 0.0) (0.0 0.0 1.0)) pos #f(335.468 -16.8712 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.47104) #s(costed-arc plist nil from #37# to #1141# cost 1.3461) #s(costed-arc plist nil from #37# to #1237=#s(extended-node plist ((:name . "l-0-4-19")) arc-list (#s(costed-arc plist nil from #1237# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.002 78.6606 18.0927 31.614 -109.992 -185.911 -68.2698 165.43 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(244.68 36.8531 8.83028 27.7099 -88.2169 -182.937 -83.4502 165.464 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997512 -0.070502 0.0) (0.070502 0.997512 0.0) (0.0 0.0 1.0)) pos #f(279.26 -166.88 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.846277 -0.532743 0.0) (0.532743 0.846277 0.0) (0.0 0.0 1.0)) pos #f(256.579 -159.535 0.0)) object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.18895) #s(costed-arc plist nil from #37# to #1085# cost 1.17367) #s(costed-arc plist nil from #37# to #1072# cost 1.43297) #s(costed-arc plist nil from #37# to #1196# cost 1.40769) #s(costed-arc plist nil from #37# to #1238=#s(extended-node plist ((:name . "l-0-4-15")) arc-list (#s(costed-arc plist nil from #1238# to #980# cost 1)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(212.221 116.123 -18.7799 111.065 -121.453 -8.62871 -5.72958 176.274 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(203.744 71.0055 -20.2598 114.611 -104.909 -18.6761 -5.72958 179.701 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.976817 -0.214078 0.0) (0.214078 0.976817 0.0) (0.0 0.0 1.0)) pos #f(280.494 4.87294 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.738909 -0.673805 0.0) (0.673805 0.738909 0.0) (0.0 0.0 1.0)) pos #f(256.191 -24.3698 0.0)) object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.56003) #s(costed-arc plist nil from #37# to #1175# cost 1.48955) #s(costed-arc plist nil from #37# to #1171# cost 1.30202) #s(costed-arc plist nil from #37# to #1060# cost 1.18589) #s(costed-arc plist nil from #37# to #1043# cost 1.4246) #s(costed-arc plist nil from #37# to #1055# cost 1.38202) #s(costed-arc plist nil from #37# to #1031# cost 1.37446) #s(costed-arc plist nil from #37# to #1167# cost 1.45447) #s(costed-arc plist nil from #37# to #1163# cost 1.32486) #s(costed-arc plist nil from #37# to #1159# cost 1.26785) #s(costed-arc plist nil from #37# to #1011# cost 1.69627) #s(costed-arc plist nil from #37# to #1021# cost 1.39657) #s(costed-arc plist nil from #37# to #993# cost 1.36185) #s(costed-arc plist nil from #37# to #1005# cost 1.2524) #s(costed-arc plist nil from #37# to #997# cost 1.19891) #s(costed-arc plist nil from #37# to #1001# cost 1.15014)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(166.151 16.5328 29.6827 -17.8787 -121.539 -69.6216 -75.0394 168.826 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999488 0.032004 0.0) (-0.032004 0.999488 0.0) (0.0 0.0 1.0)) pos #f(-246.533 -73.9797 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #36# to #32# cost 0)) arm :arms islands (#34# #39#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(117.871 -13.1511 39.6836 10.0963 -114.191 179.081 -35.2497 339.803 -35.6389 49.7803 -83.5952 -70.596 -21.3714 -40.59 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #32# to #1239=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1239# to #1240=#s(extended-node plist ((:name . #1242="l-0-3-3")) arc-list (#s(costed-arc plist nil from #1240# to #1241=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1241# to #1240# cost 0) #s(costed-arc plist nil from #1241# to #25# cost 0)) arm :arms islands (#41# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(174.403 -21.0425 48.9065 28.5909 -82.5461 -84.8478 -76.451 194.347 -36.4464 45.0514 -76.043 -75.7097 -15.6981 -40.2351 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1239# cost 0) #s(costed-arc plist nil from #1240# to #1243=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1243# to #1240# cost 0) #s(costed-arc plist nil from #1243# to #1244=#s(extended-node plist ((:name . #1246="r-0-3-17")) arc-list (#s(costed-arc plist nil from #1244# to #1243# cost 0) #s(costed-arc plist nil from #1244# to #1245=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1245# to #19# cost 0) #s(costed-arc plist nil from #1245# to #1244# cost 0)) arm :arms islands (#1246# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(250.086 10.8427 44.5637 121.193 -92.7976 -98.5515 -86.1123 51.9934 -26.0161 41.9112 -64.3486 -25.2924 -19.7969 -25.0528 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1244# to #1248=#s(extended-node plist ((:name . "r-0-3-17<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1248# to #1249=#s(extended-node plist ((:name . #1251="l-0-3-5")) arc-list (#s(costed-arc plist nil from #1249# to #1250=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1250# to #1249# cost 0) #s(costed-arc plist nil from #1250# to #21# cost 0)) arm :arms islands (#29# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(158.718 -21.6391 66.2905 29.6706 -71.4805 -110.129 -73.5162 199.917 -33.8086 37.9672 -63.6366 -87.053 -12.1293 -39.0656 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1252=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1252# to #1249# cost 0) #s(costed-arc plist nil from #1252# to #25# cost 0)) arm :arms islands (#41# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(171.835 -22.153 65.2778 27.8454 -61.5001 -96.3054 -68.7078 194.347 -36.438 45.1346 -75.7898 -76.0217 -15.6293 -39.9744 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1248# cost 0) #s(costed-arc plist nil from #1249# to #1253=#s(extended-node plist ((:name . "r-0-3-20<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1253# to #1249# cost 0) #s(costed-arc plist nil from #1253# to #1254=#s(extended-node plist ((:name . #1256="r-0-3-20")) arc-list (#s(costed-arc plist nil from #1254# to #1255=#s(extended-node plist ((:name . "r-0-3-20<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1255# to #19# cost 0) #s(costed-arc plist nil from #1255# to #1254# cost 0)) arm :arms islands (#1256# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(185.901 22.4493 49.901 113.793 -93.1082 -67.6858 -75.7241 34.5257 -22.7573 6.85887 -40.4295 -26.1629 -13.5842 -16.3477 179.189 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1254# to #1253# cost 0) #s(costed-arc plist nil from #1254# to #1257=#s(extended-node plist ((:name . "r-0-4-rk")) arc-list (#s(costed-arc plist nil from #1257# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type grasp graph-depth 4 door-angle -100 solved t robot-pose #f(125.489 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.3244 13.8618 -59.1167 -118.343 -132.86 -42.7455 305.986 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.942017 -0.335566 0.0) (0.335566 0.942017 0.0) (0.0 0.0 1.0)) pos #f(-401.92 512.017 0.0)) base-coords-optimized nil object-coords-index rk object-coords #185# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.53146) #s(costed-arc plist nil from #1254# to #1083# cost 0.517452) #s(costed-arc plist nil from #1254# to #1137# cost 0.478516) #s(costed-arc plist nil from #1254# to #1229# cost 0.458016) #s(costed-arc plist nil from #1254# to #1226# cost 0.442446) #s(costed-arc plist nil from #1254# to #1223# cost 0.398163) #s(costed-arc plist nil from #1254# to #983# cost 0.409103) #s(costed-arc plist nil from #1254# to #1220# cost 0.664211) #s(costed-arc plist nil from #1254# to #1217# cost 0.642799) #s(costed-arc plist nil from #1254# to #1214# cost 0.645179) #s(costed-arc plist nil from #1254# to #1203# cost 0.631131) #s(costed-arc plist nil from #1254# to #1211# cost 0.605257) #s(costed-arc plist nil from #1254# to #1208# cost 0.531717) #s(costed-arc plist nil from #1254# to #1065# cost 0.721745) #s(costed-arc plist nil from #1254# to #1037# cost 0.70207) #s(costed-arc plist nil from #1254# to #1049# cost 0.687824) #s(costed-arc plist nil from #1254# to #1199# cost 0.691975) #s(costed-arc plist nil from #1254# to #1019# cost 0.683949) #s(costed-arc plist nil from #1254# to #987# cost 0.657903) #s(costed-arc plist nil from #1254# to #1026# cost 0.780372) #s(costed-arc plist nil from #1254# to #999# cost 0.766961) #s(costed-arc plist nil from #1254# to #1003# cost 0.761408) #s(costed-arc plist nil from #1254# to #995# cost 0.759637) #s(costed-arc plist nil from #1254# to #991# cost 0.744868) #s(costed-arc plist nil from #1254# to #1258=#s(extended-node plist ((:name . "r-0-4-0")) arc-list (#s(costed-arc plist nil from #1258# to #980# cost 1)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(225.28 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 7.66831 12.0458 -20.1681 -103.191 -12.5411 -7.83095 180.0 0.0 0.0) robot-pose-optimized #f(233.864 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -4.29822 -8.744 -48.5126 -92.6744 -26.0389 -5.72958 180.785 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.900578 -0.434695 0.0) (0.434695 0.900578 0.0) (0.0 0.0 1.0)) pos #f(-380.343 493.975 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.976687 -0.214668 0.0) (0.214668 0.976687 0.0) (0.0 0.0 1.0)) pos #f(-397.008 459.487 0.0)) object-coords-index 0 object-coords #224# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.818337)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(225.897 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.3291 11.4671 -40.0036 -33.0629 -13.7272 -5.73352 179.189 0.0 0.0) robot-pose-optimized #f(223.74 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.3889 20.4076 -39.2879 -47.3131 -8.48105 -25.3538 179.117 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.293406 -0.955988 0.0) (0.955988 0.293406 0.0) (0.0 0.0 1.0)) pos #f(-350.555 186.529 0.0)) object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1256# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(184.008 25.5333 56.4752 122.695 -77.9179 -75.6107 -70.9845 34.5257 -22.7218 6.76435 -40.2998 -26.2447 -13.5764 -16.0788 179.189 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.732091 -0.681207 0.0) (0.681207 0.732091 0.0) (0.0 0.0 1.0)) pos #f(-345.122 219.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1259=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1259# to #1249# cost 0) #s(costed-arc plist nil from #1259# to #1260=#s(extended-node plist ((:name . #1262="r-0-3-21")) arc-list (#s(costed-arc plist nil from #1260# to #1261=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1261# to #19# cost 0) #s(costed-arc plist nil from #1261# to #1260# cost 0)) arm :arms islands (#1262# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(162.499 35.9019 60.0196 106.266 -111.297 -95.1087 -37.505 236.612 -24.829 17.6976 -41.2455 -27.3338 -14.1702 -23.4884 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1259# cost 0) #s(costed-arc plist nil from #1260# to #1263=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-10")) arc-list (#s(costed-arc plist nil from #1263# to #1264=#s(extended-node plist ((:name . #1265="l-0-3-10")) arc-list (#s(costed-arc plist nil from #1264# to #1263# cost 0) #s(costed-arc plist nil from #1264# to #42# cost 0.731432) #s(costed-arc plist nil from #1264# to #979# cost 1.67744) #s(costed-arc plist nil from #1264# to #981# cost 1.54214) #s(costed-arc plist nil from #1264# to #1235# cost 1.59547) #s(costed-arc plist nil from #1264# to #1236# cost 1.59502) #s(costed-arc plist nil from #1264# to #1141# cost 1.48087) #s(costed-arc plist nil from #1264# to #1237# cost 1.14016) #s(costed-arc plist nil from #1264# to #1085# cost 1.30946) #s(costed-arc plist nil from #1264# to #1072# cost 1.5225) #s(costed-arc plist nil from #1264# to #1196# cost 1.50104) #s(costed-arc plist nil from #1264# to #1238# cost 1.71056) #s(costed-arc plist nil from #1264# to #1175# cost 1.638) #s(costed-arc plist nil from #1264# to #1171# cost 1.44952) #s(costed-arc plist nil from #1264# to #1060# cost 1.16212) #s(costed-arc plist nil from #1264# to #1043# cost 1.51717) #s(costed-arc plist nil from #1264# to #1055# cost 1.49055) #s(costed-arc plist nil from #1264# to #1031# cost 1.48519) #s(costed-arc plist nil from #1264# to #1167# cost 1.59844) #s(costed-arc plist nil from #1264# to #1163# cost 1.48336) #s(costed-arc plist nil from #1264# to #1159# cost 1.41892) #s(costed-arc plist nil from #1264# to #1011# cost 1.79734) #s(costed-arc plist nil from #1264# to #1021# cost 1.50747) #s(costed-arc plist nil from #1264# to #993# cost 1.48852) #s(costed-arc plist nil from #1264# to #1005# cost 1.39135) #s(costed-arc plist nil from #1264# to #997# cost 1.35127) #s(costed-arc plist nil from #1264# to #1001# cost 1.31759)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(152.222 14.6866 59.0213 -13.8649 -93.258 -96.9056 -89.0103 170.307 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(162.81 9.46915 65.7082 23.109 -89.2787 -99.2051 -64.1769 170.324 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998789 0.049198 0.0) (-0.049198 0.998789 0.0) (0.0 0.0 1.0)) pos #f(-261.709 -76.7209 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.889582 -0.456776 0.0) (0.456776 0.889582 0.0) (0.0 0.0 1.0)) pos #f(-236.541 -65.4181 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1263# to #1260# cost 0)) arm :arms islands (#1262# #1265#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(177.81 -8.20131 63.3845 46.555 -95.8658 -136.378 -45.9145 236.612 -24.5732 18.9444 -40.3157 -27.4733 -14.1713 -22.6821 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1266=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1266# to #1267=#s(extended-node plist ((:name . #1269="l-0-3-11")) arc-list (#s(costed-arc plist nil from #1267# to #1268=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1268# to #1267# cost 0) #s(costed-arc plist nil from #1268# to #21# cost 0)) arm :arms islands (#29# #1269#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(128.657 -32.0328 29.5921 2.32299 -15.8317 -113.136 -49.0976 199.917 -32.5802 37.2506 -60.5915 -88.8991 -11.5729 -36.4315 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1267# to #1266# cost 0) #s(costed-arc plist nil from #1267# to #1270=#s(extended-node plist ((:name . "r-2-3-15<->-l-0-3-11")) arc-list (#s(costed-arc plist nil from #1270# to #1267# cost 0) #s(costed-arc plist nil from #1270# to #1271=#s(extended-node plist ((:name . #1273="r-2-3-15")) arc-list (#s(costed-arc plist nil from #1271# to #1272=#s(extended-node plist ((:name . "r-2-3-15<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1272# to #1249# cost 0) #s(costed-arc plist nil from #1272# to #1271# cost 0)) arm :arms islands (#1273# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(232.056 60.2454 53.5166 133.266 -59.8145 -30.2323 -89.2189 180.0 5.80617 16.4252 -144.169 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1271# to #1270# cost 0) #s(costed-arc plist nil from #1271# to #1274=#s(extended-node plist ((:name . "r-2-3-15<->-l-2-3-5")) arc-list (#s(costed-arc plist nil from #1274# to #1275=#s(extended-node plist ((:name . #1344="l-2-3-5")) arc-list (#s(costed-arc plist nil from #1275# to #1274# cost 0) #s(costed-arc plist nil from #1275# to #1276=#s(extended-node plist ((:name . "r-2-3-20<->-l-2-3-5")) arc-list (#s(costed-arc plist nil from #1276# to #1275# cost 0) #s(costed-arc plist nil from #1276# to #1277=#s(extended-node plist ((:name . #1333="r-2-3-20")) arc-list (#s(costed-arc plist nil from #1277# to #1278=#s(extended-node plist ((:name . "r-2-3-20<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1278# to #1279=#s(extended-node plist ((:name . #1283="l-1-3-4")) arc-list (#s(costed-arc plist nil from #1279# to #1280=#s(extended-node plist ((:name . "r-0-3-1<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1280# to #1279# cost 0) #s(costed-arc plist nil from #1280# to #1281=#s(extended-node plist ((:name . #1282="r-0-3-1")) arc-list (#s(costed-arc plist nil from #1281# to #1280# cost 0) #s(costed-arc plist nil from #1281# to #1257# cost 1.26906) #s(costed-arc plist nil from #1281# to #1083# cost 0.681087) #s(costed-arc plist nil from #1281# to #1137# cost 0.572472) #s(costed-arc plist nil from #1281# to #1229# cost 0.528469) #s(costed-arc plist nil from #1281# to #1226# cost 0.530504) #s(costed-arc plist nil from #1281# to #1223# cost 0.541008) #s(costed-arc plist nil from #1281# to #983# cost 0.615011) #s(costed-arc plist nil from #1281# to #1220# cost 0.649758) #s(costed-arc plist nil from #1281# to #1217# cost 0.564147) #s(costed-arc plist nil from #1281# to #1214# cost 0.499977) #s(costed-arc plist nil from #1281# to #1203# cost 0.437789) #s(costed-arc plist nil from #1281# to #1211# cost 0.462147) #s(costed-arc plist nil from #1281# to #1208# cost 0.533474) #s(costed-arc plist nil from #1281# to #1065# cost 0.610115) #s(costed-arc plist nil from #1281# to #1037# cost 0.511537) #s(costed-arc plist nil from #1281# to #1049# cost 0.43131) #s(costed-arc plist nil from #1281# to #1199# cost 0.404415) #s(costed-arc plist nil from #1281# to #1019# cost 0.379969) #s(costed-arc plist nil from #1281# to #987# cost 0.459309) #s(costed-arc plist nil from #1281# to #1026# cost 0.579504) #s(costed-arc plist nil from #1281# to #999# cost 0.497186) #s(costed-arc plist nil from #1281# to #1003# cost 0.41811) #s(costed-arc plist nil from #1281# to #995# cost 0.368253) #s(costed-arc plist nil from #1281# to #991# cost 0.364663) #s(costed-arc plist nil from #1281# to #1258# cost 0.489949)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(217.133 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -25.7994 25.0827 -37.5097 -104.807 -14.4243 -23.4813 180.19 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.831619 -0.555346 0.0) (0.555346 0.831619 0.0) (0.0 0.0 1.0)) pos #f(-474.503 273.408 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1282# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(239.611 -32.1539 19.4387 188.637 -33.1234 -103.794 -30.0 180.0 -27.8775 25.2314 -40.4853 -102.831 -14.0239 -30.671 180.19 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.831619 -0.555346 0.0) (0.555346 0.831619 0.0) (0.0 0.0 1.0)) pos #f(-474.503 273.408 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1284=#s(extended-node plist ((:name . "r-0-3-2<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1284# to #1279# cost 0) #s(costed-arc plist nil from #1284# to #1285=#s(extended-node plist ((:name . #1336="r-0-3-2")) arc-list (#s(costed-arc plist nil from #1285# to #1286=#s(extended-node plist ((:name . "r-0-3-2<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1286# to #1287=#s(extended-node plist ((:name . #1289="l-1-3-1")) arc-list (#s(costed-arc plist nil from #1287# to #1286# cost 0) #s(costed-arc plist nil from #1287# to #1288=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1288# to #1287# cost 0) #s(costed-arc plist nil from #1288# to #32# cost 0)) arm :arms islands (#34# #1289#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(214.63 -20.5174 -12.7762 1.25982 -30.9924 88.2819 -30.0 180.0 -35.1461 58.8036 -81.7406 -64.5515 -21.568 -30.8102 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1287# to #1290=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-1")) arc-list (#s(costed-arc plist nil from #1290# to #1287# cost 0) #s(costed-arc plist nil from #1290# to #1291=#s(extended-node plist ((:name . #1298="r-0-3-10")) arc-list (#s(costed-arc plist nil from #1291# to #1290# cost 0) #s(costed-arc plist nil from #1291# to #1292=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1292# to #1293=#s(extended-node plist ((:name . #1295="l-1-3-2")) arc-list (#s(costed-arc plist nil from #1293# to #1294=#s(extended-node plist ((:name . "r-0-3-3<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1294# to #1293# cost 0) #s(costed-arc plist nil from #1294# to #21# cost 0)) arm :arms islands (#29# #1295#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(146.111 -24.7945 -4.99771 -6.42557 -23.6855 97.3081 -30.0 180.0 -33.11 39.3288 -61.4032 -89.2801 -11.8742 -35.1662 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1293# to #1296=#s(extended-node plist ((:name . "r-0-3-4<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1296# to #1293# cost 0) #s(costed-arc plist nil from #1296# to #25# cost 0)) arm :arms islands (#41# #1295#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(202.554 -23.1453 1.62761 -2.87455 -26.9575 93.2447 -30.0 180.0 -36.8666 49.8014 -75.0488 -75.8644 -15.6736 -35.8184 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1293# to #1297=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-2")) arc-list (#s(costed-arc plist nil from #1297# to #1293# cost 0) #s(costed-arc plist nil from #1297# to #32# cost 0)) arm :arms islands (#34# #1295#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(210.497 -20.5256 10.8385 0.756569 -56.8483 88.9159 -30.0 180.0 -35.3182 59.1277 -81.3451 -65.1943 -21.4549 -30.5261 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1293# to #1292# cost 0) #s(costed-arc plist nil from #1293# to #1078# cost 0.951236) #s(costed-arc plist nil from #1293# to #1094# cost 0.597573) #s(costed-arc plist nil from #1293# to #1182# cost 0.753385) #s(costed-arc plist nil from #1293# to #1179# cost 0.967713)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(186.024 78.5908 -1.33824 63.5044 -77.3523 5.42291 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.991463 -0.130391 0.0) (0.130391 0.991463 0.0) (0.0 0.0 1.0)) pos #f(-157.287 -276.733 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1292# to #1291# cost 0)) arm :arms islands (#1298# #1295#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(141.179 -29.4242 4.3502 -4.1918 -61.1658 97.6337 -30.0 180.0 -36.2948 42.9973 -64.4251 -68.0821 -13.2372 -35.4505 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1291# to #1299=#s(extended-node plist ((:name . "r-0-3-10<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1299# to #1300=#s(extended-node plist ((:name . #1305="l-1-3-5")) arc-list (#s(costed-arc plist nil from #1300# to #1301=#s(extended-node plist ((:name . "r-0-3-9<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1301# to #1300# cost 0) #s(costed-arc plist nil from #1301# to #1302=#s(extended-node plist ((:name . #1304="r-0-3-9")) arc-list (#s(costed-arc plist nil from #1302# to #1303=#s(extended-node plist ((:name . "r-0-3-9<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1303# to #1279# cost 0) #s(costed-arc plist nil from #1303# to #1302# cost 0)) arm :arms islands (#1304# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(165.888 -28.6685 6.69504 183.767 -53.2132 -97.4004 -30.0 180.0 -35.6183 33.3799 -60.7659 -76.3825 -15.3824 -33.0693 188.595 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1302# to #1301# cost 0) #s(costed-arc plist nil from #1302# to #1257# cost 1.25749) #s(costed-arc plist nil from #1302# to #1083# cost 0.511615) #s(costed-arc plist nil from #1302# to #1137# cost 0.44187) #s(costed-arc plist nil from #1302# to #1229# cost 0.446377) #s(costed-arc plist nil from #1302# to #1226# cost 0.480774) #s(costed-arc plist nil from #1302# to #1223# cost 0.496756) #s(costed-arc plist nil from #1302# to #983# cost 0.580769) #s(costed-arc plist nil from #1302# to #1220# cost 0.464637) #s(costed-arc plist nil from #1302# to #1217# cost 0.387629) #s(costed-arc plist nil from #1302# to #1214# cost 0.413387) #s(costed-arc plist nil from #1302# to #1203# cost 0.431677) #s(costed-arc plist nil from #1302# to #1211# cost 0.490849) #s(costed-arc plist nil from #1302# to #1208# cost 0.5455) #s(costed-arc plist nil from #1302# to #1065# cost 0.425286) #s(costed-arc plist nil from #1302# to #1037# cost 0.340886) #s(costed-arc plist nil from #1302# to #1049# cost 0.316232) #s(costed-arc plist nil from #1302# to #1199# cost 0.411615) #s(costed-arc plist nil from #1302# to #1019# cost 0.466399) #s(costed-arc plist nil from #1302# to #987# cost 0.54663) #s(costed-arc plist nil from #1302# to #1026# cost 0.447638) #s(costed-arc plist nil from #1302# to #999# cost 0.350137) #s(costed-arc plist nil from #1302# to #1003# cost 0.340207) #s(costed-arc plist nil from #1302# to #995# cost 0.399967) #s(costed-arc plist nil from #1302# to #991# cost 0.476798) #s(costed-arc plist nil from #1302# to #1258# cost 0.651825)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(211.313 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7751 39.5318 -60.3528 -77.6497 -15.7713 -28.419 188.595 0.0 0.0) robot-pose-optimized #f(207.146 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.801 44.7071 -65.6771 -90.3382 -19.4124 -37.6962 188.289 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.457564 -0.889177 0.0) (0.889177 0.457564 0.0) (0.0 0.0 1.0)) pos #f(-457.582 244.051 0.0)) object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1304# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(124.382 -28.9862 30.4911 200.329 -13.0804 -114.062 -30.0 180.0 -34.7263 30.6969 -58.4079 -77.3017 -14.8942 -32.3943 188.595 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.84085 -0.541268 0.0) (0.541268 0.84085 0.0) (0.0 0.0 1.0)) pos #f(-471.646 252.3 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1299# cost 0) #s(costed-arc plist nil from #1300# to #1306=#s(extended-node plist ((:name . "r-0-3-11<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1306# to #1300# cost 0) #s(costed-arc plist nil from #1306# to #1307=#s(extended-node plist ((:name . #1308="r-0-3-11")) arc-list (#s(costed-arc plist nil from #1307# to #1306# cost 0) #s(costed-arc plist nil from #1307# to #1257# cost 1.30151) #s(costed-arc plist nil from #1307# to #1083# cost 0.415002) #s(costed-arc plist nil from #1307# to #1137# cost 0.391704) #s(costed-arc plist nil from #1307# to #1229# cost 0.458001) #s(costed-arc plist nil from #1307# to #1226# cost 0.51065) #s(costed-arc plist nil from #1307# to #1223# cost 0.5144) #s(costed-arc plist nil from #1307# to #983# cost 0.599389) #s(costed-arc plist nil from #1307# to #1220# cost 0.338931) #s(costed-arc plist nil from #1307# to #1217# cost 0.346262) #s(costed-arc plist nil from #1307# to #1214# cost 0.469097) #s(costed-arc plist nil from #1307# to #1203# cost 0.529246) #s(costed-arc plist nil from #1307# to #1211# cost 0.584246) #s(costed-arc plist nil from #1307# to #1208# cost 0.60524) #s(costed-arc plist nil from #1307# to #1065# cost 0.312681) #s(costed-arc plist nil from #1307# to #1037# cost 0.332818) #s(costed-arc plist nil from #1307# to #1049# cost 0.399975) #s(costed-arc plist nil from #1307# to #1199# cost 0.516047) #s(costed-arc plist nil from #1307# to #1019# cost 0.585126) #s(costed-arc plist nil from #1307# to #987# cost 0.65023) #s(costed-arc plist nil from #1307# to #1026# cost 0.425427) #s(costed-arc plist nil from #1307# to #999# cost 0.362174) #s(costed-arc plist nil from #1307# to #1003# cost 0.427621) #s(costed-arc plist nil from #1307# to #995# cost 0.516706) #s(costed-arc plist nil from #1307# to #991# cost 0.600726) #s(costed-arc plist nil from #1307# to #1258# cost 0.774799)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(200.873 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -35.7975 49.2352 -74.835 -51.1344 -17.3134 -31.9075 187.856 0.0 0.0) robot-pose-optimized #f(201.857 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.3204 71.2926 -60.7287 -59.3116 -12.3287 -49.2033 187.713 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.839323 -0.543634 0.0) (0.543634 0.839323 0.0) (0.0 0.0 1.0)) pos #f(-477.671 266.327 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.455058 -0.890462 0.0) (0.890462 0.455058 0.0) (0.0 0.0 1.0)) pos #f(-462.58 258.679 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1308# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(114.087 -30.8027 28.5748 201.177 -15.8574 -115.839 -30.0 180.0 -37.6756 44.825 -74.3273 -56.7561 -17.2487 -39.7217 187.856 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.839323 -0.543634 0.0) (0.543634 0.839323 0.0) (0.0 0.0 1.0)) pos #f(-477.671 266.327 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1309=#s(extended-node plist ((:name . "r-0-3-19<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1309# to #1300# cost 0) #s(costed-arc plist nil from #1309# to #1310=#s(extended-node plist ((:name . #1312="r-0-3-19")) arc-list (#s(costed-arc plist nil from #1310# to #1311=#s(extended-node plist ((:name . "r-0-3-19<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1311# to #1279# cost 0) #s(costed-arc plist nil from #1311# to #1310# cost 0)) arm :arms islands (#1312# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(232.637 -21.7043 61.0117 15.5045 -80.6494 82.6134 -30.0 180.0 -21.2766 1.89063 -25.6565 -25.5111 -13.6163 -23.3236 177.796 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1310# to #1309# cost 0) #s(costed-arc plist nil from #1310# to #1257# cost 1.63256) #s(costed-arc plist nil from #1310# to #1083# cost 0.622744) #s(costed-arc plist nil from #1310# to #1137# cost 0.6467) #s(costed-arc plist nil from #1310# to #1229# cost 0.639975) #s(costed-arc plist nil from #1310# to #1226# cost 0.616427) #s(costed-arc plist nil from #1310# to #1223# cost 0.475816) #s(costed-arc plist nil from #1310# to #983# cost 0.406996) #s(costed-arc plist nil from #1310# to #1220# cost 0.81368) #s(costed-arc plist nil from #1310# to #1217# cost 0.798316) #s(costed-arc plist nil from #1310# to #1214# cost 0.815211) #s(costed-arc plist nil from #1310# to #1203# cost 0.799048) #s(costed-arc plist nil from #1310# to #1211# cost 0.75758) #s(costed-arc plist nil from #1310# to #1208# cost 0.622487) #s(costed-arc plist nil from #1310# to #1065# cost 0.877839) #s(costed-arc plist nil from #1310# to #1037# cost 0.864219) #s(costed-arc plist nil from #1310# to #1049# cost 0.852973) #s(costed-arc plist nil from #1310# to #1199# cost 0.855805) #s(costed-arc plist nil from #1310# to #1019# cost 0.838743) #s(costed-arc plist nil from #1310# to #987# cost 0.789189) #s(costed-arc plist nil from #1310# to #1026# cost 0.96051) #s(costed-arc plist nil from #1310# to #999# cost 0.929597) #s(costed-arc plist nil from #1310# to #1003# cost 0.925914) #s(costed-arc plist nil from #1310# to #995# cost 0.924953) #s(costed-arc plist nil from #1310# to #991# cost 0.898632) #s(costed-arc plist nil from #1310# to #1258# cost 0.941197)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(203.276 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -22.4785 -2.35494 -32.9386 -24.5276 -14.6228 -19.2909 177.796 0.0 0.0) robot-pose-optimized #f(197.519 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -59.7178 3.13429 -36.2553 -38.1911 -13.0017 -38.7018 178.312 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.222146 -0.975013 0.0) (0.975013 0.222146 0.0) (0.0 0.0 1.0)) pos #f(-306.685 157.945 0.0)) object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1312# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(222.965 -22.4993 57.5958 26.995 -28.8529 73.4847 -30.0 180.0 -21.034 0.995511 -25.2787 -25.0346 -13.5982 -22.7245 177.796 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.679891 -0.733313 0.0) (0.733313 0.679891 0.0) (0.0 0.0 1.0)) pos #f(-304.897 184.371 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1313=#s(extended-node plist ((:name . "r-0-3-21<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1313# to #1300# cost 0) #s(costed-arc plist nil from #1313# to #1260# cost 0)) arm :arms islands (#1262# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(197.049 -26.4861 58.5316 11.8296 -38.0234 83.4945 -30.0 180.0 -23.996 21.0718 -37.7345 -28.6766 -14.0446 -19.8979 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1314=#s(extended-node plist ((:name . "r-2-3-10<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1314# to #1300# cost 0) #s(costed-arc plist nil from #1314# to #1315=#s(extended-node plist ((:name . #1321="r-2-3-10")) arc-list (#s(costed-arc plist nil from #1315# to #1314# cost 0) #s(costed-arc plist nil from #1315# to #1156# cost 0.402246) #s(costed-arc plist nil from #1315# to #1130# cost 0.502774) #s(costed-arc plist nil from #1315# to #1149# cost 0.654822) #s(costed-arc plist nil from #1315# to #1109# cost 0.512495) #s(costed-arc plist nil from #1315# to #1232# cost 0.30053) #s(costed-arc plist nil from #1315# to #1087# cost 0.25599) #s(costed-arc plist nil from #1315# to #1105# cost 0.313777) #s(costed-arc plist nil from #1315# to #1125# cost 0.447951) #s(costed-arc plist nil from #1315# to #1102# cost 0.355393) #s(costed-arc plist nil from #1315# to #1122# cost 0.445051) #s(costed-arc plist nil from #1315# to #1119# cost 0.620523) #s(costed-arc plist nil from #1315# to #1316=#s(extended-node plist ((:name . "r-2-4-8")) arc-list (#s(costed-arc plist nil from #1316# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(253.353 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 16.9938 -1.1628 -133.035 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.87689 -0.480691 0.0) (0.480691 0.87689 0.0) (0.0 0.0 1.0)) pos #f(-338.556 434.877 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.673977) #s(costed-arc plist nil from #1315# to #1098# cost 0.710811) #s(costed-arc plist nil from #1315# to #1317=#s(extended-node plist ((:name . "r-2-4-5")) arc-list (#s(costed-arc plist nil from #1317# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(153.274 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 10.8239 51.19 -147.911 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(159.209 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 0.449876 52.5215 -165.998 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.879748 -0.47544 0.0) (0.47544 0.879748 0.0) (0.0 0.0 1.0)) pos #f(-443.577 625.113 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.735649 -0.677363 0.0) (0.677363 0.735649 0.0) (0.0 0.0 1.0)) pos #f(-456.905 586.675 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.761253) #s(costed-arc plist nil from #1315# to #1318=#s(extended-node plist ((:name . "r-2-4-4")) arc-list (#s(costed-arc plist nil from #1318# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(233.888 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.4049 37.7019 -141.838 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(277.645 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 5.44311 44.7555 -171.769 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.954491 -0.298239 0.0) (0.298239 0.954491 0.0) (0.0 0.0 1.0)) pos #f(-423.236 534.465 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.677494 -0.735528 0.0) (0.735528 0.677494 0.0) (0.0 0.0 1.0)) pos #f(-442.924 496.883 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.862592) #s(costed-arc plist nil from #1315# to #1319=#s(extended-node plist ((:name . "r-2-4-3")) arc-list (#s(costed-arc plist nil from #1319# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.366 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.7518 17.5706 -139.902 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.966947 -0.254976 0.0) (0.254976 0.966947 0.0) (0.0 0.0 1.0)) pos #f(-481.232 497.517 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.897285) #s(costed-arc plist nil from #1315# to #1320=#s(extended-node plist ((:name . "r-2-4-2")) arc-list (#s(costed-arc plist nil from #1320# to #980# cost 1)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.949 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.8761 -1.20342 -140.333 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.974158 -0.225868 0.0) (0.225868 0.974158 0.0) (0.0 0.0 1.0)) pos #f(-498.349 497.947 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.977869) #s(costed-arc plist nil from #1315# to #1145# cost 1.08028)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(160.564 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 1.51339 28.1303 -151.193 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(254.773 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.5294 41.3305 -189.048 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.603195 -0.797594 0.0) (0.797594 0.603195 0.0) (0.0 0.0 1.0)) pos #f(-273.023 184.957 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.123585 -0.992334 0.0) (0.992334 0.123585 0.0) (0.0 0.0 1.0)) pos #f(-267.191 142.934 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1321# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(159.259 -21.7618 64.2116 23.4102 -62.2959 80.1776 -30.0 180.0 1.60483 27.9237 -150.367 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.603195 -0.797594 0.0) (0.797594 0.603195 0.0) (0.0 0.0 1.0)) pos #f(-273.023 184.957 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1322=#s(extended-node plist ((:name . "r-2-3-13<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1322# to #1300# cost 0) #s(costed-arc plist nil from #1322# to #1323=#s(extended-node plist ((:name . #1325="r-2-3-13")) arc-list (#s(costed-arc plist nil from #1323# to #1324=#s(extended-node plist ((:name . "r-2-3-13<->-l-0-3-3")) arc-list (#s(costed-arc plist nil from #1324# to #1240# cost 0) #s(costed-arc plist nil from #1324# to #1323# cost 0)) arm :arms islands (#1325# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(260.16 41.3635 60.2524 114.558 -121.542 280.914 -88.8084 180.0 -4.31974 -18.9963 -155.916 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1323# to #1326=#s(extended-node plist ((:name . "r-2-3-13<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1326# to #19# cost 0) #s(costed-arc plist nil from #1326# to #1323# cost 0)) arm :arms islands (#1325# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(257.46 49.1782 61.3927 126.772 -121.538 238.89 -95.8324 180.0 -4.33587 -19.3597 -156.355 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1323# to #1327=#s(extended-node plist ((:name . "r-2-3-13<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1327# to #1279# cost 0) #s(costed-arc plist nil from #1327# to #1323# cost 0)) arm :arms islands (#1325# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(257.688 20.0918 55.464 83.5182 -91.8001 55.6787 -30.0 180.0 -3.74014 -19.6544 -141.053 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1323# to #1322# cost 0) #s(costed-arc plist nil from #1323# to #1156# cost 0.535598) #s(costed-arc plist nil from #1323# to #1130# cost 0.425545) #s(costed-arc plist nil from #1323# to #1149# cost 0.32947) #s(costed-arc plist nil from #1323# to #1109# cost 0.614868) #s(costed-arc plist nil from #1323# to #1232# cost 0.694764) #s(costed-arc plist nil from #1323# to #1087# cost 0.696398) #s(costed-arc plist nil from #1323# to #1105# cost 0.681948) #s(costed-arc plist nil from #1323# to #1125# cost 0.501514) #s(costed-arc plist nil from #1323# to #1102# cost 1.02502) #s(costed-arc plist nil from #1323# to #1122# cost 1.09876) #s(costed-arc plist nil from #1323# to #1119# cost 1.14198) #s(costed-arc plist nil from #1323# to #1316# cost 1.05725) #s(costed-arc plist nil from #1323# to #1098# cost 0.988682) #s(costed-arc plist nil from #1323# to #1317# cost 1.45489) #s(costed-arc plist nil from #1323# to #1318# cost 1.4942) #s(costed-arc plist nil from #1323# to #1319# cost 1.45164) #s(costed-arc plist nil from #1323# to #1320# cost 1.42215) #s(costed-arc plist nil from #1323# to #1145# cost 1.42752)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(260.765 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.38627 -19.744 -130.01 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1325# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(250.004 10.5358 54.734 108.233 -47.2343 42.4276 -30.0 180.0 -3.72646 -20.2598 -140.853 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.260323 -0.965522 0.0) (0.965522 0.260323 0.0) (0.0 0.0 1.0)) pos #f(5.62433 76.5795 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1328=#s(extended-node plist ((:name . "r-2-3-17<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1328# to #1300# cost 0) #s(costed-arc plist nil from #1328# to #1329=#s(extended-node plist ((:name . #1331="r-2-3-17")) arc-list (#s(costed-arc plist nil from #1329# to #1330=#s(extended-node plist ((:name . "r-2-3-17<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1330# to #1279# cost 0) #s(costed-arc plist nil from #1330# to #1329# cost 0)) arm :arms islands (#1331# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(132.959 22.713 47.3688 74.5345 -118.608 40.5097 -30.0 180.0 -2.85219 46.8285 -149.094 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1329# to #1328# cost 0) #s(costed-arc plist nil from #1329# to #1156# cost 0.63169) #s(costed-arc plist nil from #1329# to #1130# cost 0.740879) #s(costed-arc plist nil from #1329# to #1149# cost 0.791537) #s(costed-arc plist nil from #1329# to #1109# cost 0.482816) #s(costed-arc plist nil from #1329# to #1232# cost 0.740028) #s(costed-arc plist nil from #1329# to #1087# cost 0.878197) #s(costed-arc plist nil from #1329# to #1105# cost 0.99052) #s(costed-arc plist nil from #1329# to #1125# cost 1.00809) #s(costed-arc plist nil from #1329# to #1102# cost 0.915434) #s(costed-arc plist nil from #1329# to #1122# cost 1.13161) #s(costed-arc plist nil from #1329# to #1119# cost 1.33524) #s(costed-arc plist nil from #1329# to #1316# cost 1.39955) #s(costed-arc plist nil from #1329# to #1098# cost 1.43884) #s(costed-arc plist nil from #1329# to #1317# cost 1.34009) #s(costed-arc plist nil from #1329# to #1318# cost 1.52529) #s(costed-arc plist nil from #1329# to #1319# cost 1.62791) #s(costed-arc plist nil from #1329# to #1320# cost 1.73145) #s(costed-arc plist nil from #1329# to #1145# cost 1.83109)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(122.002 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -2.91641 45.9578 -150.108 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(119.196 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.97271 45.5917 -153.445 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.026477 -0.999649 0.0) (0.999649 -0.026477 0.0) (0.0 0.0 1.0)) pos #f(133.828 89.2768 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1331# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(124.721 26.8619 47.8681 108.868 -88.423 48.7428 -30.0 180.0 -2.87966 46.1563 -149.36 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.044352 -0.999016 0.0) (0.999016 0.044352 0.0) (0.0 0.0 1.0)) pos #f(128.329 106.178 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1332=#s(extended-node plist ((:name . "r-2-3-20<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1332# to #1300# cost 0) #s(costed-arc plist nil from #1332# to #1277# cost 0)) arm :arms islands (#1333# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(207.607 25.4622 44.6421 130.291 -63.1705 37.8885 -30.0 180.0 -12.9374 -6.28543 -127.581 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1334=#s(extended-node plist ((:name . "r-2-3-22<->-l-1-3-5")) arc-list (#s(costed-arc plist nil from #1334# to #1300# cost 0) #s(costed-arc plist nil from #1334# to #17# cost 0)) arm :arms islands (#1335# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(210.241 42.8789 39.8241 149.853 -67.1484 40.9949 -30.0 180.0 0.501381 34.9733 -149.74 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1300# to #1078# cost 0.64721) #s(costed-arc plist nil from #1300# to #1094# cost 0.546783) #s(costed-arc plist nil from #1300# to #1182# cost 0.985124) #s(costed-arc plist nil from #1300# to #1179# cost 1.2554)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(128.673 74.6287 57.1851 75.5669 -76.7638 58.1318 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(122.548 34.9715 45.9331 81.0467 -58.6625 43.9936 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995063 -0.099245 0.0) (0.099245 0.995063 0.0) (0.0 0.0 1.0)) pos #f(-199.233 -95.9712 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.812127 -0.58348 0.0) (0.58348 0.812127 0.0) (0.0 0.0 1.0)) pos #f(-180.276 -80.4206 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1299# to #1291# cost 0)) arm :arms islands (#1298# #1305#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(102.588 -30.2909 36.5877 -27.8303 -15.0485 114.008 -30.0 180.0 -35.8416 41.4146 -62.3707 -70.3396 -12.7242 -35.2023 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1291# to #1257# cost 1.28701) #s(costed-arc plist nil from #1291# to #1083# cost 0.470023) #s(costed-arc plist nil from #1291# to #1137# cost 0.424386) #s(costed-arc plist nil from #1291# to #1229# cost 0.447644) #s(costed-arc plist nil from #1291# to #1226# cost 0.493722) #s(costed-arc plist nil from #1291# to #1223# cost 0.506696) #s(costed-arc plist nil from #1291# to #983# cost 0.599975) #s(costed-arc plist nil from #1291# to #1220# cost 0.405437) #s(costed-arc plist nil from #1291# to #1217# cost 0.352554) #s(costed-arc plist nil from #1291# to #1214# cost 0.444539) #s(costed-arc plist nil from #1291# to #1203# cost 0.476132) #s(costed-arc plist nil from #1291# to #1211# cost 0.536868) #s(costed-arc plist nil from #1291# to #1208# cost 0.578008) #s(costed-arc plist nil from #1291# to #1065# cost 0.364972) #s(costed-arc plist nil from #1291# to #1037# cost 0.312693) #s(costed-arc plist nil from #1291# to #1049# cost 0.347869) #s(costed-arc plist nil from #1291# to #1199# cost 0.469031) #s(costed-arc plist nil from #1291# to #1019# cost 0.525088) #s(costed-arc plist nil from #1291# to #987# cost 0.60047) #s(costed-arc plist nil from #1291# to #1026# cost 0.432963) #s(costed-arc plist nil from #1291# to #999# cost 0.334539) #s(costed-arc plist nil from #1291# to #1003# cost 0.368987) #s(costed-arc plist nil from #1291# to #995# cost 0.450594) #s(costed-arc plist nil from #1291# to #991# cost 0.538531) #s(costed-arc plist nil from #1291# to #1258# cost 0.710657)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(205.897 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.1641 48.0141 -64.6843 -65.7258 -13.5987 -31.62 188.367 0.0 0.0) robot-pose-optimized #f(205.673 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -71.2934 61.031 -63.465 -74.3138 -13.3245 -47.8178 188.192 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.459448 -0.888205 0.0) (0.888205 0.459448 0.0) (0.0 0.0 1.0)) pos #f(-474.29 247.682 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1298# #1289#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.519 -29.5365 -15.8278 -7.04214 -36.49 101.089 -30.0 180.0 -36.5244 44.0159 -65.9073 -66.273 -13.6299 -35.4265 188.367 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.841996 -0.539484 0.0) (0.539484 0.841996 0.0) (0.0 0.0 1.0)) pos #f(-485.841 257.7 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1287# to #1078# cost 1.06261) #s(costed-arc plist nil from #1287# to #1094# cost 0.697694) #s(costed-arc plist nil from #1287# to #1182# cost 0.776225) #s(costed-arc plist nil from #1287# to #1179# cost 0.937061)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(190.091 78.4945 -15.5444 47.3403 -68.6685 -0.909794 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.993089 -0.117366 0.0) (0.117366 0.993089 0.0) (0.0 0.0 1.0)) pos #f(-128.44 -259.991 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1286# to #1285# cost 0)) arm :arms islands (#1336# #1289#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(216.732 -27.9861 -17.2084 -17.9719 -15.3245 110.292 -30.0 180.0 -31.8945 36.2699 -53.2717 -96.7953 -10.7301 -31.0494 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1285# to #1284# cost 0) #s(costed-arc plist nil from #1285# to #1257# cost 1.27874) #s(costed-arc plist nil from #1285# to #1083# cost 0.65845) #s(costed-arc plist nil from #1285# to #1137# cost 0.572551) #s(costed-arc plist nil from #1285# to #1229# cost 0.544825) #s(costed-arc plist nil from #1285# to #1226# cost 0.56419) #s(costed-arc plist nil from #1285# to #1223# cost 0.58783) #s(costed-arc plist nil from #1285# to #983# cost 0.678323) #s(costed-arc plist nil from #1285# to #1220# cost 0.608928) #s(costed-arc plist nil from #1285# to #1217# cost 0.526908) #s(costed-arc plist nil from #1285# to #1214# cost 0.499757) #s(costed-arc plist nil from #1285# to #1203# cost 0.465903) #s(costed-arc plist nil from #1285# to #1211# cost 0.521017) #s(costed-arc plist nil from #1285# to #1208# cost 0.601733) #s(costed-arc plist nil from #1285# to #1065# cost 0.553175) #s(costed-arc plist nil from #1285# to #1037# cost 0.454129) #s(costed-arc plist nil from #1285# to #1049# cost 0.388378) #s(costed-arc plist nil from #1285# to #1199# cost 0.432323) #s(costed-arc plist nil from #1285# to #1019# cost 0.450264) #s(costed-arc plist nil from #1285# to #987# cost 0.548068) #s(costed-arc plist nil from #1285# to #1026# cost 0.526263) #s(costed-arc plist nil from #1285# to #999# cost 0.421158) #s(costed-arc plist nil from #1285# to #1003# cost 0.352944) #s(costed-arc plist nil from #1285# to #995# cost 0.355206) #s(costed-arc plist nil from #1285# to #991# cost 0.432819) #s(costed-arc plist nil from #1285# to #1258# cost 0.601697)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(212.76 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.6374 38.8489 -50.9315 -99.4892 -10.7421 -25.5603 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1336# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(165.599 -28.1815 26.8135 -18.9236 -17.4576 107.086 -30.0 180.0 -29.5996 32.3311 -48.9927 -97.6521 -10.0894 -27.1726 188.244 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.843962 -0.536403 0.0) (0.536403 0.843962 0.0) (0.0 0.0 1.0)) pos #f(-533.579 237.694 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1337=#s(extended-node plist ((:name . "r-0-3-3<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1337# to #1279# cost 0) #s(costed-arc plist nil from #1337# to #21# cost 0)) arm :arms islands (#29# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(125.477 -24.9077 21.0483 -14.6592 -12.193 103.842 -30.0 180.0 -32.3572 38.0741 -59.7918 -90.038 -11.5467 -34.2233 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1338=#s(extended-node plist ((:name . "r-0-3-5<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1338# to #1279# cost 0) #s(costed-arc plist nil from #1338# to #32# cost 0)) arm :arms islands (#34# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(203.07 -20.3993 33.4877 2.51846 -24.2259 87.8739 -30.0 180.0 -35.5711 59.387 -80.901 -66.1737 -21.3131 -30.36 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1303# cost 0) #s(costed-arc plist nil from #1279# to #1311# cost 0) #s(costed-arc plist nil from #1279# to #1339=#s(extended-node plist ((:name . "r-0-3-21<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1339# to #1279# cost 0) #s(costed-arc plist nil from #1339# to #1260# cost 0)) arm :arms islands (#1262# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(205.49 -26.7376 57.7413 7.1464 -81.5869 85.7899 -30.0 180.0 -23.9663 21.4182 -38.0184 -28.3222 -14.0896 -19.8668 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1327# cost 0) #s(costed-arc plist nil from #1279# to #1330# cost 0) #s(costed-arc plist nil from #1279# to #1340=#s(extended-node plist ((:name . "r-2-3-19<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1340# to #1279# cost 0) #s(costed-arc plist nil from #1340# to #1341=#s(extended-node plist ((:name . #1342="r-2-3-19")) arc-list (#s(costed-arc plist nil from #1341# to #1340# cost 0) #s(costed-arc plist nil from #1341# to #1156# cost 0.66385) #s(costed-arc plist nil from #1341# to #1130# cost 0.563986) #s(costed-arc plist nil from #1341# to #1149# cost 0.442898) #s(costed-arc plist nil from #1341# to #1109# cost 0.754581) #s(costed-arc plist nil from #1341# to #1232# cost 0.861176) #s(costed-arc plist nil from #1341# to #1087# cost 0.867515) #s(costed-arc plist nil from #1341# to #1105# cost 0.864705) #s(costed-arc plist nil from #1341# to #1125# cost 0.682729) #s(costed-arc plist nil from #1341# to #1102# cost 1.19906) #s(costed-arc plist nil from #1341# to #1122# cost 1.27964) #s(costed-arc plist nil from #1341# to #1119# cost 1.32739) #s(costed-arc plist nil from #1341# to #1316# cost 1.24905) #s(costed-arc plist nil from #1341# to #1098# cost 1.18514) #s(costed-arc plist nil from #1341# to #1317# cost 1.63039) #s(costed-arc plist nil from #1341# to #1318# cost 1.67992) #s(costed-arc plist nil from #1341# to #1319# cost 1.64871) #s(costed-arc plist nil from #1341# to #1320# cost 1.62414) #s(costed-arc plist nil from #1341# to #1145# cost 1.62796)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(262.551 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.87028 -19.6619 -126.606 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.167396 -0.98589 0.0) (0.98589 0.167396 0.0) (0.0 0.0 1.0)) pos #f(218.537 84.6986 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1342# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(266.936 43.9482 39.1478 121.24 -95.4339 44.9536 -30.0 180.0 -6.37057 -18.607 -142.193 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.167396 -0.98589 0.0) (0.98589 0.167396 0.0) (0.0 0.0 1.0)) pos #f(218.537 84.6986 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1278# cost 0) #s(costed-arc plist nil from #1279# to #1343=#s(extended-node plist ((:name . "r-2-3-22<->-l-1-3-4")) arc-list (#s(costed-arc plist nil from #1343# to #1279# cost 0) #s(costed-arc plist nil from #1343# to #17# cost 0)) arm :arms islands (#1335# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(218.368 52.5235 29.1507 127.689 -105.84 41.4991 -30.0 180.0 0.526906 35.759 -149.386 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1279# to #1078# cost 0.693939) #s(costed-arc plist nil from #1279# to #1094# cost 0.481206) #s(costed-arc plist nil from #1279# to #1182# cost 0.884646) #s(costed-arc plist nil from #1279# to #1179# cost 1.16093)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 3 door-angle -80 solved t robot-pose #f(132.603 74.1978 48.8589 52.8918 -103.463 50.0981 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(137.92 40.4439 36.1922 65.6837 -79.0636 40.8955 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995728 -0.092337 0.0) (0.092337 0.995728 0.0) (0.0 0.0 1.0)) pos #f(-180.659 -137.355 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.816162 -0.577823 0.0) (0.577823 0.816162 0.0) (0.0 0.0 1.0)) pos #f(-163.1 -136.106 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1278# to #1277# cost 0)) arm :arms islands (#1333# #1283#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(216.539 34.5897 41.7617 102.14 -101.602 43.0677 -30.0 180.0 -12.9389 -5.27475 -127.493 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1277# to #1332# cost 0) #s(costed-arc plist nil from #1277# to #1276# cost 0) #s(costed-arc plist nil from #1277# to #1156# cost 0.575349) #s(costed-arc plist nil from #1277# to #1130# cost 0.479383) #s(costed-arc plist nil from #1277# to #1149# cost 0.491085) #s(costed-arc plist nil from #1277# to #1109# cost 0.653401) #s(costed-arc plist nil from #1277# to #1232# cost 0.754408) #s(costed-arc plist nil from #1277# to #1087# cost 0.767912) #s(costed-arc plist nil from #1277# to #1105# cost 0.814589) #s(costed-arc plist nil from #1277# to #1125# cost 0.736807) #s(costed-arc plist nil from #1277# to #1102# cost 1.093) #s(costed-arc plist nil from #1277# to #1122# cost 1.19098) #s(costed-arc plist nil from #1277# to #1119# cost 1.26617) #s(costed-arc plist nil from #1277# to #1316# cost 1.23698) #s(costed-arc plist nil from #1277# to #1098# cost 1.22957) #s(costed-arc plist nil from #1277# to #1317# cost 1.54031) #s(costed-arc plist nil from #1277# to #1318# cost 1.61376) #s(costed-arc plist nil from #1277# to #1319# cost 1.60621) #s(costed-arc plist nil from #1277# to #1320# cost 1.62067) #s(costed-arc plist nil from #1277# to #1145# cost 1.66806)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(260.191 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -12.9262 -0.311289 -126.367 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1333# #1344#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(189.526 4.8506 57.442 176.334 -120.0 20.0 -30.0 180.0 -12.931 -8.30235 -127.685 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.143695 -0.989622 0.0) (0.989622 0.143695 0.0) (0.0 0.0 1.0)) pos #f(152.163 68.2039 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1275# to #1345=#s(extended-node plist ((:name . "l-2-4-23")) arc-list (#s(costed-arc plist nil from #1345# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(189.564 40.0294 57.3364 129.742 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.995157 0.098296 0.0) (-0.098296 0.995157 0.0) (0.0 0.0 1.0)) pos #f(255.017 170.014 0.0)) base-coords-optimized nil object-coords-index 23 object-coords #937# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.545134) #s(costed-arc plist nil from #1275# to #1346=#s(extended-node plist ((:name . "l-2-4-22")) arc-list (#s(costed-arc plist nil from #1346# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(234.12 41.2426 37.3744 131.747 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(138.773 8.84795 24.7049 130.753 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998438 0.055864 0.0) (-0.055864 0.998438 0.0) (0.0 0.0 1.0)) pos #f(181.355 77.4977 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.892605 -0.45084 0.0) (0.45084 0.892605 0.0) (0.0 0.0 1.0)) pos #f(212.984 105.775 0.0)) object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.476814) #s(costed-arc plist nil from #1275# to #1347=#s(extended-node plist ((:name . "l-2-4-21")) arc-list (#s(costed-arc plist nil from #1347# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.402 38.1929 17.6944 143.752 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998965 0.045496 0.0) (-0.045496 0.998965 0.0) (0.0 0.0 1.0)) pos #f(107.058 54.7319 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.501957) #s(costed-arc plist nil from #1275# to #1348=#s(extended-node plist ((:name . "l-2-4-20")) arc-list (#s(costed-arc plist nil from #1348# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(249.977 38.5951 -0.882878 143.005 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999167 0.040802 0.0) (-0.040802 0.999167 0.0) (0.0 0.0 1.0)) pos #f(98.6919 39.3891 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.57693) #s(costed-arc plist nil from #1275# to #1349=#s(extended-node plist ((:name . "l-2-4-19")) arc-list (#s(costed-arc plist nil from #1349# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(254.245 38.8561 -20.1276 141.801 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998808 0.048812 0.0) (-0.048812 0.998808 0.0) (0.0 0.0 1.0)) pos #f(125.982 61.9013 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.703146) #s(costed-arc plist nil from #1275# to #1350=#s(extended-node plist ((:name . "l-2-4-17")) arc-list (#s(costed-arc plist nil from #1350# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(193.974 43.8176 58.4849 136.543 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998917 0.046535 0.0) (-0.046535 0.998917 0.0) (0.0 0.0 1.0)) pos #f(102.746 177.953 0.0)) base-coords-optimized nil object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.398957) #s(costed-arc plist nil from #1275# to #1351=#s(extended-node plist ((:name . "l-2-4-16")) arc-list (#s(costed-arc plist nil from #1351# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(232.919 44.3939 37.541 141.518 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(140.646 11.7432 25.2631 139.801 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999876 0.015749 0.0) (-0.015749 0.999876 0.0) (0.0 0.0 1.0)) pos #f(23.7663 80.1038 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.873815 -0.486259 0.0) (0.486259 0.873815 0.0) (0.0 0.0 1.0)) pos #f(54.2351 109.628 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.342597) #s(costed-arc plist nil from #1275# to #1352=#s(extended-node plist ((:name . "l-2-4-15")) arc-list (#s(costed-arc plist nil from #1352# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(243.775 52.3019 17.4549 135.186 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999999 -0.001637 0.0) (0.001637 0.999999 0.0) (0.0 0.0 1.0)) pos #f(44.0391 -28.9114 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.384373) #s(costed-arc plist nil from #1275# to #1353=#s(extended-node plist ((:name . "l-2-4-14")) arc-list (#s(costed-arc plist nil from #1353# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.776 46.8929 -0.96773 148.865 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999998 -0.00181 0.0) (0.00181 0.999998 0.0) (0.0 0.0 1.0)) pos #f(-13.6329 -4.06558 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.455229) #s(costed-arc plist nil from #1275# to #1354=#s(extended-node plist ((:name . "l-2-4-13")) arc-list (#s(costed-arc plist nil from #1354# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(252.225 47.5553 -20.2047 147.588 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999988 0.004835 0.0) (-0.004835 0.999988 0.0) (0.0 0.0 1.0)) pos #f(13.1432 20.8648 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.583152) #s(costed-arc plist nil from #1275# to #1355=#s(extended-node plist ((:name . "l-2-4-11")) arc-list (#s(costed-arc plist nil from #1355# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(196.912 51.2367 59.3102 143.219 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(202.223 84.6957 60.427 142.26 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999995 -0.003193 0.0) (0.003193 0.999995 0.0) (0.0 0.0 1.0)) pos #f(-31.2467 175.338 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.908735 0.417374 0.0) (-0.417374 0.908735 0.0) (0.0 0.0 1.0)) pos #f(-61.163 149.079 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.272685) #s(costed-arc plist nil from #1275# to #1114# cost 0.2375) #s(costed-arc plist nil from #1275# to #1356=#s(extended-node plist ((:name . "l-2-4-9")) arc-list (#s(costed-arc plist nil from #1356# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(241.81 56.7025 17.5357 144.831 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999264 -0.038364 0.0) (0.038364 0.999264 0.0) (0.0 0.0 1.0)) pos #f(-91.9139 -26.7407 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.279218) #s(costed-arc plist nil from #1275# to #1357=#s(extended-node plist ((:name . "l-2-4-8")) arc-list (#s(costed-arc plist nil from #1357# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(247.452 64.6385 -1.34746 138.132 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999227 -0.039306 0.0) (0.039306 0.999227 0.0) (0.0 0.0 1.0)) pos #f(-22.368 -77.9763 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.399098) #s(costed-arc plist nil from #1275# to #1358=#s(extended-node plist ((:name . "l-2-4-7")) arc-list (#s(costed-arc plist nil from #1358# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(250.707 59.1197 -20.2598 152.717 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99942 -0.034048 0.0) (0.034048 0.99942 0.0) (0.0 0.0 1.0)) pos #f(-65.5321 -16.9082 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.49685) #s(costed-arc plist nil from #1275# to #985# cost 0.205778) #s(costed-arc plist nil from #1275# to #989# cost 0.208836) #s(costed-arc plist nil from #1275# to #1191# cost 0.279024) #s(costed-arc plist nil from #1275# to #1185# cost 0.364482) #s(costed-arc plist nil from #1275# to #1359=#s(extended-node plist ((:name . "l-2-4-1")) arc-list (#s(costed-arc plist nil from #1359# to #980# cost 1)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 4 door-angle -100 solved t robot-pose #f(249.676 72.5312 -20.2598 156.042 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(273.647 64.5438 -17.1019 172.96 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997754 -0.066989 0.0) (0.066989 0.997754 0.0) (0.0 0.0 1.0)) pos #f(-116.22 -30.793 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.981194 -0.193026 0.0) (0.193026 0.981194 0.0) (0.0 0.0 1.0)) pos #f(-109.428 -27.3064 0.0)) object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.471471)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(200.696 59.7565 60.1039 142.681 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998138 -0.060989 0.0) (0.060989 0.998138 0.0) (0.0 0.0 1.0)) pos #f(-108.391 -80.8857 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1274# to #1271# cost 0)) arm :arms islands (#1273# #1344#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(196.85 1.63773 58.08 173.379 -120.0 20.0 -30.0 180.0 5.42653 12.6855 -153.862 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1271# to #1360=#s(extended-node plist ((:name . "r-2-3-15<->-l-2-3-10")) arc-list (#s(costed-arc plist nil from #1360# to #1361=#s(extended-node plist ((:name . #1369="l-2-3-10")) arc-list (#s(costed-arc plist nil from #1361# to #1360# cost 0) #s(costed-arc plist nil from #1361# to #1362=#s(extended-node plist ((:name . "r-2-3-21<->-l-2-3-10")) arc-list (#s(costed-arc plist nil from #1362# to #1361# cost 0) #s(costed-arc plist nil from #1362# to #1363=#s(extended-node plist ((:name . #1365="r-2-3-21")) arc-list (#s(costed-arc plist nil from #1363# to #1364=#s(extended-node plist ((:name . "r-2-3-21<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1364# to #1249# cost 0) #s(costed-arc plist nil from #1364# to #1363# cost 0)) arm :arms islands (#1365# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(239.751 64.5514 53.0383 128.081 -57.2395 -14.585 -88.2465 180.0 -13.0798 16.9466 -132.237 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1363# to #1362# cost 0) #s(costed-arc plist nil from #1363# to #1366=#s(extended-node plist ((:name . "r-2-3-21<->-l-2-3-14")) arc-list (#s(costed-arc plist nil from #1366# to #1367=#s(extended-node plist ((:name . #1368="l-2-3-14")) arc-list (#s(costed-arc plist nil from #1367# to #1366# cost 0) #s(costed-arc plist nil from #1367# to #1345# cost 0.650241) #s(costed-arc plist nil from #1367# to #1346# cost 0.433654) #s(costed-arc plist nil from #1367# to #1347# cost 0.289374) #s(costed-arc plist nil from #1367# to #1348# cost 0.21249) #s(costed-arc plist nil from #1367# to #1349# cost 0.301604) #s(costed-arc plist nil from #1367# to #1350# cost 0.574539) #s(costed-arc plist nil from #1367# to #1351# cost 0.369397) #s(costed-arc plist nil from #1367# to #1352# cost 0.182534) #s(costed-arc plist nil from #1367# to #1353# cost 0.142711) #s(costed-arc plist nil from #1367# to #1354# cost 0.225266) #s(costed-arc plist nil from #1367# to #1355# cost 0.54151) #s(costed-arc plist nil from #1367# to #1114# cost 0.371609) #s(costed-arc plist nil from #1367# to #1356# cost 0.250115) #s(costed-arc plist nil from #1367# to #1357# cost 0.171135) #s(costed-arc plist nil from #1367# to #1358# cost 0.26173) #s(costed-arc plist nil from #1367# to #985# cost 0.595241) #s(costed-arc plist nil from #1367# to #989# cost 0.439837) #s(costed-arc plist nil from #1367# to #1191# cost 0.341917) #s(costed-arc plist nil from #1367# to #1185# cost 0.306604) #s(costed-arc plist nil from #1367# to #1359# cost 0.354704)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(249.951 47.7878 -0.945119 141.143 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999983 -0.00589 0.0) (0.00589 0.999983 0.0) (0.0 0.0 1.0)) pos #f(36.3615 -136.594 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1366# to #1363# cost 0)) arm :arms islands (#1365# #1368#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(259.306 -32.3493 0.645047 199.471 -120.0 20.0 -30.0 180.0 -13.2715 19.3535 -138.791 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1363# to #1156# cost 0.478027) #s(costed-arc plist nil from #1363# to #1130# cost 0.550244) #s(costed-arc plist nil from #1363# to #1149# cost 0.602323) #s(costed-arc plist nil from #1363# to #1109# cost 0.555309) #s(costed-arc plist nil from #1363# to #1232# cost 0.662023) #s(costed-arc plist nil from #1363# to #1087# cost 0.737737) #s(costed-arc plist nil from #1363# to #1105# cost 0.828033) #s(costed-arc plist nil from #1363# to #1125# cost 0.832015) #s(costed-arc plist nil from #1363# to #1102# cost 0.988539) #s(costed-arc plist nil from #1363# to #1122# cost 1.11529) #s(costed-arc plist nil from #1363# to #1119# cost 1.25118) #s(costed-arc plist nil from #1363# to #1316# cost 1.28153) #s(costed-arc plist nil from #1363# to #1098# cost 1.2929) #s(costed-arc plist nil from #1363# to #1317# cost 1.45274) #s(costed-arc plist nil from #1363# to #1318# cost 1.56389) #s(costed-arc plist nil from #1363# to #1319# cost 1.5933) #s(costed-arc plist nil from #1363# to #1320# cost 1.64729) #s(costed-arc plist nil from #1363# to #1145# cost 1.72045)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(249.937 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -13.3032 18.342 -139.411 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1365# #1369#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(270.816 -17.7367 44.6327 194.457 -120.0 20.0 -30.0 180.0 -13.2313 20.5781 -137.882 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.12888 -0.99166 0.0) (0.99166 0.12888 0.0) (0.0 0.0 1.0)) pos #f(166.035 79.9297 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1361# to #1345# cost 0.527099) #s(costed-arc plist nil from #1361# to #1346# cost 0.350024) #s(costed-arc plist nil from #1361# to #1347# cost 0.360129) #s(costed-arc plist nil from #1361# to #1348# cost 0.427259) #s(costed-arc plist nil from #1361# to #1349# cost 0.551946) #s(costed-arc plist nil from #1361# to #1350# cost 0.424336) #s(costed-arc plist nil from #1361# to #1351# cost 0.246217) #s(costed-arc plist nil from #1361# to #1352# cost 0.224928) #s(costed-arc plist nil from #1361# to #1353# cost 0.329917) #s(costed-arc plist nil from #1361# to #1354# cost 0.452097) #s(costed-arc plist nil from #1361# to #1355# cost 0.363913) #s(costed-arc plist nil from #1361# to #1114# cost 0.163929) #s(costed-arc plist nil from #1361# to #1356# cost 0.200117) #s(costed-arc plist nil from #1361# to #1357# cost 0.260759) #s(costed-arc plist nil from #1361# to #1358# cost 0.399902) #s(costed-arc plist nil from #1361# to #985# cost 0.366711) #s(costed-arc plist nil from #1361# to #989# cost 0.240646) #s(costed-arc plist nil from #1361# to #1191# cost 0.266549) #s(costed-arc plist nil from #1361# to #1185# cost 0.342765) #s(costed-arc plist nil from #1361# to #1359# cost 0.446073)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(229.42 52.8601 36.9039 137.08 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(142.525 19.2595 25.1853 130.984 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999453 -0.033067 0.0) (0.033067 0.999453 0.0) (0.0 0.0 1.0)) pos #f(-46.9758 -140.067 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.849035 -0.528336 0.0) (0.528336 0.849035 0.0) (0.0 0.0 1.0)) pos #f(-17.9842 -109.091 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1360# to #1271# cost 0)) arm :arms islands (#1273# #1369#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(241.672 -18.3823 38.7837 175.762 -120.0 20.0 -30.0 180.0 5.42152 17.7756 -154.445 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1271# to #1156# cost 0.403041) #s(costed-arc plist nil from #1271# to #1130# cost 0.474277) #s(costed-arc plist nil from #1271# to #1149# cost 0.510077) #s(costed-arc plist nil from #1271# to #1109# cost 0.429167) #s(costed-arc plist nil from #1271# to #1232# cost 0.561047) #s(costed-arc plist nil from #1271# to #1087# cost 0.63134) #s(costed-arc plist nil from #1271# to #1105# cost 0.670863) #s(costed-arc plist nil from #1271# to #1125# cost 0.687089) #s(costed-arc plist nil from #1271# to #1102# cost 0.839037) #s(costed-arc plist nil from #1271# to #1122# cost 0.917415) #s(costed-arc plist nil from #1271# to #1119# cost 1.04374) #s(costed-arc plist nil from #1271# to #1316# cost 1.07793) #s(costed-arc plist nil from #1271# to #1098# cost 1.09099) #s(costed-arc plist nil from #1271# to #1317# cost 1.24447) #s(costed-arc plist nil from #1271# to #1318# cost 1.32039) #s(costed-arc plist nil from #1271# to #1319# cost 1.33825) #s(costed-arc plist nil from #1271# to #1320# cost 1.39811) #s(costed-arc plist nil from #1271# to #1145# cost 1.48075)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(242.234 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 5.37791 17.858 -155.564 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1273# #1269#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(236.393 30.7421 50.1847 129.269 -61.8898 -61.7104 -75.6201 180.0 5.73425 16.9732 -146.226 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.318296 -0.947991 0.0) (0.947991 0.318296 0.0) (0.0 0.0 1.0)) pos #f(65.8335 51.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1267# to #42# cost 0.73987) #s(costed-arc plist nil from #1267# to #979# cost 1.70095) #s(costed-arc plist nil from #1267# to #981# cost 1.54852) #s(costed-arc plist nil from #1267# to #1235# cost 1.60754) #s(costed-arc plist nil from #1267# to #1236# cost 1.63694) #s(costed-arc plist nil from #1267# to #1141# cost 1.49901) #s(costed-arc plist nil from #1267# to #1237# cost 1.11984) #s(costed-arc plist nil from #1267# to #1085# cost 1.32933) #s(costed-arc plist nil from #1267# to #1072# cost 1.53148) #s(costed-arc plist nil from #1267# to #1196# cost 1.51669) #s(costed-arc plist nil from #1267# to #1238# cost 1.73881) #s(costed-arc plist nil from #1267# to #1175# cost 1.66699) #s(costed-arc plist nil from #1267# to #1171# cost 1.47527) #s(costed-arc plist nil from #1267# to #1060# cost 1.15114) #s(costed-arc plist nil from #1267# to #1043# cost 1.52738) #s(costed-arc plist nil from #1267# to #1055# cost 1.50905) #s(costed-arc plist nil from #1267# to #1031# cost 1.51065) #s(costed-arc plist nil from #1267# to #1167# cost 1.62592) #s(costed-arc plist nil from #1267# to #1163# cost 1.51828) #s(costed-arc plist nil from #1267# to #1159# cost 1.44683) #s(costed-arc plist nil from #1267# to #1011# cost 1.81052) #s(costed-arc plist nil from #1267# to #1021# cost 1.52542) #s(costed-arc plist nil from #1267# to #993# cost 1.5143) #s(costed-arc plist nil from #1267# to #1005# cost 1.42161) #s(costed-arc plist nil from #1267# to #997# cost 1.38512) #s(costed-arc plist nil from #1267# to #1001# cost 1.35691)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(146.922 18.6097 63.9946 -7.88968 -73.9553 -107.127 -86.4008 170.803 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(143.789 1.49578 46.0939 23.6908 -45.664 -126.099 -100.478 170.694 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999264 0.038347 0.0) (-0.038347 0.999264 0.0) (0.0 0.0 1.0)) pos #f(-285.906 -88.4852 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.884568 -0.466411 0.0) (0.466411 0.884568 0.0) (0.0 0.0 1.0)) pos #f(-263.534 -81.4598 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1266# to #1260# cost 0)) arm :arms islands (#1262# #1269#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(176.104 -10.1291 67.0301 46.0458 -79.6833 -140.644 -45.6981 236.612 -24.5578 18.9025 -40.1558 -27.5763 -14.1541 -22.6125 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1370=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-16")) arc-list (#s(costed-arc plist nil from #1370# to #1371=#s(extended-node plist ((:name . #1372="l-0-3-16")) arc-list (#s(costed-arc plist nil from #1371# to #1370# cost 0) #s(costed-arc plist nil from #1371# to #42# cost 0.764997) #s(costed-arc plist nil from #1371# to #979# cost 1.60641) #s(costed-arc plist nil from #1371# to #981# cost 1.42322) #s(costed-arc plist nil from #1371# to #1235# cost 1.48799) #s(costed-arc plist nil from #1371# to #1236# cost 1.468) #s(costed-arc plist nil from #1371# to #1141# cost 1.3751) #s(costed-arc plist nil from #1371# to #1237# cost 1.11198) #s(costed-arc plist nil from #1371# to #1085# cost 1.17953) #s(costed-arc plist nil from #1371# to #1072# cost 1.40192) #s(costed-arc plist nil from #1371# to #1196# cost 1.3926) #s(costed-arc plist nil from #1371# to #1238# cost 1.60812) #s(costed-arc plist nil from #1371# to #1175# cost 1.53802) #s(costed-arc plist nil from #1371# to #1171# cost 1.34339) #s(costed-arc plist nil from #1371# to #1060# cost 1.128) #s(costed-arc plist nil from #1371# to #1043# cost 1.40024) #s(costed-arc plist nil from #1371# to #1055# cost 1.38104) #s(costed-arc plist nil from #1371# to #1031# cost 1.39109) #s(costed-arc plist nil from #1371# to #1167# cost 1.49853) #s(costed-arc plist nil from #1371# to #1163# cost 1.3837) #s(costed-arc plist nil from #1371# to #1159# cost 1.31318) #s(costed-arc plist nil from #1371# to #1011# cost 1.71699) #s(costed-arc plist nil from #1371# to #1021# cost 1.41632) #s(costed-arc plist nil from #1371# to #993# cost 1.409) #s(costed-arc plist nil from #1371# to #1005# cost 1.30437) #s(costed-arc plist nil from #1371# to #997# cost 1.26467) #s(costed-arc plist nil from #1371# to #1001# cost 1.23626)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(156.809 15.6749 54.1722 -10.0047 -76.4639 -88.5693 -81.9381 168.68 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(155.22 -0.093156 39.2915 23.238 -50.9398 -108.014 -98.7433 168.686 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997675 0.068152 0.0) (-0.068152 0.997675 0.0) (0.0 0.0 1.0)) pos #f(-155.097 -42.242 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.898095 -0.439801 0.0) (0.439801 0.898095 0.0) (0.0 0.0 1.0)) pos #f(-132.839 -37.6021 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1370# to #1260# cost 0)) arm :arms islands (#1262# #1372#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(175.795 -31.6257 33.2385 23.7117 -43.1498 -136.662 -51.1828 236.612 -24.3605 19.3152 -39.0011 -28.1472 -14.0475 -21.817 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1373=#s(extended-node plist ((:name . "r-0-3-21<->-l-0-3-17")) arc-list (#s(costed-arc plist nil from #1373# to #1374=#s(extended-node plist ((:name . #1375="l-0-3-17")) arc-list (#s(costed-arc plist nil from #1374# to #1373# cost 0) #s(costed-arc plist nil from #1374# to #42# cost 0.715643) #s(costed-arc plist nil from #1374# to #979# cost 1.6487) #s(costed-arc plist nil from #1374# to #981# cost 1.47828) #s(costed-arc plist nil from #1374# to #1235# cost 1.54678) #s(costed-arc plist nil from #1374# to #1236# cost 1.52402) #s(costed-arc plist nil from #1374# to #1141# cost 1.43865) #s(costed-arc plist nil from #1374# to #1237# cost 1.06865) #s(costed-arc plist nil from #1374# to #1085# cost 1.2716) #s(costed-arc plist nil from #1374# to #1072# cost 1.45857) #s(costed-arc plist nil from #1374# to #1196# cost 1.44544) #s(costed-arc plist nil from #1374# to #1238# cost 1.66946) #s(costed-arc plist nil from #1374# to #1175# cost 1.59663) #s(costed-arc plist nil from #1374# to #1171# cost 1.408) #s(costed-arc plist nil from #1374# to #1060# cost 1.09441) #s(costed-arc plist nil from #1374# to #1043# cost 1.4483) #s(costed-arc plist nil from #1374# to #1055# cost 1.43259) #s(costed-arc plist nil from #1374# to #1031# cost 1.43721) #s(costed-arc plist nil from #1374# to #1167# cost 1.54987) #s(costed-arc plist nil from #1374# to #1163# cost 1.44331) #s(costed-arc plist nil from #1374# to #1159# cost 1.37183) #s(costed-arc plist nil from #1374# to #1011# cost 1.73521) #s(costed-arc plist nil from #1374# to #1021# cost 1.449) #s(costed-arc plist nil from #1374# to #993# cost 1.44366) #s(costed-arc plist nil from #1374# to #1005# cost 1.34728) #s(costed-arc plist nil from #1374# to #997# cost 1.31108) #s(costed-arc plist nil from #1374# to #1001# cost 1.28707)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(149.514 17.1952 60.2727 -4.35567 -67.6506 -109.916 -79.3317 170.456 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(146.913 -0.409736 44.7204 26.0421 -43.3942 -127.685 -83.4921 170.578 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.997472 0.071065 0.0) (-0.071065 0.997472 0.0) (0.0 0.0 1.0)) pos #f(-178.918 -16.6477 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.899372 -0.437185 0.0) (0.437185 0.899372 0.0) (0.0 0.0 1.0)) pos #f(-158.333 -21.4385 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1373# to #1260# cost 0)) arm :arms islands (#1262# #1375#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.325 -32.3285 34.8131 24.358 -23.5987 -141.178 -32.6057 236.612 -24.3649 19.0252 -38.7728 -28.3901 -14.0142 -21.7524 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1260# to #1339# cost 0) #s(costed-arc plist nil from #1260# to #1313# cost 0) #s(costed-arc plist nil from #1260# to #1257# cost 1.55547) #s(costed-arc plist nil from #1260# to #1083# cost 0.497813) #s(costed-arc plist nil from #1260# to #1137# cost 0.515366) #s(costed-arc plist nil from #1260# to #1229# cost 0.492504) #s(costed-arc plist nil from #1260# to #1226# cost 0.500656) #s(costed-arc plist nil from #1260# to #1223# cost 0.44151) #s(costed-arc plist nil from #1260# to #983# cost 0.446493) #s(costed-arc plist nil from #1260# to #1220# cost 0.660992) #s(costed-arc plist nil from #1260# to #1217# cost 0.650581) #s(costed-arc plist nil from #1260# to #1214# cost 0.693013) #s(costed-arc plist nil from #1260# to #1203# cost 0.674915) #s(costed-arc plist nil from #1260# to #1211# cost 0.663422) #s(costed-arc plist nil from #1260# to #1208# cost 0.597368) #s(costed-arc plist nil from #1260# to #1065# cost 0.724133) #s(costed-arc plist nil from #1260# to #1037# cost 0.714429) #s(costed-arc plist nil from #1260# to #1049# cost 0.716859) #s(costed-arc plist nil from #1260# to #1199# cost 0.748178) #s(costed-arc plist nil from #1260# to #1019# cost 0.738826) #s(costed-arc plist nil from #1260# to #987# cost 0.726175) #s(costed-arc plist nil from #1260# to #1026# cost 0.814346) #s(costed-arc plist nil from #1260# to #999# cost 0.783239) #s(costed-arc plist nil from #1260# to #1003# cost 0.789023) #s(costed-arc plist nil from #1260# to #995# cost 0.803277) #s(costed-arc plist nil from #1260# to #991# cost 0.802154) #s(costed-arc plist nil from #1260# to #1258# cost 0.867531)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(217.778 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -23.5117 22.6591 -36.2889 -28.8605 -13.9459 -18.1186 180.704 0.0 0.0) robot-pose-optimized #f(217.624 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -58.4955 32.6496 -35.3087 -41.946 -10.1504 -37.0103 181.072 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.268217 -0.963358 0.0) (0.963358 0.268217 0.0) (0.0 0.0 1.0)) pos #f(-337.158 176.859 0.0)) object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1262# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(158.654 40.1608 61.7376 116.596 -97.5993 -105.395 -37.3886 236.612 -24.8147 17.5184 -41.0638 -27.4343 -14.1437 -23.4747 180.704 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.713962 -0.700184 0.0) (0.700184 0.713962 0.0) (0.0 0.0 1.0)) pos #f(-333.044 209.34 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1376=#s(extended-node plist ((:name . "r-0-3-22<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1376# to #1249# cost 0) #s(costed-arc plist nil from #1376# to #1377=#s(extended-node plist ((:name . #1379="r-0-3-22")) arc-list (#s(costed-arc plist nil from #1377# to #1378=#s(extended-node plist ((:name . "r-0-3-22<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1378# to #19# cost 0) #s(costed-arc plist nil from #1378# to #1377# cost 0)) arm :arms islands (#1379# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(170.159 18.6847 49.8904 110.624 -87.6961 -58.1152 -92.0768 180.0 -28.0317 23.1334 -54.3349 -24.9537 -43.5044 -23.49 175.575 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1377# to #1376# cost 0) #s(costed-arc plist nil from #1377# to #1257# cost 1.57739) #s(costed-arc plist nil from #1377# to #1083# cost 0.515353) #s(costed-arc plist nil from #1377# to #1137# cost 0.530288) #s(costed-arc plist nil from #1377# to #1229# cost 0.615562) #s(costed-arc plist nil from #1377# to #1226# cost 0.648161) #s(costed-arc plist nil from #1377# to #1223# cost 0.601512) #s(costed-arc plist nil from #1377# to #983# cost 0.585092) #s(costed-arc plist nil from #1377# to #1220# cost 0.696737) #s(costed-arc plist nil from #1377# to #1217# cost 0.711388) #s(costed-arc plist nil from #1377# to #1214# cost 0.74335) #s(costed-arc plist nil from #1377# to #1203# cost 0.787373) #s(costed-arc plist nil from #1377# to #1211# cost 0.793884) #s(costed-arc plist nil from #1377# to #1208# cost 0.740666) #s(costed-arc plist nil from #1377# to #1065# cost 0.76336) #s(costed-arc plist nil from #1377# to #1037# cost 0.779395) #s(costed-arc plist nil from #1377# to #1049# cost 0.799996) #s(costed-arc plist nil from #1377# to #1199# cost 0.820523) #s(costed-arc plist nil from #1377# to #1019# cost 0.856814) #s(costed-arc plist nil from #1377# to #987# cost 0.858428) #s(costed-arc plist nil from #1377# to #1026# cost 0.850092) #s(costed-arc plist nil from #1377# to #999# cost 0.843722) #s(costed-arc plist nil from #1377# to #1003# cost 0.872609) #s(costed-arc plist nil from #1377# to #995# cost 0.907401) #s(costed-arc plist nil from #1377# to #991# cost 0.911969) #s(costed-arc plist nil from #1377# to #1258# cost 1.00114)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(198.32 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.8142 25.1039 -54.1913 -23.2358 -35.1059 -19.7865 175.575 0.0 0.0) robot-pose-optimized #f(197.997 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -65.7473 32.9701 -51.888 -36.312 -35.6533 -42.5555 175.174 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.21619 -0.976351 0.0) (0.976351 0.21619 0.0) (0.0 0.0 1.0)) pos #f(-305.576 158.582 0.0)) object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1379# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(167.341 22.7888 59.1944 119.157 -70.987 -65.9024 -88.0465 180.0 -28.1251 23.063 -54.2476 -25.1938 -43.3934 -23.5785 175.575 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.675395 -0.737456 0.0) (0.737456 0.675395 0.0) (0.0 0.0 1.0)) pos #f(-305.18 184.549 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #1272# cost 0) #s(costed-arc plist nil from #1249# to #1364# cost 0) #s(costed-arc plist nil from #1249# to #1380=#s(extended-node plist ((:name . "r-2-3-22<->-l-0-3-5")) arc-list (#s(costed-arc plist nil from #1380# to #1249# cost 0) #s(costed-arc plist nil from #1380# to #17# cost 0)) arm :arms islands (#1335# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(214.458 85.1632 57.31 90.521 -65.8148 53.4939 -99.8017 180.0 0.802419 35.186 -142.556 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1249# to #42# cost 0.662889) #s(costed-arc plist nil from #1249# to #979# cost 1.90021) #s(costed-arc plist nil from #1249# to #981# cost 1.85377) #s(costed-arc plist nil from #1249# to #1235# cost 1.87821) #s(costed-arc plist nil from #1249# to #1236# cost 1.92795) #s(costed-arc plist nil from #1249# to #1141# cost 1.75792) #s(costed-arc plist nil from #1249# to #1237# cost 1.03885) #s(costed-arc plist nil from #1249# to #1085# cost 1.66897) #s(costed-arc plist nil from #1249# to #1072# cost 1.83697) #s(costed-arc plist nil from #1249# to #1196# cost 1.78886) #s(costed-arc plist nil from #1249# to #1238# cost 1.97111) #s(costed-arc plist nil from #1249# to #1175# cost 1.89119) #s(costed-arc plist nil from #1249# to #1171# cost 1.72037) #s(costed-arc plist nil from #1249# to #1060# cost 1.07093) #s(costed-arc plist nil from #1249# to #1043# cost 1.82131) #s(costed-arc plist nil from #1249# to #1055# cost 1.78278) #s(costed-arc plist nil from #1249# to #1031# cost 1.74847) #s(costed-arc plist nil from #1249# to #1167# cost 1.84396) #s(costed-arc plist nil from #1249# to #1163# cost 1.74501) #s(costed-arc plist nil from #1249# to #1159# cost 1.67489) #s(costed-arc plist nil from #1249# to #1011# cost 2.02835) #s(costed-arc plist nil from #1249# to #1021# cost 1.78635) #s(costed-arc plist nil from #1249# to #993# cost 1.75287) #s(costed-arc plist nil from #1249# to #1005# cost 1.65596) #s(costed-arc plist nil from #1249# to #997# cost 1.61144) #s(costed-arc plist nil from #1249# to #1001# cost 1.57765)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(100.34 22.5628 73.2681 -30.0439 -121.048 -164.568 -110.23 174.652 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(102.535 14.9607 74.2447 -37.2423 -121.542 -191.527 -114.592 150.987 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999965 -0.008338 0.0) (0.008338 0.999965 0.0) (0.0 0.0 1.0)) pos #f(-305.677 -103.486 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.984469 -0.175559 0.0) (0.175559 0.984469 0.0) (0.0 0.0 1.0)) pos #f(-275.929 -73.2366 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1248# to #1244# cost 0)) arm :arms islands (#1246# #1251#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(248.104 9.03401 50.9397 126.881 -76.1171 -110.574 -78.7896 51.9934 -26.1834 41.9358 -64.2774 -25.6017 -19.7495 -25.2362 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1244# to #1257# cost 1.35399) #s(costed-arc plist nil from #1244# to #1083# cost 0.328775) #s(costed-arc plist nil from #1244# to #1137# cost 0.337071) #s(costed-arc plist nil from #1244# to #1229# cost 0.396711) #s(costed-arc plist nil from #1244# to #1226# cost 0.450403) #s(costed-arc plist nil from #1244# to #1223# cost 0.443869) #s(costed-arc plist nil from #1244# to #983# cost 0.515934) #s(costed-arc plist nil from #1244# to #1220# cost 0.340802) #s(costed-arc plist nil from #1244# to #1217# cost 0.373511) #s(costed-arc plist nil from #1244# to #1214# cost 0.492706) #s(costed-arc plist nil from #1244# to #1203# cost 0.531229) #s(costed-arc plist nil from #1244# to #1211# cost 0.568791) #s(costed-arc plist nil from #1244# to #1208# cost 0.564058) #s(costed-arc plist nil from #1244# to #1065# cost 0.3944) #s(costed-arc plist nil from #1244# to #1037# cost 0.421567) #s(costed-arc plist nil from #1244# to #1049# cost 0.471363) #s(costed-arc plist nil from #1244# to #1199# cost 0.559698) #s(costed-arc plist nil from #1244# to #1019# cost 0.604407) #s(costed-arc plist nil from #1244# to #987# cost 0.643558) #s(costed-arc plist nil from #1244# to #1026# cost 0.517634) #s(costed-arc plist nil from #1244# to #999# cost 0.491283) #s(costed-arc plist nil from #1244# to #1003# cost 0.539954) #s(costed-arc plist nil from #1244# to #995# cost 0.601663) #s(costed-arc plist nil from #1244# to #991# cost 0.646296) #s(costed-arc plist nil from #1244# to #1258# cost 0.779965)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(195.629 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.4071 42.9213 -63.5646 -35.4188 -15.2744 -24.9225 188.127 0.0 0.0) robot-pose-optimized #f(195.745 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -60.0291 57.6069 -47.2391 -44.1907 -7.32691 -37.2445 188.167 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.394848 -0.918747 0.0) (0.918747 0.394848 0.0) (0.0 0.0 1.0)) pos #f(-410.588 250.029 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1246# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(251.322 8.09076 34.5469 111.457 -103.371 -88.5102 -88.2515 51.9934 -25.91 41.8852 -64.4149 -25.0877 -19.8382 -24.9489 188.127 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.8013 -0.598262 0.0) (0.598262 0.8013 0.0) (0.0 0.0 1.0)) pos #f(-404.497 292.016 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1240# to #1324# cost 0) #s(costed-arc plist nil from #1240# to #42# cost 0.76497) #s(costed-arc plist nil from #1240# to #979# cost 1.68471) #s(costed-arc plist nil from #1240# to #981# cost 1.56163) #s(costed-arc plist nil from #1240# to #1235# cost 1.59789) #s(costed-arc plist nil from #1240# to #1236# cost 1.59887) #s(costed-arc plist nil from #1240# to #1141# cost 1.47501) #s(costed-arc plist nil from #1240# to #1237# cost 1.19414) #s(costed-arc plist nil from #1240# to #1085# cost 1.3169) #s(costed-arc plist nil from #1240# to #1072# cost 1.5386) #s(costed-arc plist nil from #1240# to #1196# cost 1.50578) #s(costed-arc plist nil from #1240# to #1238# cost 1.69204) #s(costed-arc plist nil from #1240# to #1175# cost 1.6189) #s(costed-arc plist nil from #1240# to #1171# cost 1.43612) #s(costed-arc plist nil from #1240# to #1060# cost 1.20569) #s(costed-arc plist nil from #1240# to #1043# cost 1.53084) #s(costed-arc plist nil from #1240# to #1055# cost 1.49132) #s(costed-arc plist nil from #1240# to #1031# cost 1.4737) #s(costed-arc plist nil from #1240# to #1167# cost 1.58253) #s(costed-arc plist nil from #1240# to #1163# cost 1.4584) #s(costed-arc plist nil from #1240# to #1159# cost 1.40386) #s(costed-arc plist nil from #1240# to #1011# cost 1.79434) #s(costed-arc plist nil from #1240# to #1021# cost 1.50452) #s(costed-arc plist nil from #1240# to #993# cost 1.47141) #s(costed-arc plist nil from #1240# to #1005# cost 1.37071) #s(costed-arc plist nil from #1240# to #997# cost 1.32535) #s(costed-arc plist nil from #1240# to #1001# cost 1.28338)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(156.597 14.4271 51.7239 -19.8189 -121.529 -84.6869 -86.4352 170.453 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(154.65 8.30024 54.4141 17.0645 -121.542 -112.279 -94.3628 170.559 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999436 0.033574 0.0) (-0.033574 0.999436 0.0) (0.0 0.0 1.0)) pos #f(-296.521 -92.0154 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.882324 -0.470642 0.0) (0.470642 0.882324 0.0) (0.0 0.0 1.0)) pos #f(-275.271 -82.5676 0.0)) object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1239# to #32# cost 0)) arm :arms islands (#34# #1242#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(116.135 -12.7973 59.132 10.7446 -118.706 178.741 -37.4377 339.803 -35.6744 49.8787 -83.419 -70.8095 -21.3136 -40.499 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #32# to #1381=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-4")) arc-list (#s(costed-arc plist nil from #1381# to #19# cost 0) #s(costed-arc plist nil from #1381# to #32# cost 0)) arm :arms islands (#34# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(115.39 -12.6253 73.5636 10.641 -114.371 178.607 -38.6041 339.803 -35.7052 50.0166 -83.2797 -70.9409 -21.2716 -40.3758 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #32# to #1382=#s(extended-node plist ((:name . "r-0-3-5<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1382# to #1383=#s(extended-node plist ((:name . #1385="l-0-3-6")) arc-list (#s(costed-arc plist nil from #1383# to #1384=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1384# to #1383# cost 0) #s(costed-arc plist nil from #1384# to #21# cost 0)) arm :arms islands (#29# #1385#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(179.0 -23.3078 -17.3842 17.5608 -22.1123 -116.328 -17.3826 199.917 -34.3928 40.0025 -64.6595 -86.9226 -12.4914 -38.4245 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1383# to #1386=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-6")) arc-list (#s(costed-arc plist nil from #1386# to #1383# cost 0) #s(costed-arc plist nil from #1386# to #25# cost 0)) arm :arms islands (#41# #1385#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(194.31 -22.451 -17.3156 16.53 -18.9175 -99.6986 -14.8911 194.347 -36.7367 46.9027 -76.4501 -74.998 -15.8956 -38.7788 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1383# to #1382# cost 0) #s(costed-arc plist nil from #1383# to #42# cost 0.872379) #s(costed-arc plist nil from #1383# to #979# cost 1.59486) #s(costed-arc plist nil from #1383# to #981# cost 1.28465) #s(costed-arc plist nil from #1383# to #1235# cost 1.29431) #s(costed-arc plist nil from #1383# to #1236# cost 1.24167) #s(costed-arc plist nil from #1383# to #1141# cost 1.15378) #s(costed-arc plist nil from #1383# to #1237# cost 1.1681) #s(costed-arc plist nil from #1383# to #1085# cost 0.96319) #s(costed-arc plist nil from #1383# to #1072# cost 1.2475) #s(costed-arc plist nil from #1383# to #1196# cost 1.22841) #s(costed-arc plist nil from #1383# to #1238# cost 1.36116) #s(costed-arc plist nil from #1383# to #1175# cost 1.28198) #s(costed-arc plist nil from #1383# to #1171# cost 1.09324) #s(costed-arc plist nil from #1383# to #1060# cost 1.14422) #s(costed-arc plist nil from #1383# to #1043# cost 1.2276) #s(costed-arc plist nil from #1383# to #1055# cost 1.18578) #s(costed-arc plist nil from #1383# to #1031# cost 1.18644) #s(costed-arc plist nil from #1383# to #1167# cost 1.24093) #s(costed-arc plist nil from #1383# to #1163# cost 1.10181) #s(costed-arc plist nil from #1383# to #1159# cost 1.03897) #s(costed-arc plist nil from #1383# to #1011# cost 1.49682) #s(costed-arc plist nil from #1383# to #1021# cost 1.18887) #s(costed-arc plist nil from #1383# to #993# cost 1.16052) #s(costed-arc plist nil from #1383# to #1005# cost 1.03707) #s(costed-arc plist nil from #1383# to #997# cost 0.972711) #s(costed-arc plist nil from #1383# to #1001# cost 0.918589)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(199.86 19.3136 7.50079 -9.52974 -106.702 -69.1929 -21.6877 177.245 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(201.42 4.08224 8.77924 0.781942 -94.369 -63.4242 -36.6693 170.527 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998504 0.054674 0.0) (-0.054674 0.998504 0.0) (0.0 0.0 1.0)) pos #f(-123.934 38.6318 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.933881 -0.357585 0.0) (0.357585 0.933881 0.0) (0.0 0.0 1.0)) pos #f(-110.48 27.0927 0.0)) object-coords-index 6 object-coords #410# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1382# to #32# cost 0)) arm :arms islands (#34# #1385#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(128.525 -20.9464 -20.2598 -0.204155 -29.7276 179.988 -18.9131 339.803 -35.7581 51.15 -83.3381 -70.1123 -21.3646 -39.3869 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #32# to #1288# cost 0) #s(costed-arc plist nil from #32# to #1297# cost 0) #s(costed-arc plist nil from #32# to #1338# cost 0) #s(costed-arc plist nil from #32# to #1257# cost 1.34851) #s(costed-arc plist nil from #32# to #1083# cost 0.521563) #s(costed-arc plist nil from #32# to #1137# cost 0.490092) #s(costed-arc plist nil from #32# to #1229# cost 0.556773) #s(costed-arc plist nil from #32# to #1226# cost 0.613196) #s(costed-arc plist nil from #32# to #1223# cost 0.634018) #s(costed-arc plist nil from #32# to #983# cost 0.737235) #s(costed-arc plist nil from #32# to #1220# cost 0.473646) #s(costed-arc plist nil from #32# to #1217# cost 0.452218) #s(costed-arc plist nil from #32# to #1214# cost 0.504215) #s(costed-arc plist nil from #32# to #1203# cost 0.581686) #s(costed-arc plist nil from #32# to #1211# cost 0.655183) #s(costed-arc plist nil from #32# to #1208# cost 0.706594) #s(costed-arc plist nil from #32# to #1065# cost 0.411253) #s(costed-arc plist nil from #32# to #1037# cost 0.394746) #s(costed-arc plist nil from #32# to #1049# cost 0.441743) #s(costed-arc plist nil from #32# to #1199# cost 0.538011) #s(costed-arc plist nil from #32# to #1019# cost 0.62893) #s(costed-arc plist nil from #32# to #987# cost 0.71768) #s(costed-arc plist nil from #32# to #1026# cost 0.425271) #s(costed-arc plist nil from #32# to #999# cost 0.376288) #s(costed-arc plist nil from #32# to #1003# cost 0.438151) #s(costed-arc plist nil from #32# to #995# cost 0.534164) #s(costed-arc plist nil from #32# to #991# cost 0.629847) #s(costed-arc plist nil from #32# to #1258# cost 0.815685)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(188.916 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.0724 60.0149 -80.0174 -68.2681 -21.0347 -29.4677 179.691 0.0 0.0) robot-pose-optimized #f(189.306 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -70.7325 74.2708 -76.7682 -69.3672 -21.8949 -47.8511 179.69 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.477966 -0.878378 0.0) (0.878378 0.477966 0.0) (0.0 0.0 1.0)) pos #f(-503.977 163.855 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#34# #30#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(120.55 -13.8598 18.3381 8.96929 -102.097 179.51 -34.069 339.803 -35.5972 49.7184 -83.8061 -70.3033 -21.4444 -40.6495 179.691 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853116 -0.521722 0.0) (0.521722 0.853116 0.0) (0.0 0.0 1.0)) pos #f(-505.724 183.448 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #27# to #42# cost 0.767966) #s(costed-arc plist nil from #27# to #979# cost 1.61614) #s(costed-arc plist nil from #27# to #981# cost 1.34627) #s(costed-arc plist nil from #27# to #1235# cost 1.3582) #s(costed-arc plist nil from #27# to #1236# cost 1.3422) #s(costed-arc plist nil from #27# to #1141# cost 1.21872) #s(costed-arc plist nil from #27# to #1237# cost 1.20197) #s(costed-arc plist nil from #27# to #1085# cost 1.03018) #s(costed-arc plist nil from #27# to #1072# cost 1.31063) #s(costed-arc plist nil from #27# to #1196# cost 1.28726) #s(costed-arc plist nil from #27# to #1238# cost 1.43065) #s(costed-arc plist nil from #27# to #1175# cost 1.35419) #s(costed-arc plist nil from #27# to #1171# cost 1.16502) #s(costed-arc plist nil from #27# to #1060# cost 1.18745) #s(costed-arc plist nil from #27# to #1043# cost 1.29877) #s(costed-arc plist nil from #27# to #1055# cost 1.25309) #s(costed-arc plist nil from #27# to #1031# cost 1.24956) #s(costed-arc plist nil from #27# to #1167# cost 1.32198) #s(costed-arc plist nil from #27# to #1163# cost 1.17978) #s(costed-arc plist nil from #27# to #1159# cost 1.1247) #s(costed-arc plist nil from #27# to #1011# cost 1.57808) #s(costed-arc plist nil from #27# to #1021# cost 1.2655) #s(costed-arc plist nil from #27# to #993# cost 1.22851) #s(costed-arc plist nil from #27# to #1005# cost 1.11315) #s(costed-arc plist nil from #27# to #997# cost 1.05314) #s(costed-arc plist nil from #27# to #1001# cost 0.99712)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(178.313 19.7871 18.1261 -14.7151 -121.535 -61.2188 -42.8981 177.383 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(187.384 -16.6177 -20.2598 -34.6156 -121.542 -116.396 -92.5733 177.396 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.99951 0.031302 0.0) (-0.031302 0.99951 0.0) (0.0 0.0 1.0)) pos #f(-206.124 -32.0892 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.914108 -0.40547 0.0) (0.40547 0.914108 0.0) (0.0 0.0 1.0)) pos #f(-176.962 -59.3167 0.0)) object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #26# to #25# cost 0)) arm :arms islands (#41# #30#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(176.822 -19.2782 16.5389 27.8053 -77.1603 -87.5533 -63.4902 194.347 -36.4528 44.9542 -76.2952 -75.4091 -15.7669 -40.4903 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #25# to #40# cost 0) #s(costed-arc plist nil from #25# to #1241# cost 0) #s(costed-arc plist nil from #25# to #1252# cost 0) #s(costed-arc plist nil from #25# to #1386# cost 0) #s(costed-arc plist nil from #25# to #1387=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-7")) arc-list (#s(costed-arc plist nil from #1387# to #1388=#s(extended-node plist ((:name . #1390="l-0-3-7")) arc-list (#s(costed-arc plist nil from #1388# to #1389=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-7")) arc-list (#s(costed-arc plist nil from #1389# to #1388# cost 0) #s(costed-arc plist nil from #1389# to #21# cost 0)) arm :arms islands (#29# #1390#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(137.314 -28.427 -4.99913 12.62 -33.9621 -108.784 -45.656 199.917 -32.8525 37.5577 -61.3246 -88.2622 -11.6806 -37.4995 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1388# to #1387# cost 0) #s(costed-arc plist nil from #1388# to #42# cost 0.835252) #s(costed-arc plist nil from #1388# to #979# cost 1.60513) #s(costed-arc plist nil from #1388# to #981# cost 1.28654) #s(costed-arc plist nil from #1388# to #1235# cost 1.33586) #s(costed-arc plist nil from #1388# to #1236# cost 1.26609) #s(costed-arc plist nil from #1388# to #1141# cost 1.19297) #s(costed-arc plist nil from #1388# to #1237# cost 1.16598) #s(costed-arc plist nil from #1388# to #1085# cost 1.02278) #s(costed-arc plist nil from #1388# to #1072# cost 1.25723) #s(costed-arc plist nil from #1388# to #1196# cost 1.22267) #s(costed-arc plist nil from #1388# to #1238# cost 1.39346) #s(costed-arc plist nil from #1388# to #1175# cost 1.31154) #s(costed-arc plist nil from #1388# to #1171# cost 1.13118) #s(costed-arc plist nil from #1388# to #1060# cost 1.15059) #s(costed-arc plist nil from #1388# to #1043# cost 1.2386) #s(costed-arc plist nil from #1388# to #1055# cost 1.19244) #s(costed-arc plist nil from #1388# to #1031# cost 1.17791) #s(costed-arc plist nil from #1388# to #1167# cost 1.27307) #s(costed-arc plist nil from #1388# to #1163# cost 1.13052) #s(costed-arc plist nil from #1388# to #1159# cost 1.0825) #s(costed-arc plist nil from #1388# to #1011# cost 1.51974) #s(costed-arc plist nil from #1388# to #1021# cost 1.21331) #s(costed-arc plist nil from #1388# to #993# cost 1.17968) #s(costed-arc plist nil from #1388# to #1005# cost 1.05741) #s(costed-arc plist nil from #1388# to #997# cost 1.00175) #s(costed-arc plist nil from #1388# to #1001# cost 0.955434)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(186.336 17.7637 28.8572 -11.6551 -121.53 -67.2326 -31.2769 177.666 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998158 0.060674 0.0) (-0.060674 0.998158 0.0) (0.0 0.0 1.0)) pos #f(-113.996 29.0307 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1387# to #25# cost 0)) arm :arms islands (#41# #1390#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(159.586 -28.6634 -3.14613 7.49958 -30.223 -90.9589 -43.6237 194.347 -36.2426 45.9447 -74.1327 -77.4639 -15.2211 -38.8179 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #25# to #1391=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-8")) arc-list (#s(costed-arc plist nil from #1391# to #1392=#s(extended-node plist ((:name . #1394="l-0-3-8")) arc-list (#s(costed-arc plist nil from #1392# to #1393=#s(extended-node plist ((:name . "r-0-3-3<->-l-0-3-8")) arc-list (#s(costed-arc plist nil from #1393# to #1392# cost 0) #s(costed-arc plist nil from #1393# to #21# cost 0)) arm :arms islands (#29# #1394#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(134.431 -31.7594 5.40691 8.84542 -35.8245 -106.573 -65.3504 199.917 -32.754 37.4422 -61.0771 -88.438 -11.6375 -37.2254 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1392# to #1391# cost 0) #s(costed-arc plist nil from #1392# to #42# cost 0.772463) #s(costed-arc plist nil from #1392# to #979# cost 1.61107) #s(costed-arc plist nil from #1392# to #981# cost 1.33016) #s(costed-arc plist nil from #1392# to #1235# cost 1.39746) #s(costed-arc plist nil from #1392# to #1236# cost 1.3386) #s(costed-arc plist nil from #1392# to #1141# cost 1.26379) #s(costed-arc plist nil from #1392# to #1237# cost 1.15893) #s(costed-arc plist nil from #1392# to #1085# cost 1.09415) #s(costed-arc plist nil from #1392# to #1072# cost 1.30494) #s(costed-arc plist nil from #1392# to #1196# cost 1.27162) #s(costed-arc plist nil from #1392# to #1238# cost 1.47035) #s(costed-arc plist nil from #1392# to #1175# cost 1.3926) #s(costed-arc plist nil from #1392# to #1171# cost 1.21249) #s(costed-arc plist nil from #1392# to #1060# cost 1.15697) #s(costed-arc plist nil from #1392# to #1043# cost 1.29348) #s(costed-arc plist nil from #1392# to #1055# cost 1.25236) #s(costed-arc plist nil from #1392# to #1031# cost 1.23945) #s(costed-arc plist nil from #1392# to #1167# cost 1.35827) #s(costed-arc plist nil from #1392# to #1163# cost 1.22198) #s(costed-arc plist nil from #1392# to #1159# cost 1.17638) #s(costed-arc plist nil from #1392# to #1011# cost 1.59244) #s(costed-arc plist nil from #1392# to #1021# cost 1.28358) #s(costed-arc plist nil from #1392# to #993# cost 1.25557) #s(costed-arc plist nil from #1392# to #1005# cost 1.14304) #s(costed-arc plist nil from #1392# to #997# cost 1.09806) #s(costed-arc plist nil from #1392# to #1001# cost 1.06114)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(168.781 16.3197 45.7252 -11.8731 -121.522 -68.1683 -56.718 177.448 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998011 0.063035 0.0) (-0.063035 0.998011 0.0) (0.0 0.0 1.0)) pos #f(-133.999 -7.84047 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1391# to #25# cost 0)) arm :arms islands (#41# #1394#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(156.876 -31.8769 7.98029 3.06137 -32.1251 -89.304 -60.3767 194.347 -36.2099 45.9198 -73.9266 -77.7149 -15.1657 -38.6762 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #25# to #1395=#s(extended-node plist ((:name . "r-0-3-4<->-l-0-3-9")) arc-list (#s(costed-arc plist nil from #1395# to #1396=#s(extended-node plist ((:name . #1397="l-0-3-9")) arc-list (#s(costed-arc plist nil from #1396# to #1395# cost 0) #s(costed-arc plist nil from #1396# to #42# cost 0.764465) #s(costed-arc plist nil from #1396# to #979# cost 1.61714) #s(costed-arc plist nil from #1396# to #981# cost 1.46059) #s(costed-arc plist nil from #1396# to #1235# cost 1.50586) #s(costed-arc plist nil from #1396# to #1236# cost 1.49877) #s(costed-arc plist nil from #1396# to #1141# cost 1.38577) #s(costed-arc plist nil from #1396# to #1237# cost 1.16816) #s(costed-arc plist nil from #1396# to #1085# cost 1.19184) #s(costed-arc plist nil from #1396# to #1072# cost 1.43743) #s(costed-arc plist nil from #1396# to #1196# cost 1.41959) #s(costed-arc plist nil from #1396# to #1238# cost 1.61336) #s(costed-arc plist nil from #1396# to #1175# cost 1.54334) #s(costed-arc plist nil from #1396# to #1171# cost 1.35045) #s(costed-arc plist nil from #1396# to #1060# cost 1.17765) #s(costed-arc plist nil from #1396# to #1043# cost 1.43683) #s(costed-arc plist nil from #1396# to #1055# cost 1.40616) #s(costed-arc plist nil from #1396# to #1031# cost 1.40612) #s(costed-arc plist nil from #1396# to #1167# cost 1.50912) #s(costed-arc plist nil from #1396# to #1163# cost 1.38519) #s(costed-arc plist nil from #1396# to #1159# cost 1.3218) #s(costed-arc plist nil from #1396# to #1011# cost 1.73987) #s(costed-arc plist nil from #1396# to #1021# cost 1.43384) #s(costed-arc plist nil from #1396# to #993# cost 1.41352) #s(costed-arc plist nil from #1396# to #1005# cost 1.30774) #s(costed-arc plist nil from #1396# to #997# cost 1.26325) #s(costed-arc plist nil from #1396# to #1001# cost 1.22524)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(159.649 14.7473 47.9329 -17.3868 -100.42 -76.2905 -84.3383 168.654 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(157.169 9.94645 49.591 16.0637 -117.621 -138.956 -89.783 168.605 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998762 0.049743 0.0) (-0.049743 0.998762 0.0) (0.0 0.0 1.0)) pos #f(-209.995 -78.4239 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.889834 -0.456285 0.0) (0.456285 0.889834 0.0) (0.0 0.0 1.0)) pos #f(-179.123 -61.6586 0.0)) object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1395# to #25# cost 0)) arm :arms islands (#41# #1397#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(155.913 -32.347 18.6012 3.52276 -29.6552 -90.1386 -65.9912 194.347 -36.2023 45.9925 -73.8038 -77.8623 -15.1359 -38.51 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #25# to #1296# cost 0) #s(costed-arc plist nil from #25# to #1257# cost 1.31599) #s(costed-arc plist nil from #25# to #1083# cost 0.570082) #s(costed-arc plist nil from #25# to #1137# cost 0.527153) #s(costed-arc plist nil from #25# to #1229# cost 0.562687) #s(costed-arc plist nil from #25# to #1226# cost 0.60713) #s(costed-arc plist nil from #25# to #1223# cost 0.622783) #s(costed-arc plist nil from #25# to #983# cost 0.736188) #s(costed-arc plist nil from #25# to #1220# cost 0.501608) #s(costed-arc plist nil from #25# to #1217# cost 0.452484) #s(costed-arc plist nil from #25# to #1214# cost 0.512938) #s(costed-arc plist nil from #25# to #1203# cost 0.562155) #s(costed-arc plist nil from #25# to #1211# cost 0.62871) #s(costed-arc plist nil from #25# to #1208# cost 0.680021) #s(costed-arc plist nil from #25# to #1065# cost 0.43222) #s(costed-arc plist nil from #25# to #1037# cost 0.37675) #s(costed-arc plist nil from #25# to #1049# cost 0.404463) #s(costed-arc plist nil from #25# to #1199# cost 0.520886) #s(costed-arc plist nil from #25# to #1019# cost 0.594896) #s(costed-arc plist nil from #25# to #987# cost 0.682135) #s(costed-arc plist nil from #25# to #1026# cost 0.458675) #s(costed-arc plist nil from #25# to #999# cost 0.349344) #s(costed-arc plist nil from #25# to #1003# cost 0.389332) #s(costed-arc plist nil from #25# to #995# cost 0.484143) #s(costed-arc plist nil from #25# to #991# cost 0.589211) #s(costed-arc plist nil from #25# to #1258# cost 0.777458)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(205.16 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -36.8646 51.3533 -74.0859 -76.4695 -15.5366 -34.2404 188.044 0.0 0.0) robot-pose-optimized #f(203.089 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.6858 61.619 -77.0453 -84.1024 -20.0226 -47.0267 188.168 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.477834 -0.87845 0.0) (0.87845 0.477834 0.0) (0.0 0.0 1.0)) pos #f(-547.162 185.343 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#41# #35#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(179.841 -18.5602 -1.65387 26.196 -64.3366 -92.4547 -49.8684 194.347 -36.4754 44.9921 -76.513 -75.1437 -15.8311 -40.5878 188.044 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.853041 -0.521843 0.0) (0.521843 0.853041 0.0) (0.0 0.0 1.0)) pos #f(-558.606 197.847 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #23# to #33# cost 0) #s(costed-arc plist nil from #23# to #42# cost 0.918363) #s(costed-arc plist nil from #23# to #979# cost 1.62955) #s(costed-arc plist nil from #23# to #981# cost 1.33664) #s(costed-arc plist nil from #23# to #1235# cost 1.3223) #s(costed-arc plist nil from #23# to #1236# cost 1.25994) #s(costed-arc plist nil from #23# to #1141# cost 1.17757) #s(costed-arc plist nil from #23# to #1237# cost 1.22286) #s(costed-arc plist nil from #23# to #1085# cost 1.01087) #s(costed-arc plist nil from #23# to #1072# cost 1.2952) #s(costed-arc plist nil from #23# to #1196# cost 1.26938) #s(costed-arc plist nil from #23# to #1238# cost 1.36881) #s(costed-arc plist nil from #23# to #1175# cost 1.28971) #s(costed-arc plist nil from #23# to #1171# cost 1.10851) #s(costed-arc plist nil from #23# to #1060# cost 1.189) #s(costed-arc plist nil from #23# to #1043# cost 1.27135) #s(costed-arc plist nil from #23# to #1055# cost 1.22056) #s(costed-arc plist nil from #23# to #1031# cost 1.21044) #s(costed-arc plist nil from #23# to #1167# cost 1.24888) #s(costed-arc plist nil from #23# to #1163# cost 1.10371) #s(costed-arc plist nil from #23# to #1159# cost 1.04389) #s(costed-arc plist nil from #23# to #1011# cost 1.50663) #s(costed-arc plist nil from #23# to #1021# cost 1.20463) #s(costed-arc plist nil from #23# to #993# cost 1.16401) #s(costed-arc plist nil from #23# to #1005# cost 1.04261) #s(costed-arc plist nil from #23# to #997# cost 0.969636) #s(costed-arc plist nil from #23# to #1001# cost 0.905379)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(201.186 19.7766 -3.87517 -15.6171 -121.193 -67.6514 -8.29494 178.507 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998916 0.046545 0.0) (-0.046545 0.998916 0.0) (0.0 0.0 1.0)) pos #f(-134.806 54.6449 0.0)) base-coords-optimized nil object-coords-index 0 object-coords #224# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #22# to #21# cost 0)) arm :arms islands (#29# #35#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(169.479 -19.1142 -3.19763 27.1721 -68.3971 -106.968 -51.4002 199.917 -34.1235 38.3107 -64.5549 -86.2785 -12.2937 -40.1404 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #21# to #28# cost 0) #s(costed-arc plist nil from #21# to #38# cost 0) #s(costed-arc plist nil from #21# to #20# cost 0) #s(costed-arc plist nil from #21# to #1250# cost 0) #s(costed-arc plist nil from #21# to #1384# cost 0) #s(costed-arc plist nil from #21# to #1389# cost 0) #s(costed-arc plist nil from #21# to #1393# cost 0) #s(costed-arc plist nil from #21# to #1268# cost 0) #s(costed-arc plist nil from #21# to #1294# cost 0) #s(costed-arc plist nil from #21# to #1337# cost 0) #s(costed-arc plist nil from #21# to #1257# cost 1.2979) #s(costed-arc plist nil from #21# to #1083# cost 0.617417) #s(costed-arc plist nil from #21# to #1137# cost 0.554609) #s(costed-arc plist nil from #21# to #1229# cost 0.557144) #s(costed-arc plist nil from #21# to #1226# cost 0.591284) #s(costed-arc plist nil from #21# to #1223# cost 0.612315) #s(costed-arc plist nil from #21# to #983# cost 0.718578) #s(costed-arc plist nil from #21# to #1220# cost 0.558279) #s(costed-arc plist nil from #21# to #1217# cost 0.487167) #s(costed-arc plist nil from #21# to #1214# cost 0.50246) #s(costed-arc plist nil from #21# to #1203# cost 0.515112) #s(costed-arc plist nil from #21# to #1211# cost 0.581192) #s(costed-arc plist nil from #21# to #1208# cost 0.648998) #s(costed-arc plist nil from #21# to #1065# cost 0.493984) #s(costed-arc plist nil from #21# to #1037# cost 0.407193) #s(costed-arc plist nil from #21# to #1049# cost 0.380716) #s(costed-arc plist nil from #21# to #1199# cost 0.474881) #s(costed-arc plist nil from #21# to #1019# cost 0.529577) #s(costed-arc plist nil from #21# to #987# cost 0.624881) #s(costed-arc plist nil from #21# to #1026# cost 0.48721) #s(costed-arc plist nil from #21# to #999# cost 0.370997) #s(costed-arc plist nil from #21# to #1003# cost 0.350165) #s(costed-arc plist nil from #21# to #995# cost 0.417156) #s(costed-arc plist nil from #21# to #991# cost 0.517764) #s(costed-arc plist nil from #21# to #1258# cost 0.699686)) arm :rarm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(208.576 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -34.5115 47.2368 -63.1843 -89.5596 -12.7721 -31.4629 188.168 0.0 0.0) robot-pose-optimized #f(200.838 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -72.9273 48.2164 -73.6656 -104.83 -23.8585 -31.0598 188.188 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.472703 -0.881222 0.0) (0.881222 0.472703 0.0) (0.0 0.0 1.0)) pos #f(-534.721 203.983 0.0)) object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#29# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(160.477 -21.5246 59.8893 30.352 -84.5569 -103.04 -78.4701 199.917 -33.8565 38.0166 -63.7857 -86.9093 -12.1524 -39.2817 188.168 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.849983 -0.52681 0.0) (0.52681 0.849983 0.0) (0.0 0.0 1.0)) pos #f(-551.664 211.085 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #19# to #1381# cost 0) #s(costed-arc plist nil from #19# to #1245# cost 0) #s(costed-arc plist nil from #19# to #1255# cost 0) #s(costed-arc plist nil from #19# to #1261# cost 0) #s(costed-arc plist nil from #19# to #1378# cost 0) #s(costed-arc plist nil from #19# to #1326# cost 0) #s(costed-arc plist nil from #19# to #18# cost 0) #s(costed-arc plist nil from #19# to #42# cost 0.787474) #s(costed-arc plist nil from #19# to #979# cost 1.72527) #s(costed-arc plist nil from #19# to #981# cost 1.59979) #s(costed-arc plist nil from #19# to #1235# cost 1.64931) #s(costed-arc plist nil from #19# to #1236# cost 1.69071) #s(costed-arc plist nil from #19# to #1141# cost 1.53187) #s(costed-arc plist nil from #19# to #1237# cost 1.19513) #s(costed-arc plist nil from #19# to #1085# cost 1.36437) #s(costed-arc plist nil from #19# to #1072# cost 1.58289) #s(costed-arc plist nil from #19# to #1196# cost 1.55729) #s(costed-arc plist nil from #19# to #1238# cost 1.765) #s(costed-arc plist nil from #19# to #1175# cost 1.69295) #s(costed-arc plist nil from #19# to #1171# cost 1.50398) #s(costed-arc plist nil from #19# to #1060# cost 1.21911) #s(costed-arc plist nil from #19# to #1043# cost 1.58063) #s(costed-arc plist nil from #19# to #1055# cost 1.55052) #s(costed-arc plist nil from #19# to #1031# cost 1.54029) #s(costed-arc plist nil from #19# to #1167# cost 1.6582) #s(costed-arc plist nil from #19# to #1163# cost 1.54029) #s(costed-arc plist nil from #19# to #1159# cost 1.47712) #s(costed-arc plist nil from #19# to #1011# cost 1.85823) #s(costed-arc plist nil from #19# to #1021# cost 1.56784) #s(costed-arc plist nil from #19# to #993# cost 1.54439) #s(costed-arc plist nil from #19# to #1005# cost 1.44823) #s(costed-arc plist nil from #19# to #997# cost 1.40803) #s(costed-arc plist nil from #19# to #1001# cost 1.37183)) arm :larm islands nil contact-point-index 0 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(149.883 17.7482 62.6753 -17.5893 -100.974 -92.9172 -94.1439 170.906 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(148.921 13.028 74.2725 14.6186 -112.323 -126.071 -61.3311 171.133 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999833 0.018298 0.0) (-0.018298 0.999833 0.0) (0.0 0.0 1.0)) pos #f(-347.764 -139.366 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.875036 -0.484058 0.0) (0.484058 0.875036 0.0) (0.0 0.0 1.0)) pos #f(-321.084 -122.953 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #18# to #17# cost 0)) arm :arms islands (#1335# #1247#) contact-point-index nil contact-point nil contact-type nil graph-depth 3 door-angle -80 solved nil robot-pose #f(218.068 83.2622 54.2367 80.6559 -85.2395 39.9132 -104.504 180.0 0.816402 35.5304 -142.342 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #17# to #1380# cost 0) #s(costed-arc plist nil from #17# to #1343# cost 0) #s(costed-arc plist nil from #17# to #1334# cost 0) #s(costed-arc plist nil from #17# to #1156# cost 0.617331) #s(costed-arc plist nil from #17# to #1130# cost 0.732308) #s(costed-arc plist nil from #17# to #1149# cost 0.772276) #s(costed-arc plist nil from #17# to #1109# cost 0.543306) #s(costed-arc plist nil from #17# to #1232# cost 0.753636) #s(costed-arc plist nil from #17# to #1087# cost 0.879853) #s(costed-arc plist nil from #17# to #1105# cost 0.97987) #s(costed-arc plist nil from #17# to #1125# cost 0.996495) #s(costed-arc plist nil from #17# to #1102# cost 0.982004) #s(costed-arc plist nil from #17# to #1122# cost 1.12491) #s(costed-arc plist nil from #17# to #1119# cost 1.32585) #s(costed-arc plist nil from #17# to #1316# cost 1.38992) #s(costed-arc plist nil from #17# to #1098# cost 1.42076) #s(costed-arc plist nil from #17# to #1317# cost 1.39125) #s(costed-arc plist nil from #17# to #1318# cost 1.54129) #s(costed-arc plist nil from #17# to #1319# cost 1.62693) #s(costed-arc plist nil from #17# to #1320# cost 1.72269) #s(costed-arc plist nil from #17# to #1145# cost 1.8155)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(219.022 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 0.442646 35.8718 -151.365 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(224.135 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -9.23179 36.5341 -149.424 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.139695 -0.990195 0.0) (0.990195 0.139695 0.0) (0.0 0.0 1.0)) pos #f(306.156 106.685 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.054132 -0.998534 0.0) (0.998534 -0.054132 0.0) (0.0 0.0 1.0)) pos #f(308.036 76.1223 0.0)) object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.583286) #s(costed-arc plist nil from #13# to #1363# cost 0.510335) #s(costed-arc plist nil from #13# to #1277# cost 0.461375) #s(costed-arc plist nil from #13# to #1341# cost 0.411492) #s(costed-arc plist nil from #13# to #1329# cost 0.610806) #s(costed-arc plist nil from #13# to #1398=#s(extended-node plist ((:name . "r-2-3-16")) arc-list (#s(costed-arc plist nil from #1398# to #1156# cost 0.444657) #s(costed-arc plist nil from #1398# to #1130# cost 0.518045) #s(costed-arc plist nil from #1398# to #1149# cost 0.556346) #s(costed-arc plist nil from #1398# to #1109# cost 0.406775) #s(costed-arc plist nil from #1398# to #1232# cost 0.55994) #s(costed-arc plist nil from #1398# to #1087# cost 0.634058) #s(costed-arc plist nil from #1398# to #1105# cost 0.758089) #s(costed-arc plist nil from #1398# to #1125# cost 0.758581) #s(costed-arc plist nil from #1398# to #1102# cost 0.856885) #s(costed-arc plist nil from #1398# to #1122# cost 0.89796) #s(costed-arc plist nil from #1398# to #1119# cost 1.04776) #s(costed-arc plist nil from #1398# to #1316# cost 1.11278) #s(costed-arc plist nil from #1398# to #1098# cost 1.17748) #s(costed-arc plist nil from #1398# to #1317# cost 1.22824) #s(costed-arc plist nil from #1398# to #1318# cost 1.29561) #s(costed-arc plist nil from #1398# to #1319# cost 1.3461) #s(costed-arc plist nil from #1398# to #1320# cost 1.4449) #s(costed-arc plist nil from #1398# to #1145# cost 1.55273)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(162.571 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.83415 28.039 -139.644 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(195.373 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -3.59607 32.2638 -137.672 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.293137 -0.95607 0.0) (0.95607 0.293137 0.0) (0.0 0.0 1.0)) pos #f(120.303 67.867 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.013894 -0.999903 0.0) (0.999903 -0.013894 0.0) (0.0 0.0 1.0)) pos #f(140.191 30.3907 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.676223) #s(costed-arc plist nil from #13# to #1271# cost 0.673416) #s(costed-arc plist nil from #13# to #1399=#s(extended-node plist ((:name . "r-2-3-14")) arc-list (#s(costed-arc plist nil from #1399# to #1156# cost 0.376874) #s(costed-arc plist nil from #1399# to #1130# cost 0.296587) #s(costed-arc plist nil from #1399# to #1149# cost 0.343146) #s(costed-arc plist nil from #1399# to #1109# cost 0.448458) #s(costed-arc plist nil from #1399# to #1232# cost 0.510184) #s(costed-arc plist nil from #1399# to #1087# cost 0.523308) #s(costed-arc plist nil from #1399# to #1105# cost 0.503794) #s(costed-arc plist nil from #1399# to #1125# cost 0.487814) #s(costed-arc plist nil from #1399# to #1102# cost 0.825369) #s(costed-arc plist nil from #1399# to #1122# cost 0.911669) #s(costed-arc plist nil from #1399# to #1119# cost 0.984543) #s(costed-arc plist nil from #1399# to #1316# cost 0.958149) #s(costed-arc plist nil from #1399# to #1098# cost 0.938875) #s(costed-arc plist nil from #1399# to #1317# cost 1.26788) #s(costed-arc plist nil from #1399# to #1318# cost 1.33237) #s(costed-arc plist nil from #1399# to #1319# cost 1.31108) #s(costed-arc plist nil from #1399# to #1320# cost 1.32138) #s(costed-arc plist nil from #1399# to #1145# cost 1.37266)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(258.883 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -8.14358 0.010761 -138.826 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.321818 -0.946802 0.0) (0.946802 0.321818 0.0) (0.0 0.0 1.0)) pos #f(-76.007 89.3916 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.685951) #s(costed-arc plist nil from #13# to #1323# cost 0.551061) #s(costed-arc plist nil from #13# to #1400=#s(extended-node plist ((:name . "r-2-3-11")) arc-list (#s(costed-arc plist nil from #1400# to #1156# cost 0.823633) #s(costed-arc plist nil from #1400# to #1130# cost 0.86131) #s(costed-arc plist nil from #1400# to #1149# cost 0.938591) #s(costed-arc plist nil from #1400# to #1109# cost 0.706359) #s(costed-arc plist nil from #1400# to #1232# cost 0.806839) #s(costed-arc plist nil from #1400# to #1087# cost 0.92261) #s(costed-arc plist nil from #1400# to #1105# cost 0.937524) #s(costed-arc plist nil from #1400# to #1125# cost 0.983785) #s(costed-arc plist nil from #1400# to #1102# cost 0.886402) #s(costed-arc plist nil from #1400# to #1122# cost 1.137) #s(costed-arc plist nil from #1400# to #1119# cost 1.31192) #s(costed-arc plist nil from #1400# to #1316# cost 1.35234) #s(costed-arc plist nil from #1400# to #1098# cost 1.33814) #s(costed-arc plist nil from #1400# to #1317# cost 1.37874) #s(costed-arc plist nil from #1400# to #1318# cost 1.54442) #s(costed-arc plist nil from #1400# to #1319# cost 1.58542) #s(costed-arc plist nil from #1400# to #1320# cost 1.6494) #s(costed-arc plist nil from #1400# to #1145# cost 1.73144)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(77.7186 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -38.6962 39.6775 -168.289 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(132.951 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -74.0505 48.1489 -170.837 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.015705 -0.999877 0.0) (0.999877 0.015705 0.0) (0.0 0.0 1.0)) pos #f(-335.56 136.609 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.48633 -0.873775 0.0) (0.873775 -0.48633 0.0) (0.0 0.0 1.0)) pos #f(-331.195 106.537 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.931597) #s(costed-arc plist nil from #13# to #1315# cost 1.19635) #s(costed-arc plist nil from #13# to #1401=#s(extended-node plist ((:name . "r-2-3-9")) arc-list (#s(costed-arc plist nil from #1401# to #1156# cost 0.554198) #s(costed-arc plist nil from #1401# to #1130# cost 0.594173) #s(costed-arc plist nil from #1401# to #1149# cost 0.726751) #s(costed-arc plist nil from #1401# to #1109# cost 0.711701) #s(costed-arc plist nil from #1401# to #1232# cost 0.460828) #s(costed-arc plist nil from #1401# to #1087# cost 0.340396) #s(costed-arc plist nil from #1401# to #1105# cost 0.36867) #s(costed-arc plist nil from #1401# to #1125# cost 0.510871) #s(costed-arc plist nil from #1401# to #1102# cost 0.556777) #s(costed-arc plist nil from #1401# to #1122# cost 0.354173) #s(costed-arc plist nil from #1401# to #1119# cost 0.400236) #s(costed-arc plist nil from #1401# to #1316# cost 0.449725) #s(costed-arc plist nil from #1401# to #1098# cost 0.513968) #s(costed-arc plist nil from #1401# to #1317# cost 0.697471) #s(costed-arc plist nil from #1401# to #1318# cost 0.732192) #s(costed-arc plist nil from #1401# to #1319# cost 0.707226) #s(costed-arc plist nil from #1401# to #1320# cost 0.763979) #s(costed-arc plist nil from #1401# to #1145# cost 0.870821)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(220.24 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.46813 14.8809 -140.025 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.733899 -0.679258 0.0) (0.679258 0.733899 0.0) (0.0 0.0 1.0)) pos #f(-284.734 185.966 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.25666) #s(costed-arc plist nil from #13# to #1402=#s(extended-node plist ((:name . "r-2-3-8")) arc-list (#s(costed-arc plist nil from #1402# to #1156# cost 0.574846) #s(costed-arc plist nil from #1402# to #1130# cost 0.601248) #s(costed-arc plist nil from #1402# to #1149# cost 0.687757) #s(costed-arc plist nil from #1402# to #1109# cost 0.778249) #s(costed-arc plist nil from #1402# to #1232# cost 0.571809) #s(costed-arc plist nil from #1402# to #1087# cost 0.460974) #s(costed-arc plist nil from #1402# to #1105# cost 0.413129) #s(costed-arc plist nil from #1402# to #1125# cost 0.511467) #s(costed-arc plist nil from #1402# to #1102# cost 0.686995) #s(costed-arc plist nil from #1402# to #1122# cost 0.586943) #s(costed-arc plist nil from #1402# to #1119# cost 0.64375) #s(costed-arc plist nil from #1402# to #1316# cost 0.606417) #s(costed-arc plist nil from #1402# to #1098# cost 0.590107) #s(costed-arc plist nil from #1402# to #1317# cost 0.909962) #s(costed-arc plist nil from #1402# to #1318# cost 0.926158) #s(costed-arc plist nil from #1402# to #1319# cost 0.878402) #s(costed-arc plist nil from #1402# to #1320# cost 0.871211) #s(costed-arc plist nil from #1402# to #1145# cost 0.92862)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(256.051 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 19.0758 -0.085107 -157.549 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.690699 -0.723143 0.0) (0.723143 0.690699 0.0) (0.0 0.0 1.0)) pos #f(-187.222 91.5383 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.09904) #s(costed-arc plist nil from #13# to #1403=#s(extended-node plist ((:name . "r-2-3-7")) arc-list (#s(costed-arc plist nil from #1403# to #1156# cost 0.635731) #s(costed-arc plist nil from #1403# to #1130# cost 0.562409) #s(costed-arc plist nil from #1403# to #1149# cost 0.588126) #s(costed-arc plist nil from #1403# to #1109# cost 0.847846) #s(costed-arc plist nil from #1403# to #1232# cost 0.572722) #s(costed-arc plist nil from #1403# to #1087# cost 0.426692) #s(costed-arc plist nil from #1403# to #1105# cost 0.340486) #s(costed-arc plist nil from #1403# to #1125# cost 0.340221) #s(costed-arc plist nil from #1403# to #1102# cost 0.674537) #s(costed-arc plist nil from #1403# to #1122# cost 0.546688) #s(costed-arc plist nil from #1403# to #1119# cost 0.577548) #s(costed-arc plist nil from #1403# to #1316# cost 0.480349) #s(costed-arc plist nil from #1403# to #1098# cost 0.384844) #s(costed-arc plist nil from #1403# to #1317# cost 0.893867) #s(costed-arc plist nil from #1403# to #1318# cost 0.913617) #s(costed-arc plist nil from #1403# to #1319# cost 0.847341) #s(costed-arc plist nil from #1403# to #1320# cost 0.801821) #s(costed-arc plist nil from #1403# to #1145# cost 0.800629)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(255.883 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 6.10325 -20.0517 -137.88 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.706852 -0.707362 0.0) (0.707362 0.706852 0.0) (0.0 0.0 1.0)) pos #f(-288.809 205.38 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.09723) #s(costed-arc plist nil from #13# to #1404=#s(extended-node plist ((:name . "r-2-3-5")) arc-list (#s(costed-arc plist nil from #1404# to #1156# cost 0.721839) #s(costed-arc plist nil from #1404# to #1130# cost 0.821045) #s(costed-arc plist nil from #1404# to #1149# cost 0.97761) #s(costed-arc plist nil from #1404# to #1109# cost 0.690029) #s(costed-arc plist nil from #1404# to #1232# cost 0.541092) #s(costed-arc plist nil from #1404# to #1087# cost 0.509333) #s(costed-arc plist nil from #1404# to #1105# cost 0.54116) #s(costed-arc plist nil from #1404# to #1125# cost 0.72778) #s(costed-arc plist nil from #1404# to #1102# cost 0.432669) #s(costed-arc plist nil from #1404# to #1122# cost 0.315539) #s(costed-arc plist nil from #1404# to #1119# cost 0.496568) #s(costed-arc plist nil from #1404# to #1316# cost 0.562341) #s(costed-arc plist nil from #1404# to #1098# cost 0.617472) #s(costed-arc plist nil from #1404# to #1317# cost 0.432527) #s(costed-arc plist nil from #1404# to #1318# cost 0.609576) #s(costed-arc plist nil from #1404# to #1319# cost 0.706402) #s(costed-arc plist nil from #1404# to #1320# cost 0.818751) #s(costed-arc plist nil from #1404# to #1145# cost 0.941214)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(148.359 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 10.6842 50.4854 -152.396 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(171.381 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.32215 54.7618 -198.826 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.749857 -0.6616 0.0) (0.6616 0.749857 0.0) (0.0 0.0 1.0)) pos #f(-381.928 274.058 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.492326 -0.870411 0.0) (0.870411 0.492326 0.0) (0.0 0.0 1.0)) pos #f(-383.242 233.516 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.55193) #s(costed-arc plist nil from #13# to #1405=#s(extended-node plist ((:name . "r-2-3-4")) arc-list (#s(costed-arc plist nil from #1405# to #1156# cost 0.878926) #s(costed-arc plist nil from #1405# to #1130# cost 0.952319) #s(costed-arc plist nil from #1405# to #1149# cost 1.08987) #s(costed-arc plist nil from #1405# to #1109# cost 0.916866) #s(costed-arc plist nil from #1405# to #1232# cost 0.729118) #s(costed-arc plist nil from #1405# to #1087# cost 0.65643) #s(costed-arc plist nil from #1405# to #1105# cost 0.693486) #s(costed-arc plist nil from #1405# to #1125# cost 0.850578) #s(costed-arc plist nil from #1405# to #1102# cost 0.718388) #s(costed-arc plist nil from #1405# to #1122# cost 0.43093) #s(costed-arc plist nil from #1405# to #1119# cost 0.340039) #s(costed-arc plist nil from #1405# to #1316# cost 0.385874) #s(costed-arc plist nil from #1405# to #1098# cost 0.566222) #s(costed-arc plist nil from #1405# to #1317# cost 0.425641) #s(costed-arc plist nil from #1405# to #1318# cost 0.400779) #s(costed-arc plist nil from #1405# to #1319# cost 0.506729) #s(costed-arc plist nil from #1405# to #1320# cost 0.628814) #s(costed-arc plist nil from #1405# to #1145# cost 0.759249)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(230.334 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.9635 37.3371 -145.632 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(276.007 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 4.02515 44.5377 -172.035 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.872907 -0.487886 0.0) (0.487886 0.872907 0.0) (0.0 0.0 1.0)) pos #f(-354.591 206.329 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.512017 -0.858975 0.0) (0.858975 0.512017 0.0) (0.0 0.0 1.0)) pos #f(-366.142 165.505 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.61548) #s(costed-arc plist nil from #13# to #1406=#s(extended-node plist ((:name . "r-2-3-3")) arc-list (#s(costed-arc plist nil from #1406# to #1156# cost 0.967819) #s(costed-arc plist nil from #1406# to #1130# cost 1.00372) #s(costed-arc plist nil from #1406# to #1149# cost 1.11834) #s(costed-arc plist nil from #1406# to #1109# cost 1.07418) #s(costed-arc plist nil from #1406# to #1232# cost 0.842405) #s(costed-arc plist nil from #1406# to #1087# cost 0.730621) #s(costed-arc plist nil from #1406# to #1105# cost 0.745045) #s(costed-arc plist nil from #1406# to #1125# cost 0.876318) #s(costed-arc plist nil from #1406# to #1102# cost 0.860205) #s(costed-arc plist nil from #1406# to #1122# cost 0.538652) #s(costed-arc plist nil from #1406# to #1119# cost 0.368307) #s(costed-arc plist nil from #1406# to #1316# cost 0.371411) #s(costed-arc plist nil from #1406# to #1098# cost 0.568872) #s(costed-arc plist nil from #1406# to #1317# cost 0.577259) #s(costed-arc plist nil from #1406# to #1318# cost 0.444902) #s(costed-arc plist nil from #1406# to #1319# cost 0.353706) #s(costed-arc plist nil from #1406# to #1320# cost 0.475586) #s(costed-arc plist nil from #1406# to #1145# cost 0.613524)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(245.124 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.9308 17.7943 -139.649 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.91194 -0.410323 0.0) (0.410323 0.91194 0.0) (0.0 0.0 1.0)) pos #f(-402.946 169.274 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.61309) #s(costed-arc plist nil from #13# to #1407=#s(extended-node plist ((:name . "r-2-3-2")) arc-list (#s(costed-arc plist nil from #1407# to #1156# cost 1.07302) #s(costed-arc plist nil from #1407# to #1130# cost 1.06091) #s(costed-arc plist nil from #1407# to #1149# cost 1.14145) #s(costed-arc plist nil from #1407# to #1109# cost 1.22156) #s(costed-arc plist nil from #1407# to #1232# cost 0.958225) #s(costed-arc plist nil from #1407# to #1087# cost 0.819523) #s(costed-arc plist nil from #1407# to #1105# cost 0.794175) #s(costed-arc plist nil from #1407# to #1125# cost 0.885264) #s(costed-arc plist nil from #1407# to #1102# cost 0.975301) #s(costed-arc plist nil from #1407# to #1122# cost 0.652105) #s(costed-arc plist nil from #1407# to #1119# cost 0.446139) #s(costed-arc plist nil from #1407# to #1316# cost 0.363049) #s(costed-arc plist nil from #1407# to #1098# cost 0.547072) #s(costed-arc plist nil from #1407# to #1317# cost 0.711184) #s(costed-arc plist nil from #1407# to #1318# cost 0.470333) #s(costed-arc plist nil from #1407# to #1319# cost 0.372578) #s(costed-arc plist nil from #1407# to #1320# cost 0.324741) #s(costed-arc plist nil from #1407# to #1145# cost 0.446219)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(250.399 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.4213 -1.13523 -134.421 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(242.199 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 32.3493 -3.58143 -101.148 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.943396 -0.331667 0.0) (0.331667 0.943396 0.0) (0.0 0.0 1.0)) pos #f(-440.94 193.996 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.933575 -0.358381 0.0) (0.358381 0.933575 0.0) (0.0 0.0 1.0)) pos #f(-413.914 171.698 0.0)) object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.63862) #s(costed-arc plist nil from #13# to #1408=#s(extended-node plist ((:name . "r-2-3-1")) arc-list (#s(costed-arc plist nil from #1408# to #1156# cost 1.21512) #s(costed-arc plist nil from #1408# to #1130# cost 1.17727) #s(costed-arc plist nil from #1408# to #1149# cost 1.22241) #s(costed-arc plist nil from #1408# to #1109# cost 1.38775) #s(costed-arc plist nil from #1408# to #1232# cost 1.10581) #s(costed-arc plist nil from #1408# to #1087# cost 0.96579) #s(costed-arc plist nil from #1408# to #1105# cost 0.876606) #s(costed-arc plist nil from #1408# to #1125# cost 0.93701) #s(costed-arc plist nil from #1408# to #1102# cost 1.08329) #s(costed-arc plist nil from #1408# to #1122# cost 0.771265) #s(costed-arc plist nil from #1408# to #1119# cost 0.570269) #s(costed-arc plist nil from #1408# to #1316# cost 0.474737) #s(costed-arc plist nil from #1408# to #1098# cost 0.532587) #s(costed-arc plist nil from #1408# to #1317# cost 0.831081) #s(costed-arc plist nil from #1408# to #1318# cost 0.553133) #s(costed-arc plist nil from #1408# to #1319# cost 0.391436) #s(costed-arc plist nil from #1408# to #1320# cost 0.275679) #s(costed-arc plist nil from #1408# to #1145# cost 0.186671)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(251.863 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.8012 -20.1229 -144.743 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.979631 -0.200805 0.0) (0.200805 0.979631 0.0) (0.0 0.0 1.0)) pos #f(-455.083 280.169 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.73353)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(277.941 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 3.129 -17.1905 -141.961 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#15# #1409#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(270.306 30.165 51.5949 95.445 -90.4098 51.7698 -30.0 180.0 2.97842 -17.8828 -146.263 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.058733 -0.998274 0.0) (0.998274 -0.058733 0.0) (0.0 0.0 1.0)) pos #f(306.348 -124.071 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #11# to #1410=#s(extended-node plist ((:name . "r-2-2-14<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1410# to #11# cost 0) #s(costed-arc plist nil from #1410# to #1411=#s(extended-node plist ((:name . #1413="r-2-2-14")) arc-list (#s(costed-arc plist nil from #1411# to #1410# cost 0) #s(costed-arc plist nil from #1411# to #1412=#s(extended-node plist ((:name . "r-2-2-14<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1412# to #7# cost 0) #s(costed-arc plist nil from #1412# to #1411# cost 0)) arm :arms islands (#1413# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(263.712 -0.089669 53.9814 110.552 -36.0631 29.5395 -30.0 180.0 -6.47554 0.743532 -143.801 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1411# to #17# cost 0.487174) #s(costed-arc plist nil from #1411# to #1363# cost 0.357875) #s(costed-arc plist nil from #1411# to #1277# cost 0.371447) #s(costed-arc plist nil from #1411# to #1341# cost 0.443806) #s(costed-arc plist nil from #1411# to #1329# cost 0.454941) #s(costed-arc plist nil from #1411# to #1398# cost 0.539985) #s(costed-arc plist nil from #1411# to #1271# cost 0.516425) #s(costed-arc plist nil from #1411# to #1399# cost 0.527687) #s(costed-arc plist nil from #1411# to #1323# cost 0.539988) #s(costed-arc plist nil from #1411# to #1400# cost 0.724718) #s(costed-arc plist nil from #1411# to #1315# cost 1.00813) #s(costed-arc plist nil from #1411# to #1401# cost 1.10463) #s(costed-arc plist nil from #1411# to #1402# cost 1.0058) #s(costed-arc plist nil from #1411# to #1403# cost 1.11685) #s(costed-arc plist nil from #1411# to #1404# cost 1.37232) #s(costed-arc plist nil from #1411# to #1405# cost 1.46613) #s(costed-arc plist nil from #1411# to #1406# cost 1.49533) #s(costed-arc plist nil from #1411# to #1407# cost 1.57428) #s(costed-arc plist nil from #1411# to #1408# cost 1.72537)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(276.199 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -6.54869 2.22699 -145.619 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index 14 object-coords #658# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1413# #1409#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(273.319 12.1567 58.5168 73.5647 -84.7484 59.5326 -30.0 180.0 -6.46407 1.82988 -143.46 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.01926 -0.999815 0.0) (0.999815 -0.01926 0.0) (0.0 0.0 1.0)) pos #f(188.623 -142.974 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #11# to #1414=#s(extended-node plist ((:name . "r-2-2-16<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1414# to #11# cost 0) #s(costed-arc plist nil from #1414# to #1415=#s(extended-node plist ((:name . #1417="r-2-2-16")) arc-list (#s(costed-arc plist nil from #1415# to #1414# cost 0) #s(costed-arc plist nil from #1415# to #1416=#s(extended-node plist ((:name . "r-2-2-16<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1416# to #7# cost 0) #s(costed-arc plist nil from #1416# to #1415# cost 0)) arm :arms islands (#1417# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(149.966 32.7107 54.8922 102.101 -83.5206 53.9963 -30.0 180.0 3.74436 26.7245 -141.261 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1415# to #17# cost 0.35903) #s(costed-arc plist nil from #1415# to #1363# cost 0.40424) #s(costed-arc plist nil from #1415# to #1277# cost 0.501222) #s(costed-arc plist nil from #1415# to #1341# cost 0.577714) #s(costed-arc plist nil from #1415# to #1329# cost 0.381774) #s(costed-arc plist nil from #1415# to #1398# cost 0.46763) #s(costed-arc plist nil from #1415# to #1271# cost 0.567494) #s(costed-arc plist nil from #1415# to #1399# cost 0.73905) #s(costed-arc plist nil from #1415# to #1323# cost 0.73953) #s(costed-arc plist nil from #1415# to #1400# cost 0.810108) #s(costed-arc plist nil from #1415# to #1315# cost 1.00766) #s(costed-arc plist nil from #1415# to #1401# cost 1.16285) #s(costed-arc plist nil from #1415# to #1402# cost 1.14245) #s(costed-arc plist nil from #1415# to #1403# cost 1.32153) #s(costed-arc plist nil from #1415# to #1404# cost 1.32775) #s(costed-arc plist nil from #1415# to #1405# cost 1.44064) #s(costed-arc plist nil from #1415# to #1406# cost 1.53276) #s(costed-arc plist nil from #1415# to #1407# cost 1.6826) #s(costed-arc plist nil from #1415# to #1408# cost 1.88696)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(162.637 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 3.77612 28.0835 -141.568 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1417# #1409#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(168.985 28.1059 53.8404 73.5962 -114.005 49.9036 -30.0 180.0 3.77627 28.7069 -141.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.064614 -0.99791 0.0) (0.99791 -0.064614 0.0) (0.0 0.0 1.0)) pos #f(312.794 -104.42 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #11# to #1418=#s(extended-node plist ((:name . "r-2-2-19<->-l-1-2-4")) arc-list (#s(costed-arc plist nil from #1418# to #11# cost 0) #s(costed-arc plist nil from #1418# to #1419=#s(extended-node plist ((:name . #1420="r-2-2-19")) arc-list (#s(costed-arc plist nil from #1419# to #1418# cost 0) #s(costed-arc plist nil from #1419# to #17# cost 0.783131) #s(costed-arc plist nil from #1419# to #1363# cost 0.662698) #s(costed-arc plist nil from #1419# to #1277# cost 0.604572) #s(costed-arc plist nil from #1419# to #1341# cost 0.607365) #s(costed-arc plist nil from #1419# to #1329# cost 0.795018) #s(costed-arc plist nil from #1419# to #1398# cost 0.908035) #s(costed-arc plist nil from #1419# to #1271# cost 0.915276) #s(costed-arc plist nil from #1419# to #1399# cost 0.885961) #s(costed-arc plist nil from #1419# to #1323# cost 0.784893) #s(costed-arc plist nil from #1419# to #1400# cost 1.04368) #s(costed-arc plist nil from #1419# to #1315# cost 1.41504) #s(costed-arc plist nil from #1419# to #1401# cost 1.5151) #s(costed-arc plist nil from #1419# to #1402# cost 1.41201) #s(costed-arc plist nil from #1419# to #1403# cost 1.42086) #s(costed-arc plist nil from #1419# to #1404# cost 1.77347) #s(costed-arc plist nil from #1419# to #1405# cost 1.88382) #s(costed-arc plist nil from #1419# to #1406# cost 1.91178) #s(costed-arc plist nil from #1419# to #1407# cost 1.96138) #s(costed-arc plist nil from #1419# to #1408# cost 2.07332)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(282.091 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.7405 -16.897 -136.279 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.320967 -0.94709 0.0) (0.94709 -0.320967 0.0) (0.0 0.0 1.0)) pos #f(289.133 -72.2033 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1420# #1409#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(275.339 15.6106 52.2434 95.5759 -89.8666 52.37 -30.0 180.0 -30.6816 -17.2372 -137.928 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.320967 -0.94709 0.0) (0.94709 -0.320967 0.0) (0.0 0.0 1.0)) pos #f(289.133 -72.2033 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #11# to #1300# cost 1.0577) #s(costed-arc plist nil from #11# to #1279# cost 1.12271) #s(costed-arc plist nil from #11# to #1293# cost 0.834076) #s(costed-arc plist nil from #11# to #1287# cost 0.882862)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(63.6664 35.6324 5.43001 144.89 -20.5436 -52.7123 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994993 -0.099942 0.0) (0.099942 0.994993 0.0) (0.0 0.0 1.0)) pos #f(-369.561 -390.981 0.0)) base-coords-optimized nil object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #10# to #9# cost 0)) arm :arms islands (#1421# #1409#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(277.558 -2.35441 68.4384 34.774 -83.9245 77.2928 -30.0 180.0 13.7292 -16.7779 -148.129 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #9# to #8# cost 0) #s(costed-arc plist nil from #9# to #17# cost 0.728264) #s(costed-arc plist nil from #9# to #1363# cost 0.605282) #s(costed-arc plist nil from #9# to #1277# cost 0.53928) #s(costed-arc plist nil from #9# to #1341# cost 0.507973) #s(costed-arc plist nil from #9# to #1329# cost 0.77568) #s(costed-arc plist nil from #9# to #1398# cost 0.468147) #s(costed-arc plist nil from #9# to #1271# cost 0.383162) #s(costed-arc plist nil from #9# to #1399# cost 0.372023) #s(costed-arc plist nil from #9# to #1323# cost 0.364591) #s(costed-arc plist nil from #9# to #1400# cost 1.00438) #s(costed-arc plist nil from #9# to #1315# cost 0.742173) #s(costed-arc plist nil from #9# to #1401# cost 0.795639) #s(costed-arc plist nil from #9# to #1402# cost 0.598809) #s(costed-arc plist nil from #9# to #1403# cost 0.665232) #s(costed-arc plist nil from #9# to #1404# cost 1.08875) #s(costed-arc plist nil from #9# to #1405# cost 1.12916) #s(costed-arc plist nil from #9# to #1406# cost 1.10812) #s(costed-arc plist nil from #9# to #1407# cost 1.12505) #s(costed-arc plist nil from #9# to #1408# cost 1.20859)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(275.119 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 13.9948 -17.4981 -145.322 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1421# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(267.995 -8.07546 61.5574 56.2857 -26.161 57.6317 -30.0 180.0 13.7278 -17.7932 -148.354 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.377981 -0.925813 0.0) (0.925813 0.377981 0.0) (0.0 0.0 1.0)) pos #f(23.5536 -145.207 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #7# to #1422=#s(extended-node plist ((:name . "r-2-2-10<->-l-1-2-5")) arc-list (#s(costed-arc plist nil from #1422# to #7# cost 0) #s(costed-arc plist nil from #1422# to #1423=#s(extended-node plist ((:name . #1424="r-2-2-10")) arc-list (#s(costed-arc plist nil from #1423# to #1422# cost 0) #s(costed-arc plist nil from #1423# to #17# cost 0.440683) #s(costed-arc plist nil from #1423# to #1363# cost 0.43353) #s(costed-arc plist nil from #1423# to #1277# cost 0.510233) #s(costed-arc plist nil from #1423# to #1341# cost 0.60934) #s(costed-arc plist nil from #1423# to #1329# cost 0.469703) #s(costed-arc plist nil from #1423# to #1398# cost 0.245264) #s(costed-arc plist nil from #1423# to #1271# cost 0.22238) #s(costed-arc plist nil from #1423# to #1399# cost 0.336482) #s(costed-arc plist nil from #1423# to #1323# cost 0.44261) #s(costed-arc plist nil from #1423# to #1400# cost 0.708991) #s(costed-arc plist nil from #1423# to #1315# cost 0.513972) #s(costed-arc plist nil from #1423# to #1401# cost 0.737423) #s(costed-arc plist nil from #1423# to #1402# cost 0.680569) #s(costed-arc plist nil from #1423# to #1403# cost 0.888111) #s(costed-arc plist nil from #1423# to #1404# cost 0.868777) #s(costed-arc plist nil from #1423# to #1405# cost 0.992929) #s(costed-arc plist nil from #1423# to #1406# cost 1.08294) #s(costed-arc plist nil from #1423# to #1407# cost 1.23514) #s(costed-arc plist nil from #1423# to #1408# cost 1.4397)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(165.659 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 1.91686 28.7434 -150.557 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(256.93 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -26.123 41.6345 -190.475 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.295568 -0.955322 0.0) (0.955322 0.295568 0.0) (0.0 0.0 1.0)) pos #f(-43.1961 -117.074 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.221692 -0.975117 0.0) (0.975117 -0.221692 0.0) (0.0 0.0 1.0)) pos #f(-23.4035 -154.601 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1424# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(162.066 -21.2847 64.7365 23.7918 -62.4248 80.2183 -30.0 180.0 2.03637 28.2932 -149.738 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.295568 -0.955322 0.0) (0.955322 0.295568 0.0) (0.0 0.0 1.0)) pos #f(-43.1961 -117.074 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #7# to #14# cost 0) #s(costed-arc plist nil from #7# to #1412# cost 0) #s(costed-arc plist nil from #7# to #1416# cost 0) #s(costed-arc plist nil from #7# to #6# cost 0) #s(costed-arc plist nil from #7# to #1300# cost 0.764071) #s(costed-arc plist nil from #7# to #1279# cost 0.847226) #s(costed-arc plist nil from #7# to #1293# cost 0.583293) #s(costed-arc plist nil from #7# to #1287# cost 0.648837)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(125.708 48.7533 32.5433 113.647 -21.6857 -8.62913 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(116.367 34.4867 35.1086 89.7221 -20.8577 14.2226 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.993809 -0.111105 0.0) (0.111105 0.993809 0.0) (0.0 0.0 1.0)) pos #f(-207.319 -419.387 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.941952 -0.335748 0.0) (0.335748 0.941952 0.0) (0.0 0.0 1.0)) pos #f(-180.326 -390.822 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #6# to #5# cost 0)) arm :arms islands (#1425# #16#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(240.898 6.97703 56.3453 108.245 -56.9703 50.6536 -30.0 180.0 -32.8356 17.6015 -144.22 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.324735 -0.945805 0.0) (0.945805 -0.324735 0.0) (0.0 0.0 1.0)) pos #f(273.997 -64.5002 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #5# to #17# cost 0.646758) #s(costed-arc plist nil from #5# to #1363# cost 0.55511) #s(costed-arc plist nil from #5# to #1277# cost 0.637716) #s(costed-arc plist nil from #5# to #1341# cost 0.731468) #s(costed-arc plist nil from #5# to #1329# cost 0.627331) #s(costed-arc plist nil from #5# to #1398# cost 0.810439) #s(costed-arc plist nil from #5# to #1271# cost 0.833668) #s(costed-arc plist nil from #5# to #1399# cost 0.899671) #s(costed-arc plist nil from #5# to #1323# cost 0.900671) #s(costed-arc plist nil from #5# to #1400# cost 0.853581) #s(costed-arc plist nil from #5# to #1315# cost 1.29314) #s(costed-arc plist nil from #5# to #1401# cost 1.46207) #s(costed-arc plist nil from #5# to #1402# cost 1.40637) #s(costed-arc plist nil from #5# to #1403# cost 1.51484) #s(costed-arc plist nil from #5# to #1404# cost 1.62143) #s(costed-arc plist nil from #5# to #1405# cost 1.78399) #s(costed-arc plist nil from #5# to #1406# cost 1.86674) #s(costed-arc plist nil from #5# to #1407# cost 1.97621) #s(costed-arc plist nil from #5# to #1408# cost 2.13655)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(266.661 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -32.8891 20.5361 -144.744 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.324735 -0.945805 0.0) (0.945805 -0.324735 0.0) (0.0 0.0 1.0)) pos #f(273.997 -64.5002 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.754738) #s(costed-arc plist nil from #4# to #1419# cost 0.811683) #s(costed-arc plist nil from #4# to #1426=#s(extended-node plist ((:name . "r-2-2-17")) arc-list (#s(costed-arc plist nil from #1426# to #17# cost 0.496875) #s(costed-arc plist nil from #1426# to #1363# cost 0.561498) #s(costed-arc plist nil from #1426# to #1277# cost 0.68677) #s(costed-arc plist nil from #1426# to #1341# cost 0.784189) #s(costed-arc plist nil from #1426# to #1329# cost 0.427795) #s(costed-arc plist nil from #1426# to #1398# cost 0.69343) #s(costed-arc plist nil from #1426# to #1271# cost 0.764004) #s(costed-arc plist nil from #1426# to #1399# cost 0.935999) #s(costed-arc plist nil from #1426# to #1323# cost 0.948359) #s(costed-arc plist nil from #1426# to #1400# cost 0.840248) #s(costed-arc plist nil from #1426# to #1315# cost 1.18457) #s(costed-arc plist nil from #1426# to #1401# cost 1.39783) #s(costed-arc plist nil from #1426# to #1402# cost 1.36198) #s(costed-arc plist nil from #1426# to #1403# cost 1.5409) #s(costed-arc plist nil from #1426# to #1404# cost 1.42358) #s(costed-arc plist nil from #1426# to #1405# cost 1.62496) #s(costed-arc plist nil from #1426# to #1406# cost 1.76187) #s(costed-arc plist nil from #1426# to #1407# cost 1.92067) #s(costed-arc plist nil from #1426# to #1408# cost 2.11821)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(125.394 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -11.008 46.0346 -146.909 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(127.415 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -30.3067 46.8109 -149.126 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.270811 -0.962633 0.0) (0.962633 -0.270811 0.0) (0.0 0.0 1.0)) pos #f(275.939 -66.8675 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.513012 -0.858381 0.0) (0.858381 -0.513012 0.0) (0.0 0.0 1.0)) pos #f(255.185 -103.871 0.0)) object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.680624) #s(costed-arc plist nil from #4# to #1415# cost 0.43071) #s(costed-arc plist nil from #4# to #1427=#s(extended-node plist ((:name . #1447="r-2-2-15")) arc-list (#s(costed-arc plist nil from #1427# to #1428=#s(extended-node plist ((:name . "r-2-2-15<->-l-2-2-10")) arc-list (#s(costed-arc plist nil from #1428# to #1429=#s(extended-node plist ((:name . #1448="l-2-2-10")) arc-list (#s(costed-arc plist nil from #1429# to #1428# cost 0) #s(costed-arc plist nil from #1429# to #1430=#s(extended-node plist ((:name . "l-2-3-23")) arc-list (#s(costed-arc plist nil from #1430# to #1345# cost 0.17648) #s(costed-arc plist nil from #1430# to #1346# cost 0.26264) #s(costed-arc plist nil from #1430# to #1347# cost 0.440136) #s(costed-arc plist nil from #1430# to #1348# cost 0.531544) #s(costed-arc plist nil from #1430# to #1349# cost 0.597975) #s(costed-arc plist nil from #1430# to #1350# cost 0.317763) #s(costed-arc plist nil from #1430# to #1351# cost 0.428436) #s(costed-arc plist nil from #1430# to #1352# cost 0.497112) #s(costed-arc plist nil from #1430# to #1353# cost 0.650994) #s(costed-arc plist nil from #1430# to #1354# cost 0.714635) #s(costed-arc plist nil from #1430# to #1355# cost 0.467054) #s(costed-arc plist nil from #1430# to #1114# cost 0.527687) #s(costed-arc plist nil from #1430# to #1356# cost 0.640678) #s(costed-arc plist nil from #1430# to #1357# cost 0.684507) #s(costed-arc plist nil from #1430# to #1358# cost 0.812501) #s(costed-arc plist nil from #1430# to #985# cost 0.577033) #s(costed-arc plist nil from #1430# to #989# cost 0.620517) #s(costed-arc plist nil from #1430# to #1191# cost 0.727571) #s(costed-arc plist nil from #1430# to #1185# cost 0.815042) #s(costed-arc plist nil from #1430# to #1359# cost 0.892003)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(181.912 50.5722 55.3976 119.474 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(211.735 70.7596 62.0157 126.297 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.995205 0.09781 0.0) (-0.09781 0.995205 0.0) (0.0 0.0 1.0)) pos #f(335.393 54.659 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.93302 0.359823 0.0) (-0.359823 0.93302 0.0) (0.0 0.0 1.0)) pos #f(336.553 68.824 0.0)) object-coords-index 23 object-coords #937# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.492588) #s(costed-arc plist nil from #1429# to #1431=#s(extended-node plist ((:name . "l-2-3-22")) arc-list (#s(costed-arc plist nil from #1431# to #1345# cost 0.300103) #s(costed-arc plist nil from #1431# to #1346# cost 0.185918) #s(costed-arc plist nil from #1431# to #1347# cost 0.316677) #s(costed-arc plist nil from #1431# to #1348# cost 0.384443) #s(costed-arc plist nil from #1431# to #1349# cost 0.451847) #s(costed-arc plist nil from #1431# to #1350# cost 0.350671) #s(costed-arc plist nil from #1431# to #1351# cost 0.349363) #s(costed-arc plist nil from #1431# to #1352# cost 0.339373) #s(costed-arc plist nil from #1431# to #1353# cost 0.498745) #s(costed-arc plist nil from #1431# to #1354# cost 0.556785) #s(costed-arc plist nil from #1431# to #1355# cost 0.480349) #s(costed-arc plist nil from #1431# to #1114# cost 0.443555) #s(costed-arc plist nil from #1431# to #1356# cost 0.50282) #s(costed-arc plist nil from #1431# to #1357# cost 0.517461) #s(costed-arc plist nil from #1431# to #1358# cost 0.654399) #s(costed-arc plist nil from #1431# to #985# cost 0.579384) #s(costed-arc plist nil from #1431# to #989# cost 0.539626) #s(costed-arc plist nil from #1431# to #1191# cost 0.596004) #s(costed-arc plist nil from #1431# to #1185# cost 0.664889) #s(costed-arc plist nil from #1431# to #1359# cost 0.739363)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(232.104 48.6326 36.4456 116.314 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(116.83 13.2089 21.0691 109.94 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998087 0.061832 0.0) (-0.061832 0.998087 0.0) (0.0 0.0 1.0)) pos #f(263.187 -25.3593 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.895309 -0.445445 0.0) (0.445445 0.895309 0.0) (0.0 0.0 1.0)) pos #f(273.235 4.07574 0.0)) object-coords-index 22 object-coords #906# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.343311) #s(costed-arc plist nil from #1429# to #1432=#s(extended-node plist ((:name . "l-2-3-21")) arc-list (#s(costed-arc plist nil from #1432# to #1345# cost 0.419734) #s(costed-arc plist nil from #1432# to #1346# cost 0.220127) #s(costed-arc plist nil from #1432# to #1347# cost 0.192541) #s(costed-arc plist nil from #1432# to #1348# cost 0.233747) #s(costed-arc plist nil from #1432# to #1349# cost 0.318833) #s(costed-arc plist nil from #1432# to #1350# cost 0.405778) #s(costed-arc plist nil from #1432# to #1351# cost 0.306233) #s(costed-arc plist nil from #1432# to #1352# cost 0.185594) #s(costed-arc plist nil from #1432# to #1353# cost 0.328411) #s(costed-arc plist nil from #1432# to #1354# cost 0.393825) #s(costed-arc plist nil from #1432# to #1355# cost 0.503021) #s(costed-arc plist nil from #1432# to #1114# cost 0.392418) #s(costed-arc plist nil from #1432# to #1356# cost 0.358059) #s(costed-arc plist nil from #1432# to #1357# cost 0.360288) #s(costed-arc plist nil from #1432# to #1358# cost 0.486534) #s(costed-arc plist nil from #1432# to #985# cost 0.59458) #s(costed-arc plist nil from #1432# to #989# cost 0.492408) #s(costed-arc plist nil from #1432# to #1191# cost 0.470904) #s(costed-arc plist nil from #1432# to #1185# cost 0.510022) #s(costed-arc plist nil from #1432# to #1359# cost 0.578715)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(244.712 47.0992 17.4235 131.275 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998937 0.046092 0.0) (-0.046092 0.998937 0.0) (0.0 0.0 1.0)) pos #f(207.851 -69.2425 0.0)) base-coords-optimized nil object-coords-index 21 object-coords #875# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.388042) #s(costed-arc plist nil from #1429# to #1433=#s(extended-node plist ((:name . "l-2-3-20")) arc-list (#s(costed-arc plist nil from #1433# to #1345# cost 0.534109) #s(costed-arc plist nil from #1433# to #1346# cost 0.332005) #s(costed-arc plist nil from #1433# to #1347# cost 0.233021) #s(costed-arc plist nil from #1433# to #1348# cost 0.165186) #s(costed-arc plist nil from #1433# to #1349# cost 0.234077) #s(costed-arc plist nil from #1433# to #1350# cost 0.51233) #s(costed-arc plist nil from #1433# to #1351# cost 0.389516) #s(costed-arc plist nil from #1433# to #1352# cost 0.247666) #s(costed-arc plist nil from #1433# to #1353# cost 0.24158) #s(costed-arc plist nil from #1433# to #1354# cost 0.287673) #s(costed-arc plist nil from #1433# to #1355# cost 0.591558) #s(costed-arc plist nil from #1433# to #1114# cost 0.468403) #s(costed-arc plist nil from #1433# to #1356# cost 0.375701) #s(costed-arc plist nil from #1433# to #1357# cost 0.301905) #s(costed-arc plist nil from #1433# to #1358# cost 0.383316) #s(costed-arc plist nil from #1433# to #985# cost 0.676006) #s(costed-arc plist nil from #1433# to #989# cost 0.554695) #s(costed-arc plist nil from #1433# to #1191# cost 0.478457) #s(costed-arc plist nil from #1433# to #1185# cost 0.449396) #s(costed-arc plist nil from #1433# to #1359# cost 0.48855)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(252.16 47.7109 -0.752007 139.259 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999162 0.040929 0.0) (-0.040929 0.999162 0.0) (0.0 0.0 1.0)) pos #f(201.549 -85.9341 0.0)) base-coords-optimized nil object-coords-index 20 object-coords #844# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.466993) #s(costed-arc plist nil from #1429# to #1434=#s(extended-node plist ((:name . "l-2-3-19")) arc-list (#s(costed-arc plist nil from #1434# to #1345# cost 0.607858) #s(costed-arc plist nil from #1434# to #1346# cost 0.41187) #s(costed-arc plist nil from #1434# to #1347# cost 0.324528) #s(costed-arc plist nil from #1434# to #1348# cost 0.233249) #s(costed-arc plist nil from #1434# to #1349# cost 0.161717) #s(costed-arc plist nil from #1434# to #1350# cost 0.602265) #s(costed-arc plist nil from #1434# to #1351# cost 0.498517) #s(costed-arc plist nil from #1434# to #1352# cost 0.363879) #s(costed-arc plist nil from #1434# to #1353# cost 0.319773) #s(costed-arc plist nil from #1434# to #1354# cost 0.23326) #s(costed-arc plist nil from #1434# to #1355# cost 0.697564) #s(costed-arc plist nil from #1434# to #1114# cost 0.58283) #s(costed-arc plist nil from #1434# to #1356# cost 0.488941) #s(costed-arc plist nil from #1434# to #1357# cost 0.366858) #s(costed-arc plist nil from #1434# to #1358# cost 0.354438) #s(costed-arc plist nil from #1434# to #985# cost 0.782941) #s(costed-arc plist nil from #1434# to #989# cost 0.664067) #s(costed-arc plist nil from #1434# to #1191# cost 0.57767) #s(costed-arc plist nil from #1434# to #1185# cost 0.503545) #s(costed-arc plist nil from #1434# to #1359# cost 0.475878)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(255.377 48.2295 -20.0629 139.496 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998778 0.049414 0.0) (-0.049414 0.998778 0.0) (0.0 0.0 1.0)) pos #f(225.91 -60.7662 0.0)) base-coords-optimized nil object-coords-index 19 object-coords #813# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.565028) #s(costed-arc plist nil from #1429# to #1435=#s(extended-node plist ((:name . "l-2-3-17")) arc-list (#s(costed-arc plist nil from #1435# to #1345# cost 0.241724) #s(costed-arc plist nil from #1435# to #1346# cost 0.185224) #s(costed-arc plist nil from #1435# to #1347# cost 0.304958) #s(costed-arc plist nil from #1435# to #1348# cost 0.390577) #s(costed-arc plist nil from #1435# to #1349# cost 0.479329) #s(costed-arc plist nil from #1435# to #1350# cost 0.216834) #s(costed-arc plist nil from #1435# to #1351# cost 0.282541) #s(costed-arc plist nil from #1435# to #1352# cost 0.341426) #s(costed-arc plist nil from #1435# to #1353# cost 0.495824) #s(costed-arc plist nil from #1435# to #1354# cost 0.56577) #s(costed-arc plist nil from #1435# to #1355# cost 0.321694) #s(costed-arc plist nil from #1435# to #1114# cost 0.36541) #s(costed-arc plist nil from #1435# to #1356# cost 0.478624) #s(costed-arc plist nil from #1435# to #1357# cost 0.526769) #s(costed-arc plist nil from #1435# to #1358# cost 0.655766) #s(costed-arc plist nil from #1435# to #985# cost 0.416759) #s(costed-arc plist nil from #1435# to #989# cost 0.451768) #s(costed-arc plist nil from #1435# to #1191# cost 0.561866) #s(costed-arc plist nil from #1435# to #1185# cost 0.652247) #s(costed-arc plist nil from #1435# to #1359# cost 0.731391)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(184.762 53.6354 56.2145 125.703 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999047 0.043644 0.0) (-0.043644 0.999047 0.0) (0.0 0.0 1.0)) pos #f(184.954 -0.157559 0.0)) base-coords-optimized nil object-coords-index 17 object-coords #751# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.40596) #s(costed-arc plist nil from #1429# to #1436=#s(extended-node plist ((:name . "l-2-3-16")) arc-list (#s(costed-arc plist nil from #1436# to #1345# cost 0.393781) #s(costed-arc plist nil from #1436# to #1346# cost 0.209276) #s(costed-arc plist nil from #1436# to #1347# cost 0.260117) #s(costed-arc plist nil from #1436# to #1348# cost 0.323117) #s(costed-arc plist nil from #1436# to #1349# cost 0.437256) #s(costed-arc plist nil from #1436# to #1350# cost 0.338202) #s(costed-arc plist nil from #1436# to #1351# cost 0.203968) #s(costed-arc plist nil from #1436# to #1352# cost 0.171888) #s(costed-arc plist nil from #1436# to #1353# cost 0.332014) #s(costed-arc plist nil from #1436# to #1354# cost 0.415445) #s(costed-arc plist nil from #1436# to #1355# cost 0.36177) #s(costed-arc plist nil from #1436# to #1114# cost 0.256366) #s(costed-arc plist nil from #1436# to #1356# cost 0.310094) #s(costed-arc plist nil from #1436# to #1357# cost 0.339664) #s(costed-arc plist nil from #1436# to #1358# cost 0.484235) #s(costed-arc plist nil from #1436# to #985# cost 0.439874) #s(costed-arc plist nil from #1436# to #989# cost 0.355074) #s(costed-arc plist nil from #1436# to #1191# cost 0.402242) #s(costed-arc plist nil from #1436# to #1185# cost 0.477892) #s(costed-arc plist nil from #1436# to #1359# cost 0.561263)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(224.289 50.8799 35.9085 129.495 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(136.279 17.4787 24.0425 122.191 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.999901 0.014081 0.0) (-0.014081 0.999901 0.0) (0.0 0.0 1.0)) pos #f(105.056 -88.0863 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.873002 -0.487716 0.0) (0.487716 0.873002 0.0) (0.0 0.0 1.0)) pos #f(135.475 -58.5117 0.0)) object-coords-index 16 object-coords #720# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.332122) #s(costed-arc plist nil from #1429# to #1437=#s(extended-node plist ((:name . "l-2-3-15")) arc-list (#s(costed-arc plist nil from #1437# to #1345# cost 0.541182) #s(costed-arc plist nil from #1437# to #1346# cost 0.330435) #s(costed-arc plist nil from #1437# to #1347# cost 0.278576) #s(costed-arc plist nil from #1437# to #1348# cost 0.297644) #s(costed-arc plist nil from #1437# to #1349# cost 0.402032) #s(costed-arc plist nil from #1437# to #1350# cost 0.482437) #s(costed-arc plist nil from #1437# to #1351# cost 0.303044) #s(costed-arc plist nil from #1437# to #1352# cost 0.120126) #s(costed-arc plist nil from #1437# to #1353# cost 0.260339) #s(costed-arc plist nil from #1437# to #1354# cost 0.348671) #s(costed-arc plist nil from #1437# to #1355# cost 0.468373) #s(costed-arc plist nil from #1437# to #1114# cost 0.316713) #s(costed-arc plist nil from #1437# to #1356# cost 0.258535) #s(costed-arc plist nil from #1437# to #1357# cost 0.238924) #s(costed-arc plist nil from #1437# to #1358# cost 0.392132) #s(costed-arc plist nil from #1437# to #985# cost 0.529959) #s(costed-arc plist nil from #1437# to #989# cost 0.391528) #s(costed-arc plist nil from #1437# to #1191# cost 0.351239) #s(costed-arc plist nil from #1437# to #1185# cost 0.3883) #s(costed-arc plist nil from #1437# to #1359# cost 0.469125)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(245.32 50.6885 17.3729 128.181 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999998 -0.001989 0.0) (0.001989 0.999998 0.0) (0.0 0.0 1.0)) pos #f(71.3411 -143.176 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.331584) #s(costed-arc plist nil from #1429# to #1367# cost 0.456277) #s(costed-arc plist nil from #1429# to #1438=#s(extended-node plist ((:name . "l-2-3-13")) arc-list (#s(costed-arc plist nil from #1438# to #1345# cost 0.721148) #s(costed-arc plist nil from #1438# to #1346# cost 0.504343) #s(costed-arc plist nil from #1438# to #1347# cost 0.358397) #s(costed-arc plist nil from #1438# to #1348# cost 0.251954) #s(costed-arc plist nil from #1438# to #1349# cost 0.217003) #s(costed-arc plist nil from #1438# to #1350# cost 0.651409) #s(costed-arc plist nil from #1438# to #1351# cost 0.451823) #s(costed-arc plist nil from #1438# to #1352# cost 0.266366) #s(costed-arc plist nil from #1438# to #1353# cost 0.203138) #s(costed-arc plist nil from #1438# to #1354# cost 0.127505) #s(costed-arc plist nil from #1438# to #1355# cost 0.63376) #s(costed-arc plist nil from #1438# to #1114# cost 0.475629) #s(costed-arc plist nil from #1438# to #1356# cost 0.355962) #s(costed-arc plist nil from #1438# to #1357# cost 0.226081) #s(costed-arc plist nil from #1438# to #1358# cost 0.212012) #s(costed-arc plist nil from #1438# to #985# cost 0.693831) #s(costed-arc plist nil from #1438# to #989# cost 0.541895) #s(costed-arc plist nil from #1438# to #1191# cost 0.436407) #s(costed-arc plist nil from #1438# to #1185# cost 0.354694) #s(costed-arc plist nil from #1438# to #1359# cost 0.328365)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(253.567 49.0754 -20.1679 143.194 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999997 0.002249 0.0) (-0.002249 0.999997 0.0) (0.0 0.0 1.0)) pos #f(65.2888 -114.209 0.0)) base-coords-optimized nil object-coords-index 13 object-coords #627# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.545962) #s(costed-arc plist nil from #1429# to #1439=#s(extended-node plist ((:name . "l-2-3-11")) arc-list (#s(costed-arc plist nil from #1439# to #1345# cost 0.371421) #s(costed-arc plist nil from #1439# to #1346# cost 0.309267) #s(costed-arc plist nil from #1439# to #1347# cost 0.361633) #s(costed-arc plist nil from #1439# to #1348# cost 0.43393) #s(costed-arc plist nil from #1439# to #1349# cost 0.559174) #s(costed-arc plist nil from #1439# to #1350# cost 0.26782) #s(costed-arc plist nil from #1439# to #1351# cost 0.234542) #s(costed-arc plist nil from #1439# to #1352# cost 0.230352) #s(costed-arc plist nil from #1439# to #1353# cost 0.369156) #s(costed-arc plist nil from #1439# to #1354# cost 0.473613) #s(costed-arc plist nil from #1439# to #1355# cost 0.230291) #s(costed-arc plist nil from #1439# to #1114# cost 0.23097) #s(costed-arc plist nil from #1439# to #1356# cost 0.329446) #s(costed-arc plist nil from #1439# to #1357# cost 0.381287) #s(costed-arc plist nil from #1439# to #1358# cost 0.511134) #s(costed-arc plist nil from #1439# to #985# cost 0.28778) #s(costed-arc plist nil from #1439# to #989# cost 0.303635) #s(costed-arc plist nil from #1439# to #1191# cost 0.408801) #s(costed-arc plist nil from #1439# to #1185# cost 0.500119) #s(costed-arc plist nil from #1439# to #1359# cost 0.581719)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(190.925 55.3287 57.6559 130.849 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999963 -0.008554 0.0) (0.008554 0.999963 0.0) (0.0 0.0 1.0)) pos #f(30.0412 -41.5561 0.0)) base-coords-optimized nil object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.426261) #s(costed-arc plist nil from #1429# to #1361# cost 0.386651) #s(costed-arc plist nil from #1429# to #1440=#s(extended-node plist ((:name . "l-2-3-9")) arc-list (#s(costed-arc plist nil from #1440# to #1345# cost 0.682257) #s(costed-arc plist nil from #1440# to #1346# cost 0.473805) #s(costed-arc plist nil from #1440# to #1347# cost 0.37862) #s(costed-arc plist nil from #1440# to #1348# cost 0.398813) #s(costed-arc plist nil from #1440# to #1349# cost 0.511152) #s(costed-arc plist nil from #1440# to #1350# cost 0.589931) #s(costed-arc plist nil from #1440# to #1351# cost 0.381629) #s(costed-arc plist nil from #1440# to #1352# cost 0.208026) #s(costed-arc plist nil from #1440# to #1353# cost 0.295527) #s(costed-arc plist nil from #1440# to #1354# cost 0.410137) #s(costed-arc plist nil from #1440# to #1355# cost 0.528908) #s(costed-arc plist nil from #1440# to #1114# cost 0.307444) #s(costed-arc plist nil from #1440# to #1356# cost 0.16802) #s(costed-arc plist nil from #1440# to #1357# cost 0.210394) #s(costed-arc plist nil from #1440# to #1358# cost 0.353295) #s(costed-arc plist nil from #1440# to #985# cost 0.500401) #s(costed-arc plist nil from #1440# to #989# cost 0.324282) #s(costed-arc plist nil from #1440# to #1191# cost 0.231241) #s(costed-arc plist nil from #1440# to #1185# cost 0.27217) #s(costed-arc plist nil from #1440# to #1359# cost 0.380618)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(235.981 55.3472 16.6761 139.499 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998975 -0.045274 0.0) (0.045274 0.998975 0.0) (0.0 0.0 1.0)) pos #f(-59.9201 -215.512 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.395815) #s(costed-arc plist nil from #1429# to #1441=#s(extended-node plist ((:name . "l-2-3-8")) arc-list (#s(costed-arc plist nil from #1441# to #1345# cost 0.780668) #s(costed-arc plist nil from #1441# to #1346# cost 0.566806) #s(costed-arc plist nil from #1441# to #1347# cost 0.455115) #s(costed-arc plist nil from #1441# to #1348# cost 0.397275) #s(costed-arc plist nil from #1441# to #1349# cost 0.456386) #s(costed-arc plist nil from #1441# to #1350# cost 0.700416) #s(costed-arc plist nil from #1441# to #1351# cost 0.496476) #s(costed-arc plist nil from #1441# to #1352# cost 0.300132) #s(costed-arc plist nil from #1441# to #1353# cost 0.308885) #s(costed-arc plist nil from #1441# to #1354# cost 0.363912) #s(costed-arc plist nil from #1441# to #1355# cost 0.64891) #s(costed-arc plist nil from #1441# to #1114# cost 0.430309) #s(costed-arc plist nil from #1441# to #1356# cost 0.285258) #s(costed-arc plist nil from #1441# to #1357# cost 0.183451) #s(costed-arc plist nil from #1441# to #1358# cost 0.318805) #s(costed-arc plist nil from #1441# to #985# cost 0.615527) #s(costed-arc plist nil from #1441# to #989# cost 0.434999) #s(costed-arc plist nil from #1441# to #1191# cost 0.31665) #s(costed-arc plist nil from #1441# to #1185# cost 0.280432) #s(costed-arc plist nil from #1441# to #1359# cost 0.354137)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(248.71 55.8161 -1.98211 129.361 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.998881 -0.047291 0.0) (0.047291 0.998881 0.0) (0.0 0.0 1.0)) pos #f(-54.6547 -235.612 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.419712) #s(costed-arc plist nil from #1429# to #1442=#s(extended-node plist ((:name . "l-2-3-7")) arc-list (#s(costed-arc plist nil from #1442# to #1345# cost 0.858709) #s(costed-arc plist nil from #1442# to #1346# cost 0.643234) #s(costed-arc plist nil from #1442# to #1347# cost 0.483778) #s(costed-arc plist nil from #1442# to #1348# cost 0.383015) #s(costed-arc plist nil from #1442# to #1349# cost 0.364776) #s(costed-arc plist nil from #1442# to #1350# cost 0.761933) #s(costed-arc plist nil from #1442# to #1351# cost 0.543734) #s(costed-arc plist nil from #1442# to #1352# cost 0.372887) #s(costed-arc plist nil from #1442# to #1353# cost 0.264608) #s(costed-arc plist nil from #1442# to #1354# cost 0.214226) #s(costed-arc plist nil from #1442# to #1355# cost 0.696184) #s(costed-arc plist nil from #1442# to #1114# cost 0.475533) #s(costed-arc plist nil from #1442# to #1356# cost 0.311412) #s(costed-arc plist nil from #1442# to #1357# cost 0.212125) #s(costed-arc plist nil from #1442# to #1358# cost 0.160664) #s(costed-arc plist nil from #1442# to #985# cost 0.669111) #s(costed-arc plist nil from #1442# to #989# cost 0.486627) #s(costed-arc plist nil from #1442# to #1191# cost 0.346958) #s(costed-arc plist nil from #1442# to #1185# cost 0.251489) #s(costed-arc plist nil from #1442# to #1359# cost 0.236297)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(251.531 52.6786 -20.2598 148.628 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999069 -0.043135 0.0) (0.043135 0.999069 0.0) (0.0 0.0 1.0)) pos #f(-73.848 -180.058 0.0)) base-coords-optimized nil object-coords-index 7 object-coords #441# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.588453) #s(costed-arc plist nil from #1429# to #1275# cost 0.527323) #s(costed-arc plist nil from #1429# to #1443=#s(extended-node plist ((:name . "l-2-3-4")) arc-list (#s(costed-arc plist nil from #1443# to #1345# cost 0.67544) #s(costed-arc plist nil from #1443# to #1346# cost 0.515995) #s(costed-arc plist nil from #1443# to #1347# cost 0.504577) #s(costed-arc plist nil from #1443# to #1348# cost 0.565539) #s(costed-arc plist nil from #1443# to #1349# cost 0.687167) #s(costed-arc plist nil from #1443# to #1350# cost 0.554672) #s(costed-arc plist nil from #1443# to #1351# cost 0.387081) #s(costed-arc plist nil from #1443# to #1352# cost 0.362314) #s(costed-arc plist nil from #1443# to #1353# cost 0.447367) #s(costed-arc plist nil from #1443# to #1354# cost 0.571725) #s(costed-arc plist nil from #1443# to #1355# cost 0.458747) #s(costed-arc plist nil from #1443# to #1114# cost 0.253857) #s(costed-arc plist nil from #1443# to #1356# cost 0.273404) #s(costed-arc plist nil from #1443# to #1357# cost 0.36722) #s(costed-arc plist nil from #1443# to #1358# cost 0.490696) #s(costed-arc plist nil from #1443# to #985# cost 0.394981) #s(costed-arc plist nil from #1443# to #989# cost 0.21764) #s(costed-arc plist nil from #1443# to #1191# cost 0.236877) #s(costed-arc plist nil from #1443# to #1185# cost 0.321601) #s(costed-arc plist nil from #1443# to #1359# cost 0.45725)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(234.636 59.9211 37.7846 141.528 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(156.072 25.7084 27.1831 138.885 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.996779 -0.080197 0.0) (0.080197 0.996779 0.0) (0.0 0.0 1.0)) pos #f(-157.005 -208.78 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.823137 -0.567842 0.0) (0.567842 0.823137 0.0) (0.0 0.0 1.0)) pos #f(-129.507 -176.471 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.459005) #s(costed-arc plist nil from #1429# to #1444=#s(extended-node plist ((:name . "l-2-3-3")) arc-list (#s(costed-arc plist nil from #1444# to #1345# cost 0.817617) #s(costed-arc plist nil from #1444# to #1346# cost 0.617876) #s(costed-arc plist nil from #1444# to #1347# cost 0.517241) #s(costed-arc plist nil from #1444# to #1348# cost 0.535799) #s(costed-arc plist nil from #1444# to #1349# cost 0.644654) #s(costed-arc plist nil from #1444# to #1350# cost 0.707191) #s(costed-arc plist nil from #1444# to #1351# cost 0.497261) #s(costed-arc plist nil from #1444# to #1352# cost 0.363614) #s(costed-arc plist nil from #1444# to #1353# cost 0.406048) #s(costed-arc plist nil from #1444# to #1354# cost 0.523969) #s(costed-arc plist nil from #1444# to #1355# cost 0.618845) #s(costed-arc plist nil from #1444# to #1114# cost 0.393624) #s(costed-arc plist nil from #1444# to #1356# cost 0.238903) #s(costed-arc plist nil from #1444# to #1357# cost 0.323244) #s(costed-arc plist nil from #1444# to #1358# cost 0.440271) #s(costed-arc plist nil from #1444# to #985# cost 0.55636) #s(costed-arc plist nil from #1444# to #989# cost 0.3484) #s(costed-arc plist nil from #1444# to #1191# cost 0.219626) #s(costed-arc plist nil from #1444# to #1185# cost 0.276131) #s(costed-arc plist nil from #1444# to #1359# cost 0.410367)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(240.767 59.7801 17.4238 145.266 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.996024 -0.089082 0.0) (0.089082 0.996024 0.0) (0.0 0.0 1.0)) pos #f(-185.511 -277.012 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.507837) #s(costed-arc plist nil from #1429# to #1445=#s(extended-node plist ((:name . "l-2-3-2")) arc-list (#s(costed-arc plist nil from #1445# to #1345# cost 0.921825) #s(costed-arc plist nil from #1445# to #1346# cost 0.712667) #s(costed-arc plist nil from #1445# to #1347# cost 0.569246) #s(costed-arc plist nil from #1445# to #1348# cost 0.516494) #s(costed-arc plist nil from #1445# to #1349# cost 0.582953) #s(costed-arc plist nil from #1445# to #1350# cost 0.814907) #s(costed-arc plist nil from #1445# to #1351# cost 0.597948) #s(costed-arc plist nil from #1445# to #1352# cost 0.438387) #s(costed-arc plist nil from #1445# to #1353# cost 0.367103) #s(costed-arc plist nil from #1445# to #1354# cost 0.44655) #s(costed-arc plist nil from #1445# to #1355# cost 0.729019) #s(costed-arc plist nil from #1445# to #1114# cost 0.504345) #s(costed-arc plist nil from #1445# to #1356# cost 0.337468) #s(costed-arc plist nil from #1445# to #1357# cost 0.289696) #s(costed-arc plist nil from #1445# to #1358# cost 0.351628) #s(costed-arc plist nil from #1445# to #985# cost 0.667024) #s(costed-arc plist nil from #1445# to #989# cost 0.456569) #s(costed-arc plist nil from #1445# to #1191# cost 0.296708) #s(costed-arc plist nil from #1445# to #1185# cost 0.226945) #s(costed-arc plist nil from #1445# to #1359# cost 0.330348)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(244.42 59.975 -1.34436 149.307 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99591 -0.090356 0.0) (0.090356 0.99591 0.0) (0.0 0.0 1.0)) pos #f(-190.8 -291.693 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.583619) #s(costed-arc plist nil from #1429# to #1446=#s(extended-node plist ((:name . "l-2-3-1")) arc-list (#s(costed-arc plist nil from #1446# to #1345# cost 0.992649) #s(costed-arc plist nil from #1446# to #1346# cost 0.780616) #s(costed-arc plist nil from #1446# to #1347# cost 0.622921) #s(costed-arc plist nil from #1446# to #1348# cost 0.53446) #s(costed-arc plist nil from #1446# to #1349# cost 0.531066) #s(costed-arc plist nil from #1446# to #1350# cost 0.885331) #s(costed-arc plist nil from #1446# to #1351# cost 0.665957) #s(costed-arc plist nil from #1446# to #1352# cost 0.505674) #s(costed-arc plist nil from #1446# to #1353# cost 0.395002) #s(costed-arc plist nil from #1446# to #1354# cost 0.373464) #s(costed-arc plist nil from #1446# to #1355# cost 0.799811) #s(costed-arc plist nil from #1446# to #1114# cost 0.575953) #s(costed-arc plist nil from #1446# to #1356# cost 0.4091) #s(costed-arc plist nil from #1446# to #1357# cost 0.329381) #s(costed-arc plist nil from #1446# to #1358# cost 0.230351) #s(costed-arc plist nil from #1446# to #985# cost 0.738717) #s(costed-arc plist nil from #1446# to #989# cost 0.527766) #s(costed-arc plist nil from #1446# to #1191# cost 0.365083) #s(costed-arc plist nil from #1446# to #1185# cost 0.260983) #s(costed-arc plist nil from #1446# to #1359# cost 0.242146)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 3 door-angle -80 solved t robot-pose #f(248.419 60.2172 -20.2138 154.039 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.99638 -0.085013 0.0) (0.085013 0.99638 0.0) (0.0 0.0 1.0)) pos #f(-177.946 -257.052 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.665802)) arm :larm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(226.973 63.2446 35.3785 108.949 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(154.643 28.8158 25.4145 102.147 -120.0 20.0 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.998405 0.056465 0.0) (-0.056465 0.998405 0.0) (0.0 0.0 1.0)) pos #f(82.9003 -339.746 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.892887 -0.45028 0.0) (0.45028 0.892887 0.0) (0.0 0.0 1.0)) pos #f(114.546 -311.488 0.0)) object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1428# to #1427# cost 0)) arm :arms islands (#1447# #1448#) contact-point-index nil contact-point nil contact-type nil graph-depth 2 door-angle -60 solved nil robot-pose #f(230.235 -21.2591 37.0977 173.976 -120.0 20.0 -30.0 180.0 2.4892 16.6637 -156.592 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.045426 -0.998968 0.0) (0.998968 -0.045426 0.0) (0.0 0.0 1.0)) pos #f(299.365 -129.335 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1427# to #17# cost 0.3877) #s(costed-arc plist nil from #1427# to #1363# cost 0.423554) #s(costed-arc plist nil from #1427# to #1277# cost 0.516665) #s(costed-arc plist nil from #1427# to #1341# cost 0.576385) #s(costed-arc plist nil from #1427# to #1329# cost 0.413298) #s(costed-arc plist nil from #1427# to #1398# cost 0.538974) #s(costed-arc plist nil from #1427# to #1271# cost 0.487033) #s(costed-arc plist nil from #1427# to #1399# cost 0.719029) #s(costed-arc plist nil from #1427# to #1323# cost 0.721831) #s(costed-arc plist nil from #1427# to #1400# cost 0.770371) #s(costed-arc plist nil from #1427# to #1315# cost 0.999361) #s(costed-arc plist nil from #1427# to #1401# cost 1.17713) #s(costed-arc plist nil from #1427# to #1402# cost 1.07456) #s(costed-arc plist nil from #1427# to #1403# cost 1.28859) #s(costed-arc plist nil from #1427# to #1404# cost 1.34939) #s(costed-arc plist nil from #1427# to #1405# cost 1.46419) #s(costed-arc plist nil from #1427# to #1406# cost 1.5428) #s(costed-arc plist nil from #1427# to #1407# cost 1.67685) #s(costed-arc plist nil from #1427# to #1408# cost 1.84703)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(256.384 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 2.44534 19.6062 -157.962 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.045426 -0.998968 0.0) (0.998968 -0.045426 0.0) (0.0 0.0 1.0)) pos #f(299.365 -129.335 0.0)) base-coords-optimized nil object-coords-index 15 object-coords #689# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.319587) #s(costed-arc plist nil from #4# to #1411# cost 0.385325) #s(costed-arc plist nil from #4# to #13# cost 0.495713) #s(costed-arc plist nil from #4# to #1449=#s(extended-node plist ((:name . "r-2-2-11")) arc-list (#s(costed-arc plist nil from #1449# to #17# cost 0.898006) #s(costed-arc plist nil from #1449# to #1363# cost 0.810319) #s(costed-arc plist nil from #1449# to #1277# cost 0.910013) #s(costed-arc plist nil from #1449# to #1341# cost 1.05323) #s(costed-arc plist nil from #1449# to #1329# cost 0.729872) #s(costed-arc plist nil from #1449# to #1398# cost 0.971276) #s(costed-arc plist nil from #1449# to #1271# cost 0.92249) #s(costed-arc plist nil from #1449# to #1399# cost 0.958087) #s(costed-arc plist nil from #1449# to #1323# cost 1.02509) #s(costed-arc plist nil from #1449# to #1400# cost 0.527635) #s(costed-arc plist nil from #1449# to #1315# cost 1.21117) #s(costed-arc plist nil from #1449# to #1401# cost 1.42253) #s(costed-arc plist nil from #1449# to #1402# cost 1.34285) #s(costed-arc plist nil from #1449# to #1403# cost 1.51102) #s(costed-arc plist nil from #1449# to #1404# cost 1.48401) #s(costed-arc plist nil from #1449# to #1405# cost 1.67468) #s(costed-arc plist nil from #1449# to #1406# cost 1.77297) #s(costed-arc plist nil from #1449# to #1407# cost 1.90925) #s(costed-arc plist nil from #1449# to #1408# cost 2.08898)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(78.2972 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -38.6241 39.7616 -168.268 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(134.64 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -73.93 48.4129 -171.109 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((-0.326237 -0.945288 0.0) (0.945288 -0.326237 0.0) (0.0 0.0 1.0)) pos #f(-88.8238 -184.422 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((-0.755174 -0.655525 0.0) (0.655525 -0.755174 0.0) (0.0 0.0 1.0)) pos #f(-73.4923 -210.867 0.0)) object-coords-index 11 object-coords #565# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.872858) #s(costed-arc plist nil from #4# to #1423# cost 0.44521) #s(costed-arc plist nil from #4# to #1450=#s(extended-node plist ((:name . "r-2-2-9")) arc-list (#s(costed-arc plist nil from #1450# to #17# cost 0.670029) #s(costed-arc plist nil from #1450# to #1363# cost 0.580691) #s(costed-arc plist nil from #1450# to #1277# cost 0.606125) #s(costed-arc plist nil from #1450# to #1341# cost 0.687819) #s(costed-arc plist nil from #1450# to #1329# cost 0.689562) #s(costed-arc plist nil from #1450# to #1398# cost 0.380777) #s(costed-arc plist nil from #1450# to #1271# cost 0.337482) #s(costed-arc plist nil from #1450# to #1399# cost 0.377307) #s(costed-arc plist nil from #1450# to #1323# cost 0.509133) #s(costed-arc plist nil from #1450# to #1400# cost 0.893326) #s(costed-arc plist nil from #1450# to #1315# cost 0.449988) #s(costed-arc plist nil from #1450# to #1401# cost 0.506636) #s(costed-arc plist nil from #1450# to #1402# cost 0.487258) #s(costed-arc plist nil from #1450# to #1403# cost 0.670152) #s(costed-arc plist nil from #1450# to #1404# cost 0.786718) #s(costed-arc plist nil from #1450# to #1405# cost 0.851326) #s(costed-arc plist nil from #1450# to #1406# cost 0.880224) #s(costed-arc plist nil from #1450# to #1407# cost 1.00604) #s(costed-arc plist nil from #1450# to #1408# cost 1.2176)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(231.878 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.50798 16.3193 -142.081 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.468876 -0.883264 0.0) (0.883264 0.468876 0.0) (0.0 0.0 1.0)) pos #f(-70.9928 -113.156 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.597729) #s(costed-arc plist nil from #4# to #1451=#s(extended-node plist ((:name . "r-2-2-8")) arc-list (#s(costed-arc plist nil from #1451# to #17# cost 0.65218) #s(costed-arc plist nil from #1451# to #1363# cost 0.602129) #s(costed-arc plist nil from #1451# to #1277# cost 0.605836) #s(costed-arc plist nil from #1451# to #1341# cost 0.622802) #s(costed-arc plist nil from #1451# to #1329# cost 0.716624) #s(costed-arc plist nil from #1451# to #1398# cost 0.429262) #s(costed-arc plist nil from #1451# to #1271# cost 0.326553) #s(costed-arc plist nil from #1451# to #1399# cost 0.44339) #s(costed-arc plist nil from #1451# to #1323# cost 0.506749) #s(costed-arc plist nil from #1451# to #1400# cost 0.990377) #s(costed-arc plist nil from #1451# to #1315# cost 0.682375) #s(costed-arc plist nil from #1451# to #1401# cost 0.775174) #s(costed-arc plist nil from #1451# to #1402# cost 0.522154) #s(costed-arc plist nil from #1451# to #1403# cost 0.803568) #s(costed-arc plist nil from #1451# to #1404# cost 1.01118) #s(costed-arc plist nil from #1451# to #1405# cost 1.05924) #s(costed-arc plist nil from #1451# to #1406# cost 1.07129) #s(costed-arc plist nil from #1451# to #1407# cost 1.16149) #s(costed-arc plist nil from #1451# to #1408# cost 1.3055)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(273.642 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 18.4696 2.14143 -159.724 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.396231 -0.918151 0.0) (0.918151 0.396231 0.0) (0.0 0.0 1.0)) pos #f(64.5854 -175.684 0.0)) base-coords-optimized nil object-coords-index 8 object-coords #472# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.437518) #s(costed-arc plist nil from #4# to #9# cost 0.562869) #s(costed-arc plist nil from #4# to #1452=#s(extended-node plist ((:name . "r-2-2-5")) arc-list (#s(costed-arc plist nil from #1452# to #17# cost 0.708655) #s(costed-arc plist nil from #1452# to #1363# cost 0.747609) #s(costed-arc plist nil from #1452# to #1277# cost 0.830374) #s(costed-arc plist nil from #1452# to #1341# cost 0.938621) #s(costed-arc plist nil from #1452# to #1329# cost 0.642101) #s(costed-arc plist nil from #1452# to #1398# cost 0.517829) #s(costed-arc plist nil from #1452# to #1271# cost 0.490314) #s(costed-arc plist nil from #1452# to #1399# cost 0.546623) #s(costed-arc plist nil from #1452# to #1323# cost 0.729081) #s(costed-arc plist nil from #1452# to #1400# cost 0.781678) #s(costed-arc plist nil from #1452# to #1315# cost 0.419851) #s(costed-arc plist nil from #1452# to #1401# cost 0.62323) #s(costed-arc plist nil from #1452# to #1402# cost 0.569266) #s(costed-arc plist nil from #1452# to #1403# cost 0.788055) #s(costed-arc plist nil from #1452# to #1404# cost 0.535899) #s(costed-arc plist nil from #1452# to #1405# cost 0.749599) #s(costed-arc plist nil from #1452# to #1406# cost 0.899276) #s(costed-arc plist nil from #1452# to #1407# cost 1.08139) #s(costed-arc plist nil from #1452# to #1408# cost 1.3055)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(150.281 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 9.40758 50.87 -154.853 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(173.396 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -5.19462 55.3051 -188.298 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.476565 -0.879139 0.0) (0.879139 0.476565 0.0) (0.0 0.0 1.0)) pos #f(-186.443 -67.5188 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.177816 -0.984064 0.0) (0.984064 0.177816 0.0) (0.0 0.0 1.0)) pos #f(-173.702 -103.512 0.0)) object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.78097) #s(costed-arc plist nil from #4# to #1453=#s(extended-node plist ((:name . "r-2-2-4")) arc-list (#s(costed-arc plist nil from #1453# to #17# cost 0.887825) #s(costed-arc plist nil from #1453# to #1363# cost 0.901751) #s(costed-arc plist nil from #1453# to #1277# cost 0.953416) #s(costed-arc plist nil from #1453# to #1341# cost 1.03913) #s(costed-arc plist nil from #1453# to #1329# cost 0.868358) #s(costed-arc plist nil from #1453# to #1398# cost 0.627107) #s(costed-arc plist nil from #1453# to #1271# cost 0.61955) #s(costed-arc plist nil from #1453# to #1399# cost 0.695201) #s(costed-arc plist nil from #1453# to #1323# cost 0.84161) #s(costed-arc plist nil from #1453# to #1400# cost 1.06147) #s(costed-arc plist nil from #1453# to #1315# cost 0.413305) #s(costed-arc plist nil from #1453# to #1401# cost 0.467393) #s(costed-arc plist nil from #1453# to #1402# cost 0.395098) #s(costed-arc plist nil from #1453# to #1403# cost 0.625851) #s(costed-arc plist nil from #1453# to #1404# cost 0.512673) #s(costed-arc plist nil from #1453# to #1405# cost 0.529775) #s(costed-arc plist nil from #1453# to #1406# cost 0.693923) #s(costed-arc plist nil from #1453# to #1407# cost 0.885507) #s(costed-arc plist nil from #1453# to #1408# cost 1.12029)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(243.371 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 25.8501 39.2724 -148.008 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(288.962 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -0.271477 46.0252 -214.859 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.654146 -0.756368 0.0) (0.756368 0.654146 0.0) (0.0 0.0 1.0)) pos #f(-145.676 -112.163 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.188385 -0.982095 0.0) (0.982095 0.188385 0.0) (0.0 0.0 1.0)) pos #f(-142.609 -154.479 0.0)) object-coords-index 4 object-coords #348# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.871495) #s(costed-arc plist nil from #4# to #1454=#s(extended-node plist ((:name . "r-2-2-3")) arc-list (#s(costed-arc plist nil from #1454# to #17# cost 1.0404) #s(costed-arc plist nil from #1454# to #1363# cost 1.00073) #s(costed-arc plist nil from #1454# to #1277# cost 1.01265) #s(costed-arc plist nil from #1454# to #1341# cost 1.07074) #s(costed-arc plist nil from #1454# to #1329# cost 1.04733) #s(costed-arc plist nil from #1454# to #1398# cost 0.739342) #s(costed-arc plist nil from #1454# to #1271# cost 0.717469) #s(costed-arc plist nil from #1454# to #1399# cost 0.760067) #s(costed-arc plist nil from #1454# to #1323# cost 0.877679) #s(costed-arc plist nil from #1454# to #1400# cost 1.201) #s(costed-arc plist nil from #1454# to #1315# cost 0.537139) #s(costed-arc plist nil from #1454# to #1401# cost 0.373176) #s(costed-arc plist nil from #1454# to #1402# cost 0.36479) #s(costed-arc plist nil from #1454# to #1403# cost 0.541999) #s(costed-arc plist nil from #1454# to #1404# cost 0.55761) #s(costed-arc plist nil from #1454# to #1405# cost 0.553109) #s(costed-arc plist nil from #1454# to #1406# cost 0.534123) #s(costed-arc plist nil from #1454# to #1407# cost 0.723554) #s(costed-arc plist nil from #1454# to #1408# cost 0.966895)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(263.676 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.7514 20.111 -142.151 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.73044 -0.682977 0.0) (0.682977 0.73044 0.0) (0.0 0.0 1.0)) pos #f(-170.291 -166.46 0.0)) base-coords-optimized nil object-coords-index 3 object-coords #317# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0.927322) #s(costed-arc plist nil from #4# to #1455=#s(extended-node plist ((:name . "r-2-2-2")) arc-list (#s(costed-arc plist nil from #1455# to #17# cost 1.20798) #s(costed-arc plist nil from #1455# to #1363# cost 1.11) #s(costed-arc plist nil from #1455# to #1277# cost 1.07047) #s(costed-arc plist nil from #1455# to #1341# cost 1.09236) #s(costed-arc plist nil from #1455# to #1329# cost 1.21654) #s(costed-arc plist nil from #1455# to #1398# cost 0.89505) #s(costed-arc plist nil from #1455# to #1271# cost 0.85039) #s(costed-arc plist nil from #1455# to #1399# cost 0.808434) #s(costed-arc plist nil from #1455# to #1323# cost 0.888646) #s(costed-arc plist nil from #1455# to #1400# cost 1.29471) #s(costed-arc plist nil from #1455# to #1315# cost 0.649412) #s(costed-arc plist nil from #1455# to #1401# cost 0.436618) #s(costed-arc plist nil from #1455# to #1402# cost 0.413542) #s(costed-arc plist nil from #1455# to #1403# cost 0.513513) #s(costed-arc plist nil from #1455# to #1404# cost 0.660151) #s(costed-arc plist nil from #1455# to #1405# cost 0.570533) #s(costed-arc plist nil from #1455# to #1406# cost 0.514715) #s(costed-arc plist nil from #1455# to #1407# cost 0.522944) #s(costed-arc plist nil from #1455# to #1408# cost 0.786506)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(269.619 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 29.1045 1.08609 -134.707 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized #f(262.035 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 32.3493 -1.39981 -98.978 -120.0 -20.0 -30.0 180.0 0.0 0.0) base-coords #s(coordinates plist nil rot #2f((0.79298 -0.609248 0.0) (0.609248 0.79298 0.0) (0.0 0.0 1.0)) pos #f(-222.606 -156.692 0.0)) base-coords-optimized #s(coordinates plist nil rot #2f((0.776671 -0.629906 0.0) (0.629906 0.776671 0.0) (0.0 0.0 1.0)) pos #f(-188.537 -168.349 0.0)) object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.07289) #s(costed-arc plist nil from #4# to #1456=#s(extended-node plist ((:name . "r-2-2-1")) arc-list (#s(costed-arc plist nil from #1456# to #17# cost 1.40408) #s(costed-arc plist nil from #1456# to #1363# cost 1.28052) #s(costed-arc plist nil from #1456# to #1277# cost 1.21909) #s(costed-arc plist nil from #1456# to #1341# cost 1.19866) #s(costed-arc plist nil from #1456# to #1329# cost 1.40789) #s(costed-arc plist nil from #1456# to #1398# cost 1.10234) #s(costed-arc plist nil from #1456# to #1271# cost 1.01461) #s(costed-arc plist nil from #1456# to #1399# cost 0.916738) #s(costed-arc plist nil from #1456# to #1323# cost 0.97192) #s(costed-arc plist nil from #1456# to #1400# cost 1.37074) #s(costed-arc plist nil from #1456# to #1315# cost 0.759906) #s(costed-arc plist nil from #1456# to #1401# cost 0.553825) #s(costed-arc plist nil from #1456# to #1402# cost 0.479406) #s(costed-arc plist nil from #1456# to #1403# cost 0.513928) #s(costed-arc plist nil from #1456# to #1404# cost 0.784721) #s(costed-arc plist nil from #1456# to #1405# cost 0.502843) #s(costed-arc plist nil from #1456# to #1406# cost 0.42144) #s(costed-arc plist nil from #1456# to #1407# cost 0.420657) #s(costed-arc plist nil from #1456# to #1408# cost 0.488946)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 2 door-angle -60 solved t robot-pose #f(270.975 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 27.0534 -17.7461 -143.325 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.882873 -0.469611 0.0) (0.469611 0.882873 0.0) (0.0 0.0 1.0)) pos #f(-280.389 -68.938 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.28373)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(227.046 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 8.50516 16.1472 -159.589 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.148993 -0.988838 0.0) (0.988838 0.148993 0.0) (0.0 0.0 1.0)) pos #f(246.214 -330.399 0.0)) base-coords-optimized nil object-coords-index 9 object-coords #503# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1457# #1458#) contact-point-index nil contact-point nil contact-type nil graph-depth 1 door-angle -40 solved nil robot-pose #f(187.37 -19.3801 66.6009 13.935 -56.9999 84.4642 -30.0 180.0 9.0018 11.4691 -158.804 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.148993 -0.988838 0.0) (0.988838 0.148993 0.0) (0.0 0.0 1.0)) pos #f(246.214 -330.399 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #2# to #1# cost 0) #s(costed-arc plist nil from #2# to #7# cost 0.947455) #s(costed-arc plist nil from #2# to #11# cost 0.767762) #s(costed-arc plist nil from #2# to #1459=#s(extended-node plist ((:name . "l-1-2-2")) arc-list (#s(costed-arc plist nil from #1459# to #1300# cost 0.74581) #s(costed-arc plist nil from #1459# to #1279# cost 0.763614) #s(costed-arc plist nil from #1459# to #1293# cost 0.47774) #s(costed-arc plist nil from #1459# to #1287# cost 0.491106)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(205.062 50.1524 -1.87685 55.4018 -32.6365 29.5841 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.992124 -0.12526 0.0) (0.12526 0.992124 0.0) (0.0 0.0 1.0)) pos #f(-251.665 -494.629 0.0)) base-coords-optimized nil object-coords-index 2 object-coords #286# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.31516) #s(costed-arc plist nil from #2# to #1460=#s(extended-node plist ((:name . "l-1-2-1")) arc-list (#s(costed-arc plist nil from #1460# to #1300# cost 0.826185) #s(costed-arc plist nil from #1460# to #1279# cost 0.852362) #s(costed-arc plist nil from #1460# to #1293# cost 0.526385) #s(costed-arc plist nil from #1460# to #1287# cost 0.510334)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(217.416 42.8028 -19.8772 65.2074 -19.5515 16.8331 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.993609 -0.112878 0.0) (0.112878 0.993609 0.0) (0.0 0.0 1.0)) pos #f(-284.83 -431.092 0.0)) base-coords-optimized nil object-coords-index 1 object-coords #255# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.27911) #s(costed-arc plist nil from #2# to #1461=#s(extended-node plist ((:name . "l-1-2-0")) arc-list (#s(costed-arc plist nil from #1461# to #1300# cost 0.77789) #s(costed-arc plist nil from #1461# to #1279# cost 0.728994) #s(costed-arc plist nil from #1461# to #1293# cost 0.555927) #s(costed-arc plist nil from #1461# to #1287# cost 0.516202)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 2 door-angle -60 solved t robot-pose #f(286.014 49.2498 -20.2598 16.7307 -44.8364 54.7944 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.994963 -0.100239 0.0) (0.100239 0.994963 0.0) (0.0 0.0 1.0)) pos #f(-184.071 -416.614 0.0)) base-coords-optimized nil object-coords-index 0 object-coords #224# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 1.54844)) arm :larm islands nil contact-point-index 1 contact-point nil contact-type line graph-depth 1 door-angle -40 solved t robot-pose #f(98.1288 37.3569 26.3822 203.75 -19.968 -120.216 -30.0 180.0 -60.0 74.0 -70.0 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((0.999901 -0.014084 0.0) (0.014084 0.999901 0.0) (0.0 0.0 1.0)) pos #f(-92.997 -557.14 0.0)) base-coords-optimized nil object-coords-index 5 object-coords #379# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0) #s(costed-arc plist nil from #1# to #1462=#s(extended-node plist ((:name . #1463="r-2-1-10")) arc-list (#s(costed-arc plist nil from #1462# to #1# cost 0) #s(costed-arc plist nil from #1462# to #5# cost 0.607524) #s(costed-arc plist nil from #1462# to #1419# cost 0.72063) #s(costed-arc plist nil from #1462# to #1426# cost 0.506213) #s(costed-arc plist nil from #1462# to #1415# cost 0.319534) #s(costed-arc plist nil from #1462# to #1427# cost 0.227047) #s(costed-arc plist nil from #1462# to #1411# cost 0.303879) #s(costed-arc plist nil from #1462# to #13# cost 0.449327) #s(costed-arc plist nil from #1462# to #1449# cost 0.679425) #s(costed-arc plist nil from #1462# to #1423# cost 0.515218) #s(costed-arc plist nil from #1462# to #1450# cost 0.732712) #s(costed-arc plist nil from #1462# to #1451# cost 0.610888) #s(costed-arc plist nil from #1462# to #9# cost 0.729592) #s(costed-arc plist nil from #1462# to #1452# cost 0.826661) #s(costed-arc plist nil from #1462# to #1453# cost 0.971082) #s(costed-arc plist nil from #1462# to #1454# cost 1.07241) #s(costed-arc plist nil from #1462# to #1455# cost 1.23641) #s(costed-arc plist nil from #1462# to #1456# cost 1.45586)) arm :rarm islands nil contact-point-index 2 contact-point nil contact-type point graph-depth 1 door-angle -40 solved t robot-pose #f(159.907 60.0 74.0 70.0 -120.0 20.0 -30.0 180.0 -0.964933 28.1733 -162.796 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.003387 -0.999994 0.0) (0.999994 -0.003387 0.0) (0.0 0.0 1.0)) pos #f(227.205 -320.598 0.0)) base-coords-optimized nil object-coords-index 10 object-coords #534# ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) cost 0)) arm :arms islands (#1463# #1458#) contact-point-index nil contact-point nil contact-type nil graph-depth 1 door-angle -40 solved nil robot-pose #f(156.918 -27.571 63.5167 14.2253 -61.0303 83.5393 -30.0 180.0 -0.821544 27.764 -161.769 -120.0 -20.0 -30.0 180.0 0.0 0.0) robot-pose-optimized nil base-coords #s(coordinates plist nil rot #2f((-0.003387 -0.999994 0.0) (0.999994 -0.003387 0.0) (0.0 0.0 1.0)) pos #f(227.205 -320.598 0.0)) base-coords-optimized nil object-coords-index nil object-coords nil ik-target-coords nil torque nil overload? nil transitable-nodes nil intransitable-nodes nil) #3# #6# #1418# #1416# #1414# #1428# #1412# #1410# #14# #12# #1422# #8# #10# #1334# #1343# #1380# #18# #1366# #1362# #1364# #1276# #1332# #1278# #1340# #1328# #1330# #1360# #1274# #1270# #1272# #1322# #1327# #1326# #1324# #1314# #1376# #1378# #1313# #1339# #1373# #1370# #1266# #1263# #1259# #1261# #1253# #1255# #1309# #1311# #1248# #1245# #1243# #1306# #1299# #1292# #1290# #1301# #1303# #1338# #1297# #1288# #1382# #1381# #1239# #36# #31# #33# #1296# #1395# #1391# #1387# #1386# #1252# #1241# #40# #26# #24# #1337# #1294# #1268# #1393# #1389# #1384# #1250# #20# #38# #28# #22# #1284# #1286# #1280# #1155# #1131# #1129# #1150# #1148# #1108# #1231# #1090# #1086# #1088# #1106# #1104# #1124# #1128# #1126# #1101# #1121# #1118# #1099# #1097# #1146# #1144# #1113# #1111# #1082# #1093# #1084# #1143# #1140# #1138# #1136# #1228# #1225# #1222# #1115# #984# #982# #1219# #1216# #1213# #1204# #1202# #1210# #1207# #1069# #1064# #1068# #1066# #1134# #1063# #1042# #1036# #1041# #1040# #1038# #1133# #1077# #1071# #1059# #1048# #1054# #1053# #1052# #1050# #1200# #1198# #1154# #1153# #1018# #1020# #986# #988# #1135# #1076# #1061# #1030# #1025# #1027# #1190# #1186# #1081# #1176# #1172# #1035# #1168# #1164# #1160# #1017# #1189# #1006# #998# #1000# #1184# #1095# #1181# #1178# #1174# #1170# #1047# #1166# #1162# #1158# #1010# #1004# #1002# #1192# #1079# #1075# #1195# #1046# #1058# #1034# #1015# #1024# #994# #996# #990# #1073# #1044# #1056# #1032# #1012# #1022# #992#))
